{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/utils/Context.sol",
    "7": "contracts/ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        6534
      ],
      "ERC20": [
        6475
      ],
      "IERC20": [
        4287
      ],
      "IERC20Metadata": [
        6512
      ]
    },
    "id": 6476,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5890,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:7"
      },
      {
        "absolutePath": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 5891,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6513,
        "src": "135:75:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 5892,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 6535,
        "src": "212:51:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5893,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6476,
        "sourceUnit": 4288,
        "src": "265:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5895,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6534,
              "src": "1673:7:7"
            },
            "id": 5896,
            "nodeType": "InheritanceSpecifier",
            "src": "1673:7:7"
          },
          {
            "baseName": {
              "id": 5897,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4287,
              "src": "1682:6:7"
            },
            "id": 5898,
            "nodeType": "InheritanceSpecifier",
            "src": "1682:6:7"
          },
          {
            "baseName": {
              "id": 5899,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6512,
              "src": "1690:14:7"
            },
            "id": 5900,
            "nodeType": "InheritanceSpecifier",
            "src": "1690:14:7"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5894,
          "nodeType": "StructuredDocumentation",
          "src": "325:1328:7",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 6475,
        "linearizedBaseContracts": [
          6475,
          6512,
          4287,
          6534
        ],
        "name": "ERC20",
        "nameLocation": "1664:5:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5904,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1748:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 6475,
            "src": "1712:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5903,
              "keyType": {
                "id": 5901,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1720:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1712:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5902,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1731:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5910,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1822:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 6475,
            "src": "1766:67:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 5909,
              "keyType": {
                "id": 5905,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1774:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1766:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 5908,
                "keyType": {
                  "id": 5906,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1793:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1785:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 5907,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1804:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5912,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1858:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 6475,
            "src": "1842:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1842:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5914,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1894:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 6475,
            "src": "1879:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5913,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1879:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5916,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1921:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 6475,
            "src": "1906:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5915,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1906:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5932,
              "nodeType": "Block",
              "src": "2217:60:7",
              "statements": [
                {
                  "expression": {
                    "id": 5926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5924,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5914,
                      "src": "2228:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5925,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5919,
                      "src": "2236:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2228:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5927,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:13:7"
                },
                {
                  "expression": {
                    "id": 5930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5928,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5916,
                      "src": "2252:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5929,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5921,
                      "src": "2262:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2252:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5931,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:17:7"
                }
              ]
            },
            "documentation": {
              "id": 5917,
              "nodeType": "StructuredDocumentation",
              "src": "1937:196:7",
              "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n calling function initializeERC20."
            },
            "id": 5933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeERC20",
            "nameLocation": "2148:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5919,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2178:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 5933,
                  "src": "2164:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5918,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5921,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2199:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 5933,
                  "src": "2185:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5920,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2185:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2163:44:7"
            },
            "returnParameters": {
              "id": 5923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2217:0:7"
            },
            "scope": 6475,
            "src": "2139:138:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6499
            ],
            "body": {
              "id": 5942,
              "nodeType": "Block",
              "src": "2416:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 5940,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5914,
                    "src": "2434:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5939,
                  "id": 5941,
                  "nodeType": "Return",
                  "src": "2427:12:7"
                }
              ]
            },
            "documentation": {
              "id": 5934,
              "nodeType": "StructuredDocumentation",
              "src": "2285:56:7",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 5943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2356:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5936,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2383:8:7"
            },
            "parameters": {
              "id": 5935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2360:2:7"
            },
            "returnParameters": {
              "id": 5939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5938,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5943,
                  "src": "2401:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5937,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2400:15:7"
            },
            "scope": 6475,
            "src": "2347:100:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6505
            ],
            "body": {
              "id": 5952,
              "nodeType": "Block",
              "src": "2637:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 5950,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5916,
                    "src": "2655:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5949,
                  "id": 5951,
                  "nodeType": "Return",
                  "src": "2648:14:7"
                }
              ]
            },
            "documentation": {
              "id": 5944,
              "nodeType": "StructuredDocumentation",
              "src": "2455:105:7",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 5953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2575:6:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5946,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2604:8:7"
            },
            "parameters": {
              "id": 5945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:7"
            },
            "returnParameters": {
              "id": 5949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5953,
                  "src": "2622:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5947,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2621:15:7"
            },
            "scope": 6475,
            "src": "2566:104:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6511
            ],
            "body": {
              "id": 5962,
              "nodeType": "Block",
              "src": "3383:28:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 5960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3401:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 5959,
                  "id": 5961,
                  "nodeType": "Return",
                  "src": "3394:9:7"
                }
              ]
            },
            "documentation": {
              "id": 5954,
              "nodeType": "StructuredDocumentation",
              "src": "2678:634:7",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 5963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3327:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5956,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3358:8:7"
            },
            "parameters": {
              "id": 5955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3335:2:7"
            },
            "returnParameters": {
              "id": 5959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5963,
                  "src": "3376:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 5957,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:7:7"
            },
            "scope": 6475,
            "src": "3318:93:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4236
            ],
            "body": {
              "id": 5972,
              "nodeType": "Block",
              "src": "3546:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 5970,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5912,
                    "src": "3564:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5969,
                  "id": 5971,
                  "nodeType": "Return",
                  "src": "3557:19:7"
                }
              ]
            },
            "documentation": {
              "id": 5964,
              "nodeType": "StructuredDocumentation",
              "src": "3419:51:7",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 5973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3485:11:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3519:8:7"
            },
            "parameters": {
              "id": 5965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3496:2:7"
            },
            "returnParameters": {
              "id": 5969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5973,
                  "src": "3537:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3536:9:7"
            },
            "scope": 6475,
            "src": "3476:108:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4244
            ],
            "body": {
              "id": 5986,
              "nodeType": "Block",
              "src": "3730:44:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5982,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5904,
                      "src": "3748:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5984,
                    "indexExpression": {
                      "id": 5983,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5976,
                      "src": "3758:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3748:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5981,
                  "id": 5985,
                  "nodeType": "Return",
                  "src": "3741:25:7"
                }
              ]
            },
            "documentation": {
              "id": 5974,
              "nodeType": "StructuredDocumentation",
              "src": "3592:49:7",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 5987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3656:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3703:8:7"
            },
            "parameters": {
              "id": 5977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5976,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3674:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 5987,
                  "src": "3666:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3665:17:7"
            },
            "returnParameters": {
              "id": 5981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5987,
                  "src": "3721:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3721:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3720:9:7"
            },
            "scope": 6475,
            "src": "3647:127:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4254
            ],
            "body": {
              "id": 6011,
              "nodeType": "Block",
              "src": "4065:108:7",
              "statements": [
                {
                  "assignments": [
                    5999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5999,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4084:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6011,
                      "src": "4076:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5998,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4076:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6002,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6000,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6524,
                      "src": "4092:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4092:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4076:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6004,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5999,
                        "src": "4125:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6005,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5990,
                        "src": "4132:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6006,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5992,
                        "src": "4136:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6003,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6235,
                      "src": "4115:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4115:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6008,
                  "nodeType": "ExpressionStatement",
                  "src": "4115:28:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4161:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5997,
                  "id": 6010,
                  "nodeType": "Return",
                  "src": "4154:11:7"
                }
              ]
            },
            "documentation": {
              "id": 5988,
              "nodeType": "StructuredDocumentation",
              "src": "3782:192:7",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 6012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3989:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5994,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4041:8:7"
            },
            "parameters": {
              "id": 5993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5990,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4006:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6012,
                  "src": "3998:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3998:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5992,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4018:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6012,
                  "src": "4010:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3997:28:7"
            },
            "returnParameters": {
              "id": 5997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5996,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6012,
                  "src": "4059:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5995,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4058:6:7"
            },
            "scope": 6475,
            "src": "3980:193:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4264
            ],
            "body": {
              "id": 6029,
              "nodeType": "Block",
              "src": "4334:53:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 6023,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5910,
                        "src": "4352:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 6025,
                      "indexExpression": {
                        "id": 6024,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6015,
                        "src": "4364:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4352:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6027,
                    "indexExpression": {
                      "id": 6026,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6017,
                      "src": "4371:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4352:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6022,
                  "id": 6028,
                  "nodeType": "Return",
                  "src": "4345:34:7"
                }
              ]
            },
            "documentation": {
              "id": 6013,
              "nodeType": "StructuredDocumentation",
              "src": "4181:49:7",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 6030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4245:9:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6019,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4307:8:7"
            },
            "parameters": {
              "id": 6018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6015,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4263:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6030,
                  "src": "4255:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6017,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4278:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6030,
                  "src": "4270:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4254:32:7"
            },
            "returnParameters": {
              "id": 6022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6030,
                  "src": "4325:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4324:9:7"
            },
            "scope": 6475,
            "src": "4236:151:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4274
            ],
            "body": {
              "id": 6054,
              "nodeType": "Block",
              "src": "4796:112:7",
              "statements": [
                {
                  "assignments": [
                    6042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6042,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4815:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6054,
                      "src": "4807:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4807:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6045,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6043,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6524,
                      "src": "4823:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4807:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6047,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6042,
                        "src": "4855:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6048,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6033,
                        "src": "4862:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6049,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6035,
                        "src": "4871:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6046,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6409,
                      "src": "4846:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6051,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:32:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4896:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6040,
                  "id": 6053,
                  "nodeType": "Return",
                  "src": "4889:11:7"
                }
              ]
            },
            "documentation": {
              "id": 6031,
              "nodeType": "StructuredDocumentation",
              "src": "4395:306:7",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 6055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4716:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4772:8:7"
            },
            "parameters": {
              "id": 6036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6033,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4732:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6055,
                  "src": "4724:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6035,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4749:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6055,
                  "src": "4741:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4723:33:7"
            },
            "returnParameters": {
              "id": 6040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6055,
                  "src": "4790:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4789:6:7"
            },
            "scope": 6475,
            "src": "4707:201:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4286
            ],
            "body": {
              "id": 6087,
              "nodeType": "Block",
              "src": "5591:158:7",
              "statements": [
                {
                  "assignments": [
                    6069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6069,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5610:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6087,
                      "src": "5602:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5602:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6072,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6070,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6524,
                      "src": "5620:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5620:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5602:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6074,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6058,
                        "src": "5659:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6075,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6069,
                        "src": "5665:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6076,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6062,
                        "src": "5674:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6073,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6452,
                      "src": "5643:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5643:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6078,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:38:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6080,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6058,
                        "src": "5702:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6081,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6060,
                        "src": "5708:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6082,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6062,
                        "src": "5712:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6079,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6235,
                      "src": "5692:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5692:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6084,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:27:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5737:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6067,
                  "id": 6086,
                  "nodeType": "Return",
                  "src": "5730:11:7"
                }
              ]
            },
            "documentation": {
              "id": 6056,
              "nodeType": "StructuredDocumentation",
              "src": "4916:566:7",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 6088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5497:12:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6064,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5567:8:7"
            },
            "parameters": {
              "id": 6063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6058,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5518:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6088,
                  "src": "5510:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5510:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6060,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5532:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6088,
                  "src": "5524:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6062,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5544:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6088,
                  "src": "5536:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5536:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5509:42:7"
            },
            "returnParameters": {
              "id": 6067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6088,
                  "src": "5585:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6065,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5585:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5584:6:7"
            },
            "scope": 6475,
            "src": "5488:261:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6116,
              "nodeType": "Block",
              "src": "6252:144:7",
              "statements": [
                {
                  "assignments": [
                    6099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6099,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6271:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6116,
                      "src": "6263:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6098,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6263:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6102,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6100,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6524,
                      "src": "6279:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6279:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6263:28:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6104,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6099,
                        "src": "6311:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6105,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6091,
                        "src": "6318:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6107,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6099,
                              "src": "6337:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6108,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6091,
                              "src": "6344:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6106,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6030,
                            "src": "6327:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 6109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6327:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 6110,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6093,
                          "src": "6355:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6327:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6103,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6409,
                      "src": "6302:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6113,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:64:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6384:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6097,
                  "id": 6115,
                  "nodeType": "Return",
                  "src": "6377:11:7"
                }
              ]
            },
            "documentation": {
              "id": 6089,
              "nodeType": "StructuredDocumentation",
              "src": "5757:395:7",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 6117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6167:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6091,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6193:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6117,
                  "src": "6185:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6185:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6093,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6210:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6117,
                  "src": "6202:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6202:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6184:37:7"
            },
            "returnParameters": {
              "id": 6097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6096,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6117,
                  "src": "6246:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6246:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6245:6:7"
            },
            "scope": 6475,
            "src": "6158:238:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6157,
              "nodeType": "Block",
              "src": "6998:337:7",
              "statements": [
                {
                  "assignments": [
                    6128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6128,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7017:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6157,
                      "src": "7009:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6127,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7009:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6129,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6524,
                      "src": "7025:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 6130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7025:12:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7009:28:7"
                },
                {
                  "assignments": [
                    6133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6133,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "7056:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6157,
                      "src": "7048:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6132,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7048:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6135,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6128,
                        "src": "7085:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6136,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6120,
                        "src": "7092:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6134,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6030,
                      "src": "7075:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 6137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7075:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7048:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6140,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6133,
                          "src": "7119:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6141,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6122,
                          "src": "7139:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7119:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 6143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7156:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 6139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7111:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7111:85:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6145,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:85:7"
                },
                {
                  "id": 6154,
                  "nodeType": "UncheckedBlock",
                  "src": "7207:97:7",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6147,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6128,
                            "src": "7241:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6148,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6120,
                            "src": "7248:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6149,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6133,
                              "src": "7257:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 6150,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6122,
                              "src": "7276:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7257:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6146,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6409,
                          "src": "7232:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 6152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7232:60:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 6153,
                      "nodeType": "ExpressionStatement",
                      "src": "7232:60:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7323:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6126,
                  "id": 6156,
                  "nodeType": "Return",
                  "src": "7316:11:7"
                }
              ]
            },
            "documentation": {
              "id": 6118,
              "nodeType": "StructuredDocumentation",
              "src": "6404:489:7",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 6158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6908:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6120,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6934:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6158,
                  "src": "6926:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6926:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6122,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6951:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6158,
                  "src": "6943:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6943:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6925:42:7"
            },
            "returnParameters": {
              "id": 6126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6158,
                  "src": "6992:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6124,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6992:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6991:6:7"
            },
            "scope": 6475,
            "src": "6899:436:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6234,
              "nodeType": "Block",
              "src": "7883:728:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6169,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6161,
                          "src": "7902:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7918:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7910:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6170,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7910:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7910:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7902:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 6175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7922:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 6168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7894:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7894:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6177,
                  "nodeType": "ExpressionStatement",
                  "src": "7894:68:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6179,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6163,
                          "src": "7981:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7995:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7987:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6180,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7987:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7987:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7981:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 6185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7999:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 6178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7973:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7973:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6187,
                  "nodeType": "ExpressionStatement",
                  "src": "7973:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6189,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6161,
                        "src": "8071:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6190,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6163,
                        "src": "8077:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6191,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6165,
                        "src": "8081:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6188,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6463,
                      "src": "8050:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8050:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6193,
                  "nodeType": "ExpressionStatement",
                  "src": "8050:38:7"
                },
                {
                  "assignments": [
                    6195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6195,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8109:11:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6234,
                      "src": "8101:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8101:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6199,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6196,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5904,
                      "src": "8123:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6198,
                    "indexExpression": {
                      "id": 6197,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6161,
                      "src": "8133:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8123:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8101:37:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6201,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6195,
                          "src": "8157:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6202,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6165,
                          "src": "8172:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8157:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 6204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8180:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 6200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8149:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8149:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6206,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:72:7"
                },
                {
                  "id": 6221,
                  "nodeType": "UncheckedBlock",
                  "src": "8232:278:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 6213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 6207,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5904,
                            "src": "8257:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6209,
                          "indexExpression": {
                            "id": 6208,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6161,
                            "src": "8267:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8257:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6210,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6195,
                            "src": "8275:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6211,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6165,
                            "src": "8289:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8275:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8257:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6214,
                      "nodeType": "ExpressionStatement",
                      "src": "8257:38:7"
                    },
                    {
                      "expression": {
                        "id": 6219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 6215,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5904,
                            "src": "8475:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6217,
                          "indexExpression": {
                            "id": 6216,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6163,
                            "src": "8485:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8475:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 6218,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6165,
                          "src": "8492:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8475:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6220,
                      "nodeType": "ExpressionStatement",
                      "src": "8475:23:7"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6223,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6161,
                        "src": "8536:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6224,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6163,
                        "src": "8542:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6225,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6165,
                        "src": "8546:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6222,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "8527:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8527:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6227,
                  "nodeType": "EmitStatement",
                  "src": "8522:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6229,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6161,
                        "src": "8586:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6230,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6163,
                        "src": "8592:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6231,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6165,
                        "src": "8596:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6228,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6474,
                      "src": "8566:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6233,
                  "nodeType": "ExpressionStatement",
                  "src": "8566:37:7"
                }
              ]
            },
            "documentation": {
              "id": 6159,
              "nodeType": "StructuredDocumentation",
              "src": "7343:456:7",
              "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 6235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7814:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6161,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7832:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6235,
                  "src": "7824:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7824:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6163,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7846:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6235,
                  "src": "7838:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7838:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6165,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7858:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6235,
                  "src": "7850:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7850:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7823:42:7"
            },
            "returnParameters": {
              "id": 6167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7883:0:7"
            },
            "scope": 6475,
            "src": "7805:806:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6291,
              "nodeType": "Block",
              "src": "8963:483:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6244,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6238,
                          "src": "8982:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9001:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8993:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6245,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8993:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8993:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8982:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 6250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9005:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 6243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8974:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8974:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6252,
                  "nodeType": "ExpressionStatement",
                  "src": "8974:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9081:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9073:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9073:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9073:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6258,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6238,
                        "src": "9085:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6259,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6240,
                        "src": "9094:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6253,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6463,
                      "src": "9052:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9052:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6261,
                  "nodeType": "ExpressionStatement",
                  "src": "9052:49:7"
                },
                {
                  "expression": {
                    "id": 6264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6262,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5912,
                      "src": "9114:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6263,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6240,
                      "src": "9130:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9114:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6265,
                  "nodeType": "ExpressionStatement",
                  "src": "9114:22:7"
                },
                {
                  "id": 6272,
                  "nodeType": "UncheckedBlock",
                  "src": "9147:178:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 6270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 6266,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5904,
                            "src": "9285:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6268,
                          "indexExpression": {
                            "id": 6267,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6238,
                            "src": "9295:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9285:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 6269,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6240,
                          "src": "9307:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9285:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6271,
                      "nodeType": "ExpressionStatement",
                      "src": "9285:28:7"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9357:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9349:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9349:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9349:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6278,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6238,
                        "src": "9361:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6279,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6240,
                        "src": "9370:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6273,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "9340:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9340:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6281,
                  "nodeType": "EmitStatement",
                  "src": "9335:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9418:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9410:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9410:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9410:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6287,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6238,
                        "src": "9422:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6288,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6240,
                        "src": "9431:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6282,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6474,
                      "src": "9390:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9390:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6290,
                  "nodeType": "ExpressionStatement",
                  "src": "9390:48:7"
                }
              ]
            },
            "documentation": {
              "id": 6236,
              "nodeType": "StructuredDocumentation",
              "src": "8619:273:7",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 6292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8907:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6238,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8921:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6292,
                  "src": "8913:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8913:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6240,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8938:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6292,
                  "src": "8930:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8930:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8912:33:7"
            },
            "returnParameters": {
              "id": 6242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8963:0:7"
            },
            "scope": 6475,
            "src": "8898:548:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6363,
              "nodeType": "Block",
              "src": "9844:610:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6301,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6295,
                          "src": "9863:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9882:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9874:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6302,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9874:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9874:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9863:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 6307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9886:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 6300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9855:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9855:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6309,
                  "nodeType": "ExpressionStatement",
                  "src": "9855:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6311,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6295,
                        "src": "9956:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9973:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9965:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9965:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9965:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6316,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6297,
                        "src": "9977:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6310,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6463,
                      "src": "9935:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9935:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6318,
                  "nodeType": "ExpressionStatement",
                  "src": "9935:49:7"
                },
                {
                  "assignments": [
                    6320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6320,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "10005:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6363,
                      "src": "9997:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9997:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6324,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6321,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5904,
                      "src": "10022:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6323,
                    "indexExpression": {
                      "id": 6322,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6295,
                      "src": "10032:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10022:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9997:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6326,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6320,
                          "src": "10059:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 6327,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6297,
                          "src": "10077:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10059:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 6329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10085:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 6325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10051:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10051:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6331,
                  "nodeType": "ExpressionStatement",
                  "src": "10051:71:7"
                },
                {
                  "id": 6344,
                  "nodeType": "UncheckedBlock",
                  "src": "10133:198:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 6338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 6332,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5904,
                            "src": "10158:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6334,
                          "indexExpression": {
                            "id": 6333,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6295,
                            "src": "10168:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10158:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6335,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "10179:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6336,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6297,
                            "src": "10196:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10179:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10158:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6339,
                      "nodeType": "ExpressionStatement",
                      "src": "10158:44:7"
                    },
                    {
                      "expression": {
                        "id": 6342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 6340,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5912,
                          "src": "10297:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 6341,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6297,
                          "src": "10313:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10297:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6343,
                      "nodeType": "ExpressionStatement",
                      "src": "10297:22:7"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6346,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6295,
                        "src": "10357:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10374:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10366:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6347,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10366:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10366:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6297,
                        "src": "10378:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6345,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "10348:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10348:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6353,
                  "nodeType": "EmitStatement",
                  "src": "10343:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6355,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6295,
                        "src": "10418:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10435:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10427:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6356,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10427:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10427:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6297,
                        "src": "10439:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6354,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6474,
                      "src": "10398:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10398:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6362,
                  "nodeType": "ExpressionStatement",
                  "src": "10398:48:7"
                }
              ]
            },
            "documentation": {
              "id": 6293,
              "nodeType": "StructuredDocumentation",
              "src": "9454:319:7",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 6364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9788:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6295,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9802:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "9794:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6297,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9819:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6364,
                  "src": "9811:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9793:33:7"
            },
            "returnParameters": {
              "id": 6299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9844:0:7"
            },
            "scope": 6475,
            "src": "9779:675:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6408,
              "nodeType": "Block",
              "src": "10975:263:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6375,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6367,
                          "src": "10994:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11011:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11003:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6376,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11003:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11003:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10994:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 6381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11015:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 6374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10986:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10986:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6383,
                  "nodeType": "ExpressionStatement",
                  "src": "10986:68:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6385,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6369,
                          "src": "11073:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11092:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11084:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11084:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11084:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11073:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 6391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11096:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 6384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11065:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11065:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6393,
                  "nodeType": "ExpressionStatement",
                  "src": "11065:68:7"
                },
                {
                  "expression": {
                    "id": 6400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6394,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5910,
                          "src": "11146:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 6397,
                        "indexExpression": {
                          "id": 6395,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6367,
                          "src": "11158:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11146:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6398,
                      "indexExpression": {
                        "id": 6396,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6369,
                        "src": "11165:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11146:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6399,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6371,
                      "src": "11176:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11146:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6401,
                  "nodeType": "ExpressionStatement",
                  "src": "11146:36:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6403,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6367,
                        "src": "11207:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6404,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6369,
                        "src": "11214:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6405,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6371,
                        "src": "11223:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6402,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4230,
                      "src": "11198:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11198:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6407,
                  "nodeType": "EmitStatement",
                  "src": "11193:37:7"
                }
              ]
            },
            "documentation": {
              "id": 6365,
              "nodeType": "StructuredDocumentation",
              "src": "10462:424:7",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 6409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10901:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6367,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10918:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6409,
                  "src": "10910:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10910:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6369,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10933:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6409,
                  "src": "10925:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10925:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6371,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10950:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6409,
                  "src": "10942:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10942:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10909:48:7"
            },
            "returnParameters": {
              "id": 6373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10975:0:7"
            },
            "scope": 6475,
            "src": "10892:346:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6451,
              "nodeType": "Block",
              "src": "11619:329:7",
              "statements": [
                {
                  "assignments": [
                    6420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6420,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11638:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 6451,
                      "src": "11630:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11630:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6425,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6422,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6412,
                        "src": "11667:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6423,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6414,
                        "src": "11674:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6421,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6030,
                      "src": "11657:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 6424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11657:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11630:52:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6426,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6420,
                      "src": "11697:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11722:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6428,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11722:7:7",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 6427,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "11717:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11717:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 6431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11717:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11697:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6450,
                  "nodeType": "IfStatement",
                  "src": "11693:248:7",
                  "trueBody": {
                    "id": 6449,
                    "nodeType": "Block",
                    "src": "11736:205:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6434,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6420,
                                "src": "11759:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 6435,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6416,
                                "src": "11779:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11759:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 6437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11787:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 6433,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11751:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11751:68:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6439,
                        "nodeType": "ExpressionStatement",
                        "src": "11751:68:7"
                      },
                      {
                        "id": 6448,
                        "nodeType": "UncheckedBlock",
                        "src": "11834:96:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6441,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6412,
                                  "src": "11872:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 6442,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6414,
                                  "src": "11879:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 6443,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6420,
                                    "src": "11888:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 6444,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6416,
                                    "src": "11907:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11888:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 6440,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6409,
                                "src": "11863:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 6446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11863:51:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 6447,
                            "nodeType": "ExpressionStatement",
                            "src": "11863:51:7"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6410,
              "nodeType": "StructuredDocumentation",
              "src": "11246:277:7",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 6452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "11538:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6412,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11562:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6452,
                  "src": "11554:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11554:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6414,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11577:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6452,
                  "src": "11569:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11569:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6416,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11594:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6452,
                  "src": "11586:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11586:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11553:48:7"
            },
            "returnParameters": {
              "id": 6418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11619:0:7"
            },
            "scope": 6475,
            "src": "11529:419:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6462,
              "nodeType": "Block",
              "src": "12637:2:7",
              "statements": []
            },
            "documentation": {
              "id": 6453,
              "nodeType": "StructuredDocumentation",
              "src": "11956:586:7",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 6463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12557:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6455,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12586:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "12578:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12578:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6457,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12600:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "12592:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12592:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6459,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12612:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "12604:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12604:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12577:42:7"
            },
            "returnParameters": {
              "id": 6461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12637:0:7"
            },
            "scope": 6475,
            "src": "12548:91:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6473,
              "nodeType": "Block",
              "src": "13331:2:7",
              "statements": []
            },
            "documentation": {
              "id": 6464,
              "nodeType": "StructuredDocumentation",
              "src": "12647:590:7",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 6474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "13252:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6466,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13280:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6474,
                  "src": "13272:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13272:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6468,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13294:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6474,
                  "src": "13286:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13286:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6470,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13306:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 6474,
                  "src": "13298:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13298:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13271:42:7"
            },
            "returnParameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13331:0:7"
            },
            "scope": 6475,
            "src": "13243:90:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6476,
        "src": "1655:11681:7",
        "usedErrors": []
      }
    ],
    "src": "108:13228:7"
  },
  "bytecode": "608060405234801561001057600080fd5b5061085c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610800565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b6020821081036107fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082157634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212208f495fb8760e60c7d8a822894d0a3ddd997dd28441c3e52aa4fd793a037630e864736f6c634300080f0033",
  "bytecodeSha1": "8b6226de007014f2cb408322c319a0cb361a75b4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {},
      "3": {},
      "7": {
        "ERC20._approve": {
          "30": [
            10994,
            11013,
            true
          ],
          "31": [
            11073,
            11094,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "32": [
            11697,
            11734,
            false
          ],
          "33": [
            11759,
            11785,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7902,
            7920,
            true
          ],
          "35": [
            7981,
            7997,
            true
          ],
          "36": [
            8157,
            8178,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            7119,
            7154,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "7": {
        "ERC20._approve": {
          "16": [
            10986,
            11054
          ],
          "17": [
            11065,
            11133
          ],
          "18": [
            11146,
            11182
          ],
          "19": [
            11193,
            11230
          ]
        },
        "ERC20._spendAllowance": {
          "20": [
            11751,
            11819
          ],
          "21": [
            11863,
            11914
          ]
        },
        "ERC20._transfer": {
          "22": [
            7894,
            7962
          ],
          "23": [
            7973,
            8037
          ],
          "24": [
            8149,
            8221
          ],
          "25": [
            8257,
            8295
          ],
          "26": [
            8475,
            8498
          ],
          "27": [
            8522,
            8553
          ],
          "28": [
            8566,
            8603
          ]
        },
        "ERC20.allowance": {
          "15": [
            4345,
            4379
          ]
        },
        "ERC20.approve": {
          "5": [
            4846,
            4878
          ],
          "6": [
            4889,
            4900
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3741,
            3766
          ]
        },
        "ERC20.decimals": {
          "1": [
            3394,
            3403
          ]
        },
        "ERC20.decreaseAllowance": {
          "12": [
            7111,
            7196
          ],
          "13": [
            7232,
            7292
          ]
        },
        "ERC20.increaseAllowance": {
          "10": [
            6302,
            6366
          ]
        },
        "ERC20.name": {
          "3": [
            2427,
            2439
          ]
        },
        "ERC20.symbol": {
          "11": [
            2648,
            2662
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3557,
            3576
          ]
        },
        "ERC20.transfer": {
          "14": [
            4115,
            4143
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            5643,
            5681
          ],
          "8": [
            5692,
            5719
          ],
          "9": [
            5730,
            5741
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610800565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b6020821081036107fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082157634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212208f495fb8760e60c7d8a822894d0a3ddd997dd28441c3e52aa4fd793a037630e864736f6c634300080f0033",
  "deployedSourceMap": "1655:11681:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4707:201;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:19;;1211:22;1193:41;;1181:2;1166:18;4707:201:7;1053:187:19;3476:108:7;3564:12;;3476:108;;;1391:25:19;;;1379:2;1364:18;3476:108:7;1245:177:19;5488:261:7;;;;;;:::i;:::-;;:::i;3318:93::-;;;3401:2;1902:36:19;;1890:2;1875:18;3318:93:7;1760:184:19;6158:238:7;;;;;;:::i;:::-;;:::i;3647:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3748:18:7;3721:7;3748:18;;;;;;;;;;;;3647:127;2566:104;;;:::i;6899:436::-;;;;;;:::i;:::-;;:::i;3980:193::-;;;;;;:::i;:::-;;:::i;4236:151::-;;;;;;:::i;:::-;;:::i;2347:100::-;2401:13;2434:5;2427:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:100;:::o;4707:201::-;4790:4;719:10:3;4846:32:7;719:10:3;4862:7:7;4871:6;4846:8;:32::i;:::-;-1:-1:-1;4896:4:7;;4707:201;-1:-1:-1;;;4707:201:7:o;5488:261::-;5585:4;719:10:3;5643:38:7;5659:4;719:10:3;5674:6:7;5643:15;:38::i;:::-;5692:27;5702:4;5708:2;5712:6;5692:9;:27::i;:::-;-1:-1:-1;5737:4:7;;5488:261;-1:-1:-1;;;;5488:261:7:o;6158:238::-;6246:4;719:10:3;6302:64:7;719:10:3;6318:7:7;6355:10;6327:25;719:10:3;6318:7:7;6327:9;:25::i;:::-;:38;;;;:::i;:::-;6302:8;:64::i;2566:104::-;2622:13;2655:7;2648:14;;;;;:::i;6899:436::-;6992:4;719:10:3;6992:4:7;7075:25;719:10:3;7092:7:7;7075:9;:25::i;:::-;7048:52;;7139:15;7119:16;:35;;7111:85;;;;-1:-1:-1;;;7111:85:7;;3222:2:19;7111:85:7;;;3204:21:19;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:19;;;3344:35;3396:19;;7111:85:7;;;;;;;;;7232:60;7241:5;7248:7;7276:15;7257:16;:34;7232:8;:60::i;3980:193::-;4059:4;719:10:3;4115:28:7;719:10:3;4132:2:7;4136:6;4115:9;:28::i;4236:151::-;-1:-1:-1;;;;;4352:18:7;;;4325:7;4352:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4236:151::o;10892:346::-;-1:-1:-1;;;;;10994:19:7;;10986:68;;;;-1:-1:-1;;;10986:68:7;;3628:2:19;10986:68:7;;;3610:21:19;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:19;;;3750:34;3801:19;;10986:68:7;3426:400:19;10986:68:7;-1:-1:-1;;;;;11073:21:7;;11065:68;;;;-1:-1:-1;;;11065:68:7;;4033:2:19;11065:68:7;;;4015:21:19;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:19;;;4155:32;4204:19;;11065:68:7;3831:398:19;11065:68:7;-1:-1:-1;;;;;11146:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11198:32;;1391:25:19;;;11198:32:7;;1364:18:19;11198:32:7;;;;;;;10892:346;;;:::o;11529:419::-;11630:24;11657:25;11667:5;11674:7;11657:9;:25::i;:::-;11630:52;;-1:-1:-1;;11697:16:7;:37;11693:248;;11779:6;11759:16;:26;;11751:68;;;;-1:-1:-1;;;11751:68:7;;4436:2:19;11751:68:7;;;4418:21:19;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11751:68:7;4234:353:19;11751:68:7;11863:51;11872:5;11879:7;11907:6;11888:16;:25;11863:8;:51::i;:::-;11619:329;11529:419;;;:::o;7805:806::-;-1:-1:-1;;;;;7902:18:7;;7894:68;;;;-1:-1:-1;;;7894:68:7;;4794:2:19;7894:68:7;;;4776:21:19;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:19;;;4916:35;4968:19;;7894:68:7;4592:401:19;7894:68:7;-1:-1:-1;;;;;7981:16:7;;7973:64;;;;-1:-1:-1;;;7973:64:7;;5200:2:19;7973:64:7;;;5182:21:19;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:19;;;5322:33;5372:19;;7973:64:7;4998:399:19;7973:64:7;-1:-1:-1;;;;;8123:15:7;;8101:19;8123:15;;;;;;;;;;;8157:21;;;;8149:72;;;;-1:-1:-1;;;8149:72:7;;5604:2:19;8149:72:7;;;5586:21:19;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:19;;;5726:36;5779:19;;8149:72:7;5402:402:19;8149:72:7;-1:-1:-1;;;;;8257:15:7;;;:9;:15;;;;;;;;;;;8275:20;;;8257:38;;8475:13;;;;;;;;;;:23;;;;;;8527:26;;1391:25:19;;;8475:13:7;;8527:26;;1364:18:19;8527:26:7;;;;;;;8566:37;12548:91;14:597:19;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:19;574:15;-1:-1:-1;;570:29:19;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:19:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:19;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:19:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:19:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:19;;2790:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1655,
    13336
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x821 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0x49 0x5F 0xB8 PUSH23 0xE60C7D8A822894D0A3DDD997DD28441C3E52AA4FD793A SUB PUSH23 0x30E864736F6C634300080F003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "EQ",
      "path": "7"
    },
    "165": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "169": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1655,
        13336
      ],
      "op": "REVERT",
      "path": "7"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A0"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x69A"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "DUP1",
      "path": "7"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SUB",
      "path": "7"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "RETURN",
      "path": "7"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70B"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x232"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x735"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24A"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3401,
        3403
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70B"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMP",
      "path": "7"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26E"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMP",
      "path": "7"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x771"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMP",
      "path": "7"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "AND",
      "path": "7",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3721,
        3728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "DUP2",
      "path": "7"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "DUP2",
      "path": "7"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMP",
      "path": "7"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x290"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMP",
      "path": "7"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70B"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29F"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70B"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMP",
      "path": "7"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31F"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMP",
      "path": "7"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x793"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "415": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "417": {
      "fn": "ERC20.name",
      "offset": [
        2401,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "419": {
      "fn": "ERC20.name",
      "offset": [
        2434,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x3"
    },
    "421": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "422": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AF"
    },
    "426": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "427": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C6"
    },
    "430": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "436": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "440": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DIV",
      "path": "7"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MUL",
      "path": "7"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DB"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C6"
    },
    "474": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "LT",
      "path": "7"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FD"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DIV",
      "path": "7"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MUL",
      "path": "7"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "GT",
      "path": "7"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20B"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SUB",
      "path": "7"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "AND",
      "path": "7"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "556": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "561": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "563": {
      "fn": "ERC20.approve",
      "offset": [
        4790,
        4794
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "565": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 4
    },
    "566": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4878
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 5,
      "value": "0x240"
    },
    "569": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "570": {
      "fn": "ERC20.approve",
      "offset": [
        4862,
        4869
      ],
      "op": "DUP6",
      "path": "7"
    },
    "571": {
      "fn": "ERC20.approve",
      "offset": [
        4871,
        4877
      ],
      "op": "DUP6",
      "path": "7"
    },
    "572": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4854
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "575": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4846,
        4878
      ],
      "op": "JUMP",
      "path": "7"
    },
    "576": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4878
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4896,
        4900
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x1"
    },
    "580": {
      "fn": "ERC20.approve",
      "offset": [
        4896,
        4900
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "581": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "586": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5585,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "589": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5681
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 7,
      "value": "0x258"
    },
    "593": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5659,
        5663
      ],
      "op": "DUP6",
      "path": "7"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5674,
        5680
      ],
      "op": "DUP6",
      "path": "7"
    },
    "596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x47C"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5643,
        5681
      ],
      "op": "JUMP",
      "path": "7"
    },
    "600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5681
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5719
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 8,
      "value": "0x263"
    },
    "604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5702,
        5706
      ],
      "op": "DUP6",
      "path": "7"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5708,
        5710
      ],
      "op": "DUP6",
      "path": "7"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5712,
        5718
      ],
      "op": "DUP6",
      "path": "7"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5701
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F6"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5692,
        5719
      ],
      "op": "JUMP",
      "path": "7"
    },
    "611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5719
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5737,
        5741
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 9,
      "value": "0x1"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5737,
        5741
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "622": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "623": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6246,
        6250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "625": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "626": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6302,
        6366
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 10,
      "value": "0x240"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "630": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6318,
        6325
      ],
      "op": "DUP6",
      "path": "7"
    },
    "631": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6355,
        6365
      ],
      "op": "DUP6",
      "path": "7"
    },
    "632": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x281"
    },
    "635": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "3"
    },
    "636": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6318,
        6325
      ],
      "op": "DUP4",
      "path": "7"
    },
    "637": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "640": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6327,
        6352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "641": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "642": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28B"
    },
    "645": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "646": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "647": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x800"
    },
    "650": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6327,
        6365
      ],
      "op": "JUMP",
      "path": "7"
    },
    "651": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "652": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6302,
        6310
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "655": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6302,
        6366
      ],
      "op": "JUMP",
      "path": "7"
    },
    "656": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "657": {
      "fn": "ERC20.symbol",
      "offset": [
        2622,
        2635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "659": {
      "fn": "ERC20.symbol",
      "offset": [
        2655,
        2662
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x4"
    },
    "661": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "DUP1",
      "path": "7"
    },
    "662": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "663": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AF"
    },
    "666": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "667": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C6"
    },
    "670": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2648,
        2662
      ],
      "op": "JUMP",
      "path": "7"
    },
    "671": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "672": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6992,
        6996
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "674": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6992,
        6996
      ],
      "op": "DUP2",
      "path": "7"
    },
    "676": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7100
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AD"
    },
    "679": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7092,
        7099
      ],
      "op": "DUP7",
      "path": "7"
    },
    "681": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "684": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        7075,
        7100
      ],
      "op": "JUMP",
      "path": "7"
    },
    "685": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7100
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7048,
        7100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7048,
        7100
      ],
      "op": "POP",
      "path": "7"
    },
    "688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7139,
        7154
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 12
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7154
      ],
      "op": "LT",
      "path": "7"
    },
    "691": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7154
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x312"
    },
    "695": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP2",
      "path": "7"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "712": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP3",
      "path": "7"
    },
    "713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "ADD",
      "path": "7"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "MSTORE"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "781": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP1",
      "path": "7"
    },
    "782": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SUB",
      "path": "7"
    },
    "784": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "785": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7232,
        7292
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x263"
    },
    "790": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7241,
        7246
      ],
      "op": "DUP3",
      "path": "7"
    },
    "791": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7248,
        7255
      ],
      "op": "DUP7",
      "path": "7"
    },
    "792": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7276,
        7291
      ],
      "op": "DUP7",
      "path": "7"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7257,
        7273
      ],
      "op": "DUP5",
      "path": "7"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7257,
        7291
      ],
      "op": "SUB",
      "path": "7"
    },
    "795": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7232,
        7240
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "798": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        7232,
        7292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "799": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "800": {
      "fn": "ERC20.transfer",
      "offset": [
        4059,
        4063
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "802": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "803": {
      "fn": "ERC20.transfer",
      "offset": [
        4115,
        4143
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 14,
      "value": "0x240"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "807": {
      "fn": "ERC20.transfer",
      "offset": [
        4132,
        4134
      ],
      "op": "DUP6",
      "path": "7"
    },
    "808": {
      "fn": "ERC20.transfer",
      "offset": [
        4136,
        4142
      ],
      "op": "DUP6",
      "path": "7"
    },
    "809": {
      "fn": "ERC20.transfer",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F6"
    },
    "812": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4115,
        4143
      ],
      "op": "JUMP",
      "path": "7"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 15
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP3",
      "path": "7"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "AND",
      "path": "7"
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [
        4325,
        4332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "827": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "828": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP2",
      "path": "7"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4363
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "832": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "835": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP2",
      "path": "7"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "837": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP1",
      "path": "7"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP4",
      "path": "7"
    },
    "841": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "843": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "AND",
      "path": "7"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "DUP3",
      "path": "7"
    },
    "847": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "849": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "855": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "856": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "ERC20._approve",
      "offset": [
        10994,
        11013
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 16
    },
    "866": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10994,
        11013
      ],
      "op": "AND",
      "path": "7"
    },
    "867": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3BA"
    },
    "870": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "871": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "882": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "887": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "DUP3",
      "path": "7"
    },
    "888": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "ADD",
      "path": "7"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "953": {
      "op": "JUMP"
    },
    "954": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "ERC20._approve",
      "offset": [
        11073,
        11094
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 17
    },
    "964": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        11073,
        11094
      ],
      "op": "AND",
      "path": "7"
    },
    "965": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41B"
    },
    "968": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "969": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "DUP2",
      "path": "7"
    },
    "980": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "DUP3",
      "path": "7"
    },
    "986": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "ADD",
      "path": "7"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "1050": {
      "op": "JUMP"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 18
    },
    "1061": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1062": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "AND",
      "path": "7"
    },
    "1063": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1070": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1073": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1075": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1078": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1079": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1080": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1081": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "AND",
      "path": "7"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1084": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1085": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1086": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1087": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1088": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1089": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1090": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1091": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1092": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1093": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1094": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1095": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1096": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 19
    },
    "1097": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1098": {
      "op": "DUP5"
    },
    "1099": {
      "op": "DUP2"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1134": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1139": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SUB",
      "path": "7"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "LOG3",
      "path": "7"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "1146": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "1147": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10892,
        11238
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1148": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11529,
        11948
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1149": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1151": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x488"
    },
    "1154": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11667,
        11672
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1155": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11674,
        11681
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1156": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11666
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "1159": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11657,
        11682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1160": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1161": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11682
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1162": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11682
      ],
      "op": "POP",
      "path": "7"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "NOT"
    },
    "1166": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11697,
        11713
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1167": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11697,
        11734
      ],
      "op": "EQ",
      "path": "7"
    },
    "1168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11693,
        11941
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F0"
    },
    "1171": {
      "branch": 32,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11693,
        11941
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1172": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11779,
        11785
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 20
    },
    "1173": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11775
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11785
      ],
      "op": "LT",
      "path": "7"
    },
    "1175": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11785
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1176": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4E3"
    },
    "1179": {
      "branch": 33,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1180": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1191": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1196": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1197": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "ADD",
      "path": "7"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1241": {
      "op": "DUP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "1250": {
      "op": "JUMP"
    },
    "1251": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1252": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11863,
        11914
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0x4F0"
    },
    "1255": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11872,
        11877
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1256": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11879,
        11886
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1257": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11907,
        11913
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1258": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11888,
        11904
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1259": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11888,
        11913
      ],
      "op": "SUB",
      "path": "7"
    },
    "1260": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11863,
        11871
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "1263": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11863,
        11914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1264": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11863,
        11914
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1265": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11619,
        11948
      ],
      "op": "POP",
      "path": "7"
    },
    "1266": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11529,
        11948
      ],
      "op": "POP",
      "path": "7"
    },
    "1267": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11529,
        11948
      ],
      "op": "POP",
      "path": "7"
    },
    "1268": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11529,
        11948
      ],
      "op": "POP",
      "path": "7"
    },
    "1269": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        11529,
        11948
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1270": {
      "fn": "ERC20._transfer",
      "offset": [
        7805,
        8611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC20._transfer",
      "offset": [
        7902,
        7920
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 22
    },
    "1280": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7902,
        7920
      ],
      "op": "AND",
      "path": "7"
    },
    "1281": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x55A"
    },
    "1284": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1285": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1296": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1301": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1302": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "ADD",
      "path": "7"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1360": {
      "op": "DUP3"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "1369": {
      "op": "JUMP"
    },
    "1370": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "ERC20._transfer",
      "offset": [
        7981,
        7997
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 23
    },
    "1380": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7981,
        7997
      ],
      "op": "AND",
      "path": "7"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5BC"
    },
    "1384": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1385": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1387": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "ADD",
      "path": "7"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1478": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "AND",
      "path": "7"
    },
    "1479": {
      "fn": "ERC20._transfer",
      "offset": [
        8101,
        8120
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1482": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1483": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1484": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1486": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1487": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1488": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1489": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1492": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1493": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1494": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 24
    },
    "1495": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1496": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "LT",
      "path": "7"
    },
    "1497": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x634"
    },
    "1501": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1502": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "ADD",
      "path": "7"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1578": {
      "op": "DUP3"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x309"
    },
    "1587": {
      "op": "JUMP"
    },
    "1588": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 25
    },
    "1598": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1599": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "AND",
      "path": "7"
    },
    "1600": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8266
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1603": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1604": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1605": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1607": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1608": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1609": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1610": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1612": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1613": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1614": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1615": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1616": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1617": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "SUB",
      "path": "7"
    },
    "1618": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8295
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1619": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8295
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1620": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 26
    },
    "1621": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1622": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "AND",
      "path": "7"
    },
    "1623": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1624": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1625": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1626": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1627": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1628": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1629": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1630": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1631": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1632": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1633": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "ADD",
      "path": "7"
    },
    "1634": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1635": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1636": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP3",
      "path": "7",
      "statement": 27
    },
    "1637": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1638": {
      "op": "DUP6"
    },
    "1639": {
      "op": "DUP2"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1642": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1643": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SUB",
      "path": "7"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "LOG3",
      "path": "7"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        8566,
        8603
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 28,
      "value": "0x4F0"
    },
    "1689": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12548,
        12639
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1695": {
      "op": "DUP1"
    },
    "1696": {
      "op": "DUP4"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "DUP4"
    },
    "1699": {
      "op": "MLOAD"
    },
    "1700": {
      "op": "DUP1"
    },
    "1701": {
      "op": "DUP3"
    },
    "1702": {
      "op": "DUP6"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1707": {
      "op": "JUMPDEST"
    },
    "1708": {
      "op": "DUP2"
    },
    "1709": {
      "op": "DUP2"
    },
    "1710": {
      "op": "LT"
    },
    "1711": {
      "op": "ISZERO"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x6C7"
    },
    "1715": {
      "op": "JUMPI"
    },
    "1716": {
      "op": "DUP6"
    },
    "1717": {
      "op": "DUP2"
    },
    "1718": {
      "op": "ADD"
    },
    "1719": {
      "op": "DUP4"
    },
    "1720": {
      "op": "ADD"
    },
    "1721": {
      "op": "MLOAD"
    },
    "1722": {
      "op": "DUP6"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "op": "MSTORE"
    },
    "1729": {
      "op": "DUP3"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "PUSH2",
      "value": "0x6AB"
    },
    "1734": {
      "op": "JUMP"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "DUP2"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "GT"
    },
    "1739": {
      "op": "ISZERO"
    },
    "1740": {
      "op": "PUSH2",
      "value": "0x6D9"
    },
    "1743": {
      "op": "JUMPI"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1748": {
      "op": "DUP4"
    },
    "1749": {
      "op": "DUP8"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "op": "JUMPDEST"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1757": {
      "op": "ADD"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1760": {
      "op": "NOT"
    },
    "1761": {
      "op": "AND"
    },
    "1762": {
      "op": "SWAP3"
    },
    "1763": {
      "op": "SWAP1"
    },
    "1764": {
      "op": "SWAP3"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "SWAP4"
    },
    "1770": {
      "op": "SWAP3"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "op": "POP"
    },
    "1774": {
      "jump": "o",
      "op": "JUMP"
    },
    "1775": {
      "op": "JUMPDEST"
    },
    "1776": {
      "op": "DUP1"
    },
    "1777": {
      "op": "CALLDATALOAD"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "op": "SUB"
    },
    "1786": {
      "op": "DUP2"
    },
    "1787": {
      "op": "AND"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "EQ"
    },
    "1790": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1793": {
      "op": "JUMPI"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1796": {
      "op": "DUP1"
    },
    "1797": {
      "op": "REVERT"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "SWAP2"
    },
    "1800": {
      "op": "SWAP1"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "jump": "o",
      "op": "JUMP"
    },
    "1803": {
      "op": "JUMPDEST"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1806": {
      "op": "DUP1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1809": {
      "op": "DUP4"
    },
    "1810": {
      "op": "DUP6"
    },
    "1811": {
      "op": "SUB"
    },
    "1812": {
      "op": "SLT"
    },
    "1813": {
      "op": "ISZERO"
    },
    "1814": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1817": {
      "op": "JUMPI"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1820": {
      "op": "DUP1"
    },
    "1821": {
      "op": "REVERT"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1826": {
      "op": "DUP4"
    },
    "1827": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1830": {
      "jump": "i",
      "op": "JUMP"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "SWAP5"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1835": {
      "op": "SWAP4"
    },
    "1836": {
      "op": "SWAP1"
    },
    "1837": {
      "op": "SWAP4"
    },
    "1838": {
      "op": "ADD"
    },
    "1839": {
      "op": "CALLDATALOAD"
    },
    "1840": {
      "op": "SWAP4"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "DUP1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1853": {
      "op": "DUP5"
    },
    "1854": {
      "op": "DUP7"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "op": "SLT"
    },
    "1857": {
      "op": "ISZERO"
    },
    "1858": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1861": {
      "op": "JUMPI"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1864": {
      "op": "DUP1"
    },
    "1865": {
      "op": "REVERT"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "PUSH2",
      "value": "0x753"
    },
    "1870": {
      "op": "DUP5"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1874": {
      "jump": "i",
      "op": "JUMP"
    },
    "1875": {
      "op": "JUMPDEST"
    },
    "1876": {
      "op": "SWAP3"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x761"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "op": "DUP6"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1888": {
      "jump": "i",
      "op": "JUMP"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "SWAP2"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1894": {
      "op": "DUP5"
    },
    "1895": {
      "op": "ADD"
    },
    "1896": {
      "op": "CALLDATALOAD"
    },
    "1897": {
      "op": "SWAP1"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "op": "SWAP3"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "op": "SWAP3"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "op": "SWAP3"
    },
    "1904": {
      "jump": "o",
      "op": "JUMP"
    },
    "1905": {
      "op": "JUMPDEST"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1910": {
      "op": "DUP3"
    },
    "1911": {
      "op": "DUP5"
    },
    "1912": {
      "op": "SUB"
    },
    "1913": {
      "op": "SLT"
    },
    "1914": {
      "op": "ISZERO"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x783"
    },
    "1918": {
      "op": "JUMPI"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "REVERT"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1931": {
      "jump": "i",
      "op": "JUMP"
    },
    "1932": {
      "op": "JUMPDEST"
    },
    "1933": {
      "op": "SWAP4"
    },
    "1934": {
      "op": "SWAP3"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "jump": "o",
      "op": "JUMP"
    },
    "1939": {
      "op": "JUMPDEST"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1942": {
      "op": "DUP1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1945": {
      "op": "DUP4"
    },
    "1946": {
      "op": "DUP6"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "op": "SLT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A6"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "op": "DUP1"
    },
    "1957": {
      "op": "REVERT"
    },
    "1958": {
      "op": "JUMPDEST"
    },
    "1959": {
      "op": "PUSH2",
      "value": "0x7AF"
    },
    "1962": {
      "op": "DUP4"
    },
    "1963": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1966": {
      "jump": "i",
      "op": "JUMP"
    },
    "1967": {
      "op": "JUMPDEST"
    },
    "1968": {
      "op": "SWAP2"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7BD"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "DUP5"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x6EF"
    },
    "1980": {
      "jump": "i",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "SWAP1"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "SWAP3"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "SWAP3"
    },
    "1987": {
      "op": "SWAP1"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "jump": "o",
      "op": "JUMP"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "DUP2"
    },
    "1994": {
      "op": "DUP2"
    },
    "1995": {
      "op": "SHR"
    },
    "1996": {
      "op": "SWAP1"
    },
    "1997": {
      "op": "DUP3"
    },
    "1998": {
      "op": "AND"
    },
    "1999": {
      "op": "DUP1"
    },
    "2000": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "2003": {
      "op": "JUMPI"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2006": {
      "op": "DUP3"
    },
    "2007": {
      "op": "AND"
    },
    "2008": {
      "op": "SWAP2"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "LT"
    },
    "2015": {
      "op": "DUP2"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "op": "PUSH2",
      "value": "0x7FA"
    },
    "2020": {
      "op": "JUMPI"
    },
    "2021": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2041": {
      "op": "REVERT"
    },
    "2042": {
      "op": "JUMPDEST"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "op": "SWAP2"
    },
    "2045": {
      "op": "SWAP1"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "jump": "o",
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP3"
    },
    "2052": {
      "op": "NOT"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "GT"
    },
    "2055": {
      "op": "ISZERO"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x821"
    },
    "2059": {
      "op": "JUMPI"
    },
    "2060": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2070": {
      "op": "MSTORE"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2075": {
      "op": "MSTORE"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "REVERT"
    },
    "2081": {
      "op": "JUMPDEST"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "ADD"
    },
    "2084": {
      "op": "SWAP1"
    },
    "2085": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "83ecd34f269335ff9c59518c87858422eb2193b7",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * calling function initializeERC20.\n     */\n    function initializeERC20(string memory name_, string memory symbol_) internal {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}",
  "sourceMap": "1655:11681:7:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}