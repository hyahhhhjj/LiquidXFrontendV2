{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "LiquidXStakePool__PoolNotEstablished",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "Math512Bits__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "ShareMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOut_",
          "type": "uint256"
        }
      ],
      "name": "borrowFromAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut_",
          "type": "uint256"
        }
      ],
      "name": "burnShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shareBurned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn_",
          "type": "uint256"
        }
      ],
      "name": "collectFeesFromAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExtractableReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLeverageAllowedMax",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidXAggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "stakeToken_",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "leverageAllowedMax_",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "liquidxAggregator_",
          "type": "address"
        }
      ],
      "name": "initializeStakePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "increment_",
          "type": "bool"
        }
      ],
      "name": "liquidationValueChange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn_",
          "type": "uint256"
        }
      ],
      "name": "mintShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shareMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn_",
          "type": "uint256"
        }
      ],
      "name": "repayFromAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/security/ReentrancyGuard.sol",
    "1": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/IERC20.sol",
    "11": "contracts/LiquidXStakePool.sol",
    "17": "contracts/library/BitMath.sol",
    "19": "contracts/library/Math512Bits.sol",
    "2": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/utils/Context.sol",
    "7": "contracts/ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/LiquidXStakePool.sol",
    "exportedSymbols": {
      "BitMath": [
        6624
      ],
      "Context": [
        6671
      ],
      "ERC20": [
        5456
      ],
      "IERC20": [
        4815
      ],
      "IERC20Metadata": [
        6649
      ],
      "LiquidXAggregator__AccountExists": [
        5482
      ],
      "LiquidXAggregator__CorrespondingStakePoolNotCreated": [
        5474
      ],
      "LiquidXAggregator__LeverageExceedsMaxAllowed": [
        5490
      ],
      "LiquidXAggregator__MangerAccountExists": [
        5472
      ],
      "LiquidXAggregator__StakePoolExists": [
        5478
      ],
      "LiquidXAggregator__WithdrawAmountExceedsMaxAllowed": [
        5488
      ],
      "LiquidXStakePool": [
        2287
      ],
      "LiquidXStakePool__PoolNotEstablished": [
        5460
      ],
      "LowLevelCall__CallFailed": [
        6246
      ],
      "LowLevelCall__NonContract": [
        6244
      ],
      "ManagerAccount__AccountNotInitialized": [
        5468
      ],
      "ManagerAccount__ArrayLengthNotMatch": [
        5466
      ],
      "ManagerAccount__LowLevelCallFails": [
        5462
      ],
      "ManagerAccount__PairNotExists": [
        5464
      ],
      "Math512Bits": [
        4219
      ],
      "Math512Bits__MulDivOverflow": [
        6231
      ],
      "Math512Bits__MulShiftOverflow": [
        6241
      ],
      "Math512Bits__OffsetOverflows": [
        6235
      ],
      "ReentrancyGuard": [
        4869
      ]
    },
    "id": 2288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1906,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1907,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2288,
        "sourceUnit": 5457,
        "src": "57:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/LiquidXErrors.sol",
        "file": "./LiquidXErrors.sol",
        "id": 1908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2288,
        "sourceUnit": 5491,
        "src": "79:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 1909,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2288,
        "sourceUnit": 4870,
        "src": "109:62:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Alienware/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1910,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2288,
        "sourceUnit": 4816,
        "src": "172:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/library/Math512Bits.sol",
        "file": "./library/Math512Bits.sol",
        "id": 1911,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2288,
        "sourceUnit": 4220,
        "src": "229:35:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1912,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5456,
              "src": "295:5:11"
            },
            "id": 1913,
            "nodeType": "InheritanceSpecifier",
            "src": "295:5:11"
          },
          {
            "baseName": {
              "id": 1914,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4869,
              "src": "302:15:11"
            },
            "id": 1915,
            "nodeType": "InheritanceSpecifier",
            "src": "302:15:11"
          }
        ],
        "canonicalName": "LiquidXStakePool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2287,
        "linearizedBaseContracts": [
          2287,
          4869,
          5456,
          6649,
          4815,
          6671
        ],
        "name": "LiquidXStakePool",
        "nameLocation": "275:16:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1918,
            "libraryName": {
              "id": 1916,
              "name": "Math512Bits",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4219,
              "src": "329:11:11"
            },
            "nodeType": "UsingForDirective",
            "src": "323:30:11",
            "typeName": {
              "id": 1917,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1920,
            "mutability": "mutable",
            "name": "liquidxAggregator",
            "nameLocation": "374:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "358:33:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1919,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1922,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "454:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "438:23:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1921,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "438:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1925,
            "mutability": "mutable",
            "name": "stakeToken",
            "nameLocation": "482:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "467:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4815",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1923,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4815,
                "src": "467:6:11"
              },
              "referencedDeclaration": 4815,
              "src": "467:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4815",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1927,
            "mutability": "mutable",
            "name": "leverageAllowedMax",
            "nameLocation": "513:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "498:33:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1926,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "498:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1929,
            "mutability": "mutable",
            "name": "totalReserve",
            "nameLocation": "562:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "546:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1931,
            "mutability": "mutable",
            "name": "extractableReserve",
            "nameLocation": "596:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 2287,
            "src": "580:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1930,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "580:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "9e3aff002c0bfdb18b77adb1051b53eda74f919ee90e162c2626995e4db8f055",
            "id": 1937,
            "name": "ShareMinted",
            "nameLocation": "627:11:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "647:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "639:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "660:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "652:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:30:11"
            },
            "src": "621:48:11"
          },
          {
            "body": {
              "id": 1947,
              "nodeType": "Block",
              "src": "707:68:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1940,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "725:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "725:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1942,
                          "name": "liquidxAggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1920,
                          "src": "739:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "725:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "717:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "717:40:11"
                },
                {
                  "id": 1946,
                  "nodeType": "PlaceholderStatement",
                  "src": "767:1:11"
                }
              ]
            },
            "id": 1948,
            "name": "onlyLiquidXAggregator",
            "nameLocation": "684:21:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:11"
            },
            "src": "675:100:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1958,
              "nodeType": "Block",
              "src": "803:58:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1951,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "821:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "821:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1953,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1922,
                          "src": "835:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "821:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "813:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1956,
                  "nodeType": "ExpressionStatement",
                  "src": "813:30:11"
                },
                {
                  "id": 1957,
                  "nodeType": "PlaceholderStatement",
                  "src": "853:1:11"
                }
              ]
            },
            "id": 1959,
            "name": "onlyFactory",
            "nameLocation": "790:11:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:2:11"
            },
            "src": "781:80:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "991:287:11",
              "statements": [
                {
                  "condition": {
                    "id": 1966,
                    "name": "increment_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1964,
                    "src": "1004:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1990,
                    "nodeType": "Block",
                    "src": "1119:142:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1977,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1962,
                                "src": "1141:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1978,
                                "name": "extractableReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1931,
                                "src": "1151:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1141:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1976,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1133:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1133:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1981,
                        "nodeType": "ExpressionStatement",
                        "src": "1133:37:11"
                      },
                      {
                        "expression": {
                          "id": 1984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1982,
                            "name": "totalReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1929,
                            "src": "1184:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1983,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1200:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1184:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1985,
                        "nodeType": "ExpressionStatement",
                        "src": "1184:23:11"
                      },
                      {
                        "expression": {
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1986,
                            "name": "extractableReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1931,
                            "src": "1221:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1987,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1243:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1221:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1989,
                        "nodeType": "ExpressionStatement",
                        "src": "1221:29:11"
                      }
                    ]
                  },
                  "id": 1991,
                  "nodeType": "IfStatement",
                  "src": "1001:260:11",
                  "trueBody": {
                    "id": 1975,
                    "nodeType": "Block",
                    "src": "1015:91:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1967,
                            "name": "totalReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1929,
                            "src": "1029:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1968,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1045:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1029:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1970,
                        "nodeType": "ExpressionStatement",
                        "src": "1029:23:11"
                      },
                      {
                        "expression": {
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1971,
                            "name": "extractableReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1931,
                            "src": "1066:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1972,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1088:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1066:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1974,
                        "nodeType": "ExpressionStatement",
                        "src": "1066:29:11"
                      }
                    ]
                  }
                },
                {
                  "id": 1992,
                  "nodeType": "PlaceholderStatement",
                  "src": "1270:1:11"
                }
              ]
            },
            "documentation": {
              "id": 1960,
              "nodeType": "StructuredDocumentation",
              "src": "867:63:11",
              "text": "@dev update reserve state before withdraw or stake happened"
            },
            "id": 1994,
            "name": "updateReserve",
            "nameLocation": "944:13:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1962,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "966:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "958:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1964,
                  "mutability": "mutable",
                  "name": "increment_",
                  "nameLocation": "980:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "975:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:34:11"
            },
            "src": "935:343:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2019,
              "nodeType": "Block",
              "src": "1348:213:11",
              "statements": [
                {
                  "condition": {
                    "id": 2000,
                    "name": "increment_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1998,
                    "src": "1361:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2016,
                    "nodeType": "Block",
                    "src": "1439:105:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2007,
                                "name": "amount_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1996,
                                "src": "1461:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2008,
                                "name": "extractableReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1931,
                                "src": "1471:18:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1461:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2006,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1453:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1453:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2011,
                        "nodeType": "ExpressionStatement",
                        "src": "1453:37:11"
                      },
                      {
                        "expression": {
                          "id": 2014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2012,
                            "name": "extractableReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1931,
                            "src": "1504:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 2013,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1996,
                            "src": "1526:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1504:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2015,
                        "nodeType": "ExpressionStatement",
                        "src": "1504:29:11"
                      }
                    ]
                  },
                  "id": 2017,
                  "nodeType": "IfStatement",
                  "src": "1358:186:11",
                  "trueBody": {
                    "id": 2005,
                    "nodeType": "Block",
                    "src": "1372:54:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2001,
                            "name": "extractableReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1931,
                            "src": "1386:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2002,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1996,
                            "src": "1408:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1386:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2004,
                        "nodeType": "ExpressionStatement",
                        "src": "1386:29:11"
                      }
                    ]
                  }
                },
                {
                  "id": 2018,
                  "nodeType": "PlaceholderStatement",
                  "src": "1553:1:11"
                }
              ]
            },
            "id": 2020,
            "name": "updateOnlyExtractable",
            "nameLocation": "1293:21:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1323:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "1315:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "increment_",
                  "nameLocation": "1337:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2020,
                  "src": "1332:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:34:11"
            },
            "src": "1284:277:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2028,
              "nodeType": "Block",
              "src": "1588:37:11",
              "statements": [
                {
                  "expression": {
                    "id": 2026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2023,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1922,
                      "src": "1598:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2024,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1608:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1608:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1598:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2027,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:20:11"
                }
              ]
            },
            "id": 2029,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1578:2:11"
            },
            "returnParameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:0:11"
            },
            "scope": 2287,
            "src": "1567:58:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2063,
              "nodeType": "Block",
              "src": "2269:180:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2047,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2032,
                        "src": "2295:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 2048,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "2302:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2046,
                      "name": "initializeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4914,
                      "src": "2279:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:31:11"
                },
                {
                  "expression": {
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2051,
                      "name": "stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1925,
                      "src": "2320:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4815",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2052,
                      "name": "stakeToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2037,
                      "src": "2333:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4815",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2320:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4815",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:24:11"
                },
                {
                  "expression": {
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2055,
                      "name": "leverageAllowedMax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "2354:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2056,
                      "name": "leverageAllowedMax_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "2375:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2354:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:40:11"
                },
                {
                  "expression": {
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2059,
                      "name": "liquidxAggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1920,
                      "src": "2404:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2060,
                      "name": "liquidxAggregator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2041,
                      "src": "2424:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2404:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:38:11"
                }
              ]
            },
            "documentation": {
              "id": 2030,
              "nodeType": "StructuredDocumentation",
              "src": "1631:463:11",
              "text": "@dev using create2 to instantiate contract LiquidXStakePool and then call this function to initialize the contract.\n params\n - name_: the name of pool share token corresponding to the token as assets staked in the pool.\n - symbol_: abbreviation of 'name_'\n - stakeToken_: address of token as assets staked in the pool.\n - leverageAllowedMax_: max allowed leverage to use for Aggregator to borrow money on behalf of managers;"
            },
            "functionSelector": "ceb24687",
            "id": 2064,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2043,
                  "name": "onlyFactory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1959,
                  "src": "2257:11:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2257:11:11"
              }
            ],
            "name": "initializeStakePool",
            "nameLocation": "2108:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2142:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2128:19:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2034,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2163:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2149:21:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "stakeToken_",
                  "nameLocation": "2179:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2172:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4815",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2035,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4815,
                      "src": "2172:6:11"
                    },
                    "referencedDeclaration": 4815,
                    "src": "2172:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4815",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2039,
                  "mutability": "mutable",
                  "name": "leverageAllowedMax_",
                  "nameLocation": "2199:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2192:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2038,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "liquidxAggregator_",
                  "nameLocation": "2228:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2220:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:120:11"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2269:0:11"
            },
            "scope": 2287,
            "src": "2099:350:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2122,
              "nodeType": "Block",
              "src": "2639:415:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2673:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2673:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2085,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2693:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidXStakePool_$2287",
                              "typeString": "contract LiquidXStakePool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidXStakePool_$2287",
                              "typeString": "contract LiquidXStakePool"
                            }
                          ],
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2685:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2685:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2685:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2087,
                        "name": "amountIn_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2067,
                        "src": "2700:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2078,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "2649:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4815",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4814,
                      "src": "2649:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:61:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2090,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4954,
                        "src": "2723:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2723:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2739:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2723:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2108,
                    "nodeType": "Block",
                    "src": "2909:48:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2104,
                            "name": "shareMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "2923:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2105,
                            "name": "amountIn_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2067,
                            "src": "2937:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2923:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2107,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:23:11"
                      }
                    ]
                  },
                  "id": 2109,
                  "nodeType": "IfStatement",
                  "src": "2720:237:11",
                  "trueBody": {
                    "id": 2103,
                    "nodeType": "Block",
                    "src": "2741:164:11",
                    "statements": [
                      {
                        "documentation": "shareMinted = amountIn_ * totalSupply() / totalReserve;",
                        "expression": {
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2094,
                            "name": "shareMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "2826:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2097,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4954,
                                  "src": "2866:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2866:13:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2099,
                                "name": "totalReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1929,
                                "src": "2881:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2095,
                                "name": "amountIn_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2067,
                                "src": "2840:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mulDivRoundDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3889,
                              "src": "2840:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2840:54:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2826:68:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2102,
                        "nodeType": "ExpressionStatement",
                        "src": "2826:68:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2972:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2972:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2113,
                        "name": "shareMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2076,
                        "src": "2984:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2110,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5273,
                      "src": "2966:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2966:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2115,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:30:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2117,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3023:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3023:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2119,
                        "name": "shareMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2076,
                        "src": "3035:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2116,
                      "name": "ShareMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "3011:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3011:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2121,
                  "nodeType": "EmitStatement",
                  "src": "3006:41:11"
                }
              ]
            },
            "documentation": {
              "id": 2065,
              "nodeType": "StructuredDocumentation",
              "src": "2455:60:11",
              "text": "@dev stake assets and get corresponding pool share token"
            },
            "functionSelector": "b58b6e29",
            "id": 2123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2070,
                    "name": "amountIn_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2067,
                    "src": "2581:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2592:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 2072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2069,
                  "name": "updateReserve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "2567:13:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2567:30:11"
              },
              {
                "id": 2074,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2073,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "2598:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "2598:12:11"
              }
            ],
            "name": "mintShare",
            "nameLocation": "2529:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nameLocation": "2547:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2123,
                  "src": "2539:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:19:11"
            },
            "returnParameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "shareMinted",
                  "nameLocation": "2627:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2123,
                  "src": "2619:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2619:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2618:21:11"
            },
            "scope": 2287,
            "src": "2520:534:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2169,
              "nodeType": "Block",
              "src": "3182:387:11",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2136,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4954,
                        "src": "3195:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3195:13:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3211:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3195:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2167,
                    "nodeType": "Block",
                    "src": "3493:70:11",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2164,
                            "name": "LiquidXStakePool__PoolNotEstablished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5460,
                            "src": "3514:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3514:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2166,
                        "nodeType": "RevertStatement",
                        "src": "3507:45:11"
                      }
                    ]
                  },
                  "id": 2168,
                  "nodeType": "IfStatement",
                  "src": "3192:371:11",
                  "trueBody": {
                    "id": 2163,
                    "nodeType": "Block",
                    "src": "3213:267:11",
                    "statements": [
                      {
                        "documentation": "shareBurned = amountOut_ * totalSupply() / totalReserve;",
                        "expression": {
                          "id": 2147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2140,
                            "name": "shareBurned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "3299:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2143,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4954,
                                  "src": "3340:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3340:13:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 2145,
                                "name": "totalReserve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1929,
                                "src": "3355:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2141,
                                "name": "amountOut_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2125,
                                "src": "3313:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mulDivRoundDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3889,
                              "src": "3313:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3313:55:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3299:69:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2148,
                        "nodeType": "ExpressionStatement",
                        "src": "3299:69:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2150,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3388:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3388:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2152,
                              "name": "shareBurned",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2134,
                              "src": "3400:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2149,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5345,
                            "src": "3382:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3382:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2154,
                        "nodeType": "ExpressionStatement",
                        "src": "3382:30:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2158,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3446:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3446:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2160,
                              "name": "amountOut_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2125,
                              "src": "3458:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2155,
                              "name": "stakeToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "3426:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4815",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4782,
                            "src": "3426:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3426:43:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2162,
                        "nodeType": "ExpressionStatement",
                        "src": "3426:43:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0ebc2d23",
            "id": 2170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2128,
                    "name": "amountOut_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2125,
                    "src": "3122:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3134:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 2130,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2127,
                  "name": "updateReserve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "3108:13:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3108:32:11"
              },
              {
                "id": 2132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2131,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "3141:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3141:12:11"
              }
            ],
            "name": "burnShare",
            "nameLocation": "3069:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2125,
                  "mutability": "mutable",
                  "name": "amountOut_",
                  "nameLocation": "3087:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "3079:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:20:11"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2134,
                  "mutability": "mutable",
                  "name": "shareBurned",
                  "nameLocation": "3170:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2170,
                  "src": "3162:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3161:21:11"
            },
            "scope": 2287,
            "src": "3060:509:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "3723:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2188,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "3753:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2189,
                        "name": "amountOut_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "3758:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2185,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "3733:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4815",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4782,
                      "src": "3733:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3733:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:36:11"
                }
              ]
            },
            "functionSelector": "38abdd95",
            "id": 2193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2176,
                  "name": "onlyLiquidXAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1948,
                  "src": "3647:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3647:21:11"
              },
              {
                "arguments": [
                  {
                    "id": 2179,
                    "name": "amountOut_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2174,
                    "src": "3691:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3703:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 2181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2178,
                  "name": "updateOnlyExtractable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2020,
                  "src": "3669:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3669:40:11"
              },
              {
                "id": 2183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2182,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "3710:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3710:12:11"
              }
            ],
            "name": "borrowFromAggregator",
            "nameLocation": "3584:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2172,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "3613:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "3605:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2174,
                  "mutability": "mutable",
                  "name": "amountOut_",
                  "nameLocation": "3626:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "3618:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3604:33:11"
            },
            "returnParameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:0:11"
            },
            "scope": 2287,
            "src": "3575:201:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2206,
              "nodeType": "Block",
              "src": "3912:71:11",
              "statements": []
            },
            "functionSelector": "8f602842",
            "id": 2207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2197,
                  "name": "onlyLiquidXAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1948,
                  "src": "3839:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3839:21:11"
              },
              {
                "arguments": [
                  {
                    "id": 2200,
                    "name": "amountIn_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2195,
                    "src": "3883:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3894:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 2202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2199,
                  "name": "updateOnlyExtractable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2020,
                  "src": "3861:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3861:38:11"
              },
              {
                "id": 2204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2203,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "3900:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "3900:12:11"
              }
            ],
            "name": "repayFromAggregator",
            "nameLocation": "3791:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nameLocation": "3819:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2207,
                  "src": "3811:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3810:19:11"
            },
            "returnParameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3912:0:11"
            },
            "scope": 2287,
            "src": "3782:201:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "4118:71:11",
              "statements": []
            },
            "functionSelector": "6086d12f",
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2211,
                  "name": "onlyLiquidXAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1948,
                  "src": "4052:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4052:21:11"
              },
              {
                "arguments": [
                  {
                    "id": 2214,
                    "name": "amountIn_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2209,
                    "src": "4088:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4099:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 2216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2213,
                  "name": "updateReserve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1994,
                  "src": "4074:13:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4074:30:11"
              },
              {
                "id": 2218,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2217,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "4105:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:12:11"
              }
            ],
            "name": "collectFeesFromAggregator",
            "nameLocation": "3998:25:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2209,
                  "mutability": "mutable",
                  "name": "amountIn_",
                  "nameLocation": "4032:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "4024:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:19:11"
            },
            "returnParameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:0:11"
            },
            "scope": 2287,
            "src": "3989:200:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2242,
              "nodeType": "Block",
              "src": "4304:93:11",
              "statements": [
                {
                  "condition": {
                    "id": 2232,
                    "name": "increment_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2225,
                    "src": "4317:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "id": 2239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2237,
                        "name": "totalReserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "4367:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 2238,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "4383:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4367:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2240,
                    "nodeType": "ExpressionStatement",
                    "src": "4367:23:11"
                  },
                  "id": 2241,
                  "nodeType": "IfStatement",
                  "src": "4314:76:11",
                  "trueBody": {
                    "expression": {
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 2233,
                        "name": "totalReserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1929,
                        "src": "4329:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 2234,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2223,
                        "src": "4345:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4329:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2236,
                    "nodeType": "ExpressionStatement",
                    "src": "4329:23:11"
                  }
                }
              ]
            },
            "functionSelector": "b6395d66",
            "id": 2243,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2227,
                  "name": "onlyLiquidXAggregator",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1948,
                  "src": "4270:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4270:21:11"
              },
              {
                "id": 2230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2229,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4845,
                  "src": "4292:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:12:11"
              }
            ],
            "name": "liquidationValueChange",
            "nameLocation": "4204:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "4235:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "4227:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "increment_",
                  "nameLocation": "4249:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2243,
                  "src": "4244:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4244:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4226:34:11"
            },
            "returnParameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4304:0:11"
            },
            "scope": 2287,
            "src": "4195:202:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2250,
              "nodeType": "Block",
              "src": "4463:41:11",
              "statements": [
                {
                  "expression": {
                    "id": 2248,
                    "name": "liquidxAggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1920,
                    "src": "4480:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2247,
                  "id": 2249,
                  "nodeType": "Return",
                  "src": "4473:24:11"
                }
              ]
            },
            "functionSelector": "bd77c09f",
            "id": 2251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidXAggregator",
            "nameLocation": "4412:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4432:2:11"
            },
            "returnParameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2251,
                  "src": "4455:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4454:9:11"
            },
            "scope": 2287,
            "src": "4403:101:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2261,
              "nodeType": "Block",
              "src": "4570:43:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2258,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "4595:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4815",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$4815",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 2257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4587:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2256,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4587:7:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4587:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2255,
                  "id": 2260,
                  "nodeType": "Return",
                  "src": "4580:26:11"
                }
              ]
            },
            "functionSelector": "8b0441e2",
            "id": 2262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeTokenAddress",
            "nameLocation": "4519:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4539:2:11"
            },
            "returnParameters": {
              "id": 2255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2262,
                  "src": "4562:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4562:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4561:9:11"
            },
            "scope": 2287,
            "src": "4510:103:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2269,
              "nodeType": "Block",
              "src": "4679:42:11",
              "statements": [
                {
                  "expression": {
                    "id": 2267,
                    "name": "leverageAllowedMax",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1927,
                    "src": "4696:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 2266,
                  "id": 2268,
                  "nodeType": "Return",
                  "src": "4689:25:11"
                }
              ]
            },
            "functionSelector": "08d838e3",
            "id": 2270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeverageAllowedMax",
            "nameLocation": "4628:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4649:2:11"
            },
            "returnParameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "4672:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4672:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4671:8:11"
            },
            "scope": 2287,
            "src": "4619:102:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2277,
              "nodeType": "Block",
              "src": "4782:36:11",
              "statements": [
                {
                  "expression": {
                    "id": 2275,
                    "name": "totalReserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1929,
                    "src": "4799:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2274,
                  "id": 2276,
                  "nodeType": "Return",
                  "src": "4792:19:11"
                }
              ]
            },
            "functionSelector": "ec022918",
            "id": 2278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalReserve",
            "nameLocation": "4736:15:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4751:2:11"
            },
            "returnParameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "4774:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4774:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4773:9:11"
            },
            "scope": 2287,
            "src": "4727:91:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2285,
              "nodeType": "Block",
              "src": "4885:42:11",
              "statements": [
                {
                  "expression": {
                    "id": 2283,
                    "name": "extractableReserve",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1931,
                    "src": "4902:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2282,
                  "id": 2284,
                  "nodeType": "Return",
                  "src": "4895:25:11"
                }
              ]
            },
            "functionSelector": "d90a13b2",
            "id": 2286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExtractableReserve",
            "nameLocation": "4833:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4854:2:11"
            },
            "returnParameters": {
              "id": 2282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2286,
                  "src": "4877:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4876:9:11"
            },
            "scope": 2287,
            "src": "4824:103:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2288,
        "src": "266:4663:11",
        "usedErrors": [
          5460,
          6231
        ]
      }
    ],
    "src": "33:4897:11"
  },
  "bytecode": "",
  "bytecodeSha1": "b7a68fa94786389c6cc81ffb7034469300c233f3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LiquidXStakePool",
  "coverageMap": {
    "branches": {
      "0": {
        "ReentrancyGuard._nonReentrantBefore": {
          "90": [
            2468,
            2487,
            true
          ]
        }
      },
      "1": {},
      "11": {
        "LiquidXStakePool.burnShare": {
          "74": [
            3195,
            3212,
            false
          ]
        },
        "LiquidXStakePool.liquidationValueChange": {
          "76": [
            4317,
            4327,
            false
          ]
        },
        "LiquidXStakePool.mintShare": {
          "75": [
            2723,
            2740,
            false
          ]
        }
      },
      "17": {},
      "19": {
        "Math512Bits._getEndOfDivRoundDown": {
          "88": [
            7059,
            7069,
            false
          ],
          "89": [
            7277,
            7297,
            false
          ]
        }
      },
      "2": {},
      "3": {},
      "7": {
        "ERC20._approve": {
          "78": [
            10994,
            11013,
            true
          ],
          "79": [
            11073,
            11094,
            true
          ]
        },
        "ERC20._burn": {
          "80": [
            9863,
            9884,
            true
          ],
          "81": [
            10059,
            10083,
            true
          ]
        },
        "ERC20._mint": {
          "87": [
            8982,
            9003,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "82": [
            11697,
            11734,
            false
          ],
          "83": [
            11759,
            11785,
            true
          ]
        },
        "ERC20._transfer": {
          "84": [
            7902,
            7920,
            true
          ],
          "85": [
            7981,
            7997,
            true
          ],
          "86": [
            8157,
            8178,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "77": [
            7119,
            7154,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ReentrancyGuard._nonReentrantAfter": {
          "15": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "41": [
            2460,
            2523
          ],
          "42": [
            2598,
            2616
          ]
        }
      },
      "1": {},
      "11": {
        "LiquidXStakePool.borrowFromAggregator": {
          "19": [
            3733,
            3769
          ]
        },
        "LiquidXStakePool.burnShare": {
          "12": [
            3299,
            3368
          ],
          "13": [
            3382,
            3412
          ],
          "14": [
            3426,
            3469
          ]
        },
        "LiquidXStakePool.getExtractableReserve": {
          "6": [
            4895,
            4920
          ]
        },
        "LiquidXStakePool.getLeverageAllowedMax": {
          "0": [
            4689,
            4714
          ]
        },
        "LiquidXStakePool.getLiquidXAggregator": {
          "5": [
            4473,
            4497
          ]
        },
        "LiquidXStakePool.getStakeTokenAddress": {
          "4": [
            4580,
            4606
          ]
        },
        "LiquidXStakePool.getTotalReserve": {
          "7": [
            4792,
            4811
          ]
        },
        "LiquidXStakePool.initializeStakePool": {
          "32": [
            2279,
            2310
          ],
          "33": [
            2320,
            2344
          ],
          "34": [
            2354,
            2394
          ],
          "35": [
            2404,
            2442
          ]
        },
        "LiquidXStakePool.liquidationValueChange": {
          "30": [
            4329,
            4352
          ],
          "31": [
            4367,
            4390
          ]
        },
        "LiquidXStakePool.mintShare": {
          "25": [
            2649,
            2710
          ],
          "26": [
            2826,
            2894
          ],
          "27": [
            2923,
            2946
          ],
          "28": [
            2966,
            2996
          ],
          "29": [
            3006,
            3047
          ]
        }
      },
      "17": {},
      "19": {
        "Math512Bits._getEndOfDivRoundDown": {
          "64": [
            7113,
            7141
          ],
          "65": [
            7273,
            7353
          ],
          "66": [
            8687,
            8711
          ],
          "67": [
            9311,
            9347
          ],
          "68": [
            9384,
            9420
          ],
          "69": [
            9458,
            9494
          ],
          "70": [
            9532,
            9568
          ],
          "71": [
            9606,
            9642
          ],
          "72": [
            9681,
            9717
          ],
          "73": [
            10171,
            10195
          ]
        },
        "Math512Bits.mulDivRoundDown": {
          "43": [
            1124,
            1185
          ]
        }
      },
      "2": {},
      "3": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "7": {
        "ERC20._approve": {
          "37": [
            10986,
            11054
          ],
          "38": [
            11065,
            11133
          ],
          "39": [
            11146,
            11182
          ],
          "40": [
            11193,
            11230
          ]
        },
        "ERC20._burn": {
          "44": [
            9855,
            9922
          ],
          "45": [
            10051,
            10122
          ],
          "46": [
            10158,
            10202
          ],
          "47": [
            10297,
            10319
          ],
          "48": [
            10343,
            10385
          ]
        },
        "ERC20._mint": {
          "58": [
            8974,
            9039
          ],
          "59": [
            9114,
            9136
          ],
          "60": [
            9285,
            9313
          ],
          "61": [
            9335,
            9377
          ]
        },
        "ERC20._spendAllowance": {
          "49": [
            11751,
            11819
          ],
          "50": [
            11863,
            11914
          ]
        },
        "ERC20._transfer": {
          "51": [
            7894,
            7962
          ],
          "52": [
            7973,
            8037
          ],
          "53": [
            8149,
            8221
          ],
          "54": [
            8257,
            8295
          ],
          "55": [
            8475,
            8498
          ],
          "56": [
            8522,
            8553
          ],
          "57": [
            8566,
            8603
          ]
        },
        "ERC20.allowance": {
          "36": [
            4345,
            4379
          ]
        },
        "ERC20.approve": {
          "10": [
            4846,
            4878
          ],
          "11": [
            4889,
            4900
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3741,
            3766
          ]
        },
        "ERC20.decimals": {
          "2": [
            3394,
            3403
          ]
        },
        "ERC20.decreaseAllowance": {
          "22": [
            7111,
            7196
          ],
          "23": [
            7232,
            7292
          ]
        },
        "ERC20.increaseAllowance": {
          "20": [
            6302,
            6366
          ]
        },
        "ERC20.initializeERC20": {
          "62": [
            2228,
            2241
          ],
          "63": [
            2252,
            2269
          ]
        },
        "ERC20.name": {
          "8": [
            2427,
            2439
          ]
        },
        "ERC20.symbol": {
          "21": [
            2648,
            2662
          ]
        },
        "ERC20.totalSupply": {
          "1": [
            3557,
            3576
          ]
        },
        "ERC20.transfer": {
          "24": [
            4115,
            4143
          ]
        },
        "ERC20.transferFrom": {
          "16": [
            5643,
            5681
          ],
          "17": [
            5692,
            5719
          ],
          "18": [
            5730,
            5741
          ]
        }
      }
    }
  },
  "dependencies": [
    "BitMath",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/Context",
    "ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/IERC20Metadata",
    "Math512Bits",
    "OpenZeppelin/openzeppelin-contracts@4.8.2/ReentrancyGuard"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80638b0441e2116100c3578063b6395d661161007c578063b6395d66146102e0578063bd77c09f146102f3578063ceb2468714610304578063d90a13b214610317578063dd62ed3e1461031f578063ec0229181461033257600080fd5b80638b0441e2146102675780638f6028421461028c57806395d89b411461029f578063a457c2d7146102a7578063a9059cbb146102ba578063b58b6e29146102cd57600080fd5b806323b872dd1161011557806323b872dd146101e1578063313ce567146101f457806338abdd951461020357806339509351146102185780636086d12f1461022b57806370a082311461023e57600080fd5b806306fdde031461015257806308d838e314610170578063095ea7b3146101955780630ebc2d23146101b857806318160ddd146101d9575b600080fd5b61015a61033a565b6040516101679190611023565b60405180910390f35b600854600160a01b900463ffffffff1660405163ffffffff9091168152602001610167565b6101a86101a3366004611090565b6103cc565b6040519015158152602001610167565b6101cb6101c63660046110bc565b6103e4565b604051908152602001610167565b6002546101cb565b6101a86101ef3660046110d5565b610507565b60405160128152602001610167565b610216610211366004611090565b61052b565b005b6101a8610226366004611090565b6105fa565b6102166102393660046110bc565b61061c565b6101cb61024c366004611116565b6001600160a01b031660009081526020819052604090205490565b6008546001600160a01b03165b6040516001600160a01b039091168152602001610167565b61021661029a3660046110bc565b610683565b61015a6106af565b6101a86102b5366004611090565b6106be565b6101a86102c8366004611090565b61073e565b6101cb6102db3660046110bc565b61074c565b6102166102ee366004611148565b610880565b6006546001600160a01b0316610274565b61021661031236600461121b565b6108e8565b600a546101cb565b6101cb61032d3660046112c2565b610956565b6009546101cb565b606060038054610349906112f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610375906112f0565b80156103c25780601f10610397576101008083540402835291602001916103c2565b820191906000526020600020905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b6000336103da818585610981565b5060019392505050565b60008181600a5482106103f657600080fd5b81600960008282546104089190611358565b9250508190555081600a60008282546104219190611358565b909155505061042e610aa5565b600061043960025490565b11156104dd5761045661044b60025490565b600954869190610afe565b92506104623384610b28565b60085460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d7919061136f565b506104f6565b60405163043d313d60e01b815260040160405180910390fd5b6105006001600555565b5050919050565b600033610515858285610c5a565b610520858585610cce565b506001949350505050565b6006546001600160a01b0316331461054257600080fd5b806000600a54821061055357600080fd5b81600a60008282546105659190611358565b9091555050610572610aa5565b60085460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af11580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e9919061136f565b506105f46001600555565b50505050565b6000336103da81858561060d8383610956565b6106179190611340565b610981565b6006546001600160a01b0316331461063357600080fd5b80600181600960008282546106489190611340565b9250508190555081600a60008282546106619190611340565b9091555061066c9050565b610674610aa5565b61067e6001600555565b505050565b6006546001600160a01b0316331461069a57600080fd5b80600181600a60008282546106619190611340565b606060048054610349906112f0565b600033816106cc8286610956565b9050838110156107315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6105208286868403610981565b6000336103da818585610cce565b600081600181600960008282546107639190611340565b9250508190555081600a600082825461077c9190611340565b909155506107879050565b61078f610aa5565b6008546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a919061136f565b50600061081660025490565b111561082f5761082861044b60025490565b9250610833565b8392505b61083d3384610e72565b60408051338152602081018590527f9e3aff002c0bfdb18b77adb1051b53eda74f919ee90e162c2626995e4db8f055910160405180910390a16105006001600555565b6006546001600160a01b0316331461089757600080fd5b61089f610aa5565b80156108c25781600960008282546108b79190611340565b909155506108da9050565b81600960008282546108d49190611358565b90915550505b6108e46001600555565b5050565b6007546001600160a01b031633146108ff57600080fd5b6109098585610f31565b6008805463ffffffff909316600160a01b026001600160c01b03199093166001600160a01b03948516179290921790915560068054919092166001600160a01b0319919091161790555050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166109e35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610728565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610728565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600260055403610af75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610728565b6002600555565b6000806000610b0d8686610f4a565b91509150610b1e8686868585610f69565b9695505050505050565b6001600160a01b038216610b885760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610728565b6001600160a01b03821660009081526020819052604090205481811015610bfc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610728565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000610c668484610956565b905060001981146105f45781811015610cc15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610728565b6105f48484848403610981565b6001600160a01b038316610d325760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610728565b6001600160a01b038216610d945760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610728565b6001600160a01b03831660009081526020819052604090205481811015610e0c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610728565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105f4565b6001600160a01b038216610ec85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610728565b8060026000828254610eda9190611340565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6003610f3d83826113da565b50600461067e82826113da565b6000806000198385098385029250828110838203039150509250929050565b600081600003610f8a57838381610f8257610f8261149a565b04905061101a565b838210610fb45760405163656b542b60e11b81526004810183905260248101859052604401610728565b60008486880960018619810187169687900496600081900381900490910186831190950394850291909503949094049390931792505060026003840281188085028203028085028203028085028203028085028203028085028203028085029091030282025b95945050505050565b600060208083528351808285015260005b8181101561105057858101830151858201604001528201611034565b81811115611062576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461108d57600080fd5b50565b600080604083850312156110a357600080fd5b82356110ae81611078565b946020939093013593505050565b6000602082840312156110ce57600080fd5b5035919050565b6000806000606084860312156110ea57600080fd5b83356110f581611078565b9250602084013561110581611078565b929592945050506040919091013590565b60006020828403121561112857600080fd5b813561113381611078565b9392505050565b801515811461108d57600080fd5b6000806040838503121561115b57600080fd5b82359150602083013561116d8161113a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261119f57600080fd5b813567ffffffffffffffff808211156111ba576111ba611178565b604051601f8301601f19908116603f011681019082821181831017156111e2576111e2611178565b816040528381528660208588010111156111fb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561123357600080fd5b853567ffffffffffffffff8082111561124b57600080fd5b61125789838a0161118e565b9650602088013591508082111561126d57600080fd5b5061127a8882890161118e565b945050604086013561128b81611078565b9250606086013563ffffffff811681146112a457600080fd5b915060808601356112b481611078565b809150509295509295909350565b600080604083850312156112d557600080fd5b82356112e081611078565b9150602083013561116d81611078565b600181811c9082168061130457607f821691505b60208210810361132457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156113535761135361132a565b500190565b60008282101561136a5761136a61132a565b500390565b60006020828403121561138157600080fd5b81516111338161113a565b601f82111561067e57600081815260208120601f850160051c810160208610156113b35750805b601f850160051c820191505b818110156113d2578281556001016113bf565b505050505050565b815167ffffffffffffffff8111156113f4576113f4611178565b6114088161140284546112f0565b8461138c565b602080601f83116001811461143d57600084156114255750858301515b600019600386901b1c1916600185901b1785556113d2565b600085815260208120601f198616915b8281101561146c5788860151825594840194600190910190840161144d565b508582101561148a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fdfea26469706673582212209d96b6193fc66465f88d9053bd1065525b9fda1de0c361bb0798efa4e8157e7364736f6c634300080f0033",
  "deployedSourceMap": "266:4663:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:100:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4619:102:11;4696:18;;-1:-1:-1;;;4696:18:11;;;;4619:102;;790:10:20;778:23;;;760:42;;748:2;733:18;4619:102:11;616:192:20;4707:201:7;;;;;;:::i;:::-;;:::i;:::-;;;1434:14:20;;1427:22;1409:41;;1397:2;1382:18;4707:201:7;1269:187:20;3060:509:11;;;;;;:::i;:::-;;:::i;:::-;;;1792:25:20;;;1780:2;1765:18;3060:509:11;1646:177:20;3476:108:7;3564:12;;3476:108;;5488:261;;;;;;:::i;:::-;;:::i;3318:93::-;;;3401:2;2431:36:20;;2419:2;2404:18;3318:93:7;2289:184:20;3575:201:11;;;;;;:::i;:::-;;:::i;:::-;;6158:238:7;;;;;;:::i;:::-;;:::i;3989:200:11:-;;;;;;:::i;:::-;;:::i;3647:127:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3748:18:7;3721:7;3748:18;;;;;;;;;;;;3647:127;4510:103:11;4595:10;;-1:-1:-1;;;;;4595:10:11;4510:103;;;-1:-1:-1;;;;;2894:32:20;;;2876:51;;2864:2;2849:18;4510:103:11;2730:203:20;3782:201:11;;;;;;:::i;:::-;;:::i;2566:104:7:-;;;:::i;6899:436::-;;;;;;:::i;:::-;;:::i;3980:193::-;;;;;;:::i;:::-;;:::i;2520:534:11:-;;;;;;:::i;:::-;;:::i;4195:202::-;;;;;;:::i;:::-;;:::i;4403:101::-;4480:17;;-1:-1:-1;;;;;4480:17:11;4403:101;;2099:350;;;;;;:::i;:::-;;:::i;4824:103::-;4902:18;;4824:103;;4236:151:7;;;;;;:::i;:::-;;:::i;4727:91:11:-;4799:12;;4727:91;;2347:100:7;2401:13;2434:5;2427:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:100;:::o;4707:201::-;4790:4;719:10:3;4846:32:7;719:10:3;4862:7:7;4871:6;4846:8;:32::i;:::-;-1:-1:-1;4896:4:7;;4707:201;-1:-1:-1;;;4707:201:7:o;3060:509:11:-;3162:19;3122:10;3162:19;1151:18;;1141:7;:28;1133:37;;;;;;1200:7;1184:12;;:23;;;;;;;:::i;:::-;;;;;;;;1243:7;1221:18;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;2261:21:0::1;:19;:21::i;:::-;3211:1:11::2;3195:13;3564:12:7::0;;;3476:108;3195:13:11::2;:17;3192:371;;;3313:55;3340:13;3564:12:7::0;;;3476:108;3340:13:11::2;3355:12;::::0;3313:10;;:55;:26:::2;:55::i;:::-;3299:69;;3382:30;3388:10;3400:11;3382:5;:30::i;:::-;3426:10;::::0;:43:::2;::::0;-1:-1:-1;;;3426:43:11;;3446:10:::2;3426:43;::::0;::::2;6591:51:20::0;6658:18;;;6651:34;;;-1:-1:-1;;;;;3426:10:11;;::::2;::::0;:19:::2;::::0;6564:18:20;;3426:43:11::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3192:371;;;3514:38;;-1:-1:-1::0;;;3514:38:11::2;;;;;;;;;;;3192:371;2303:20:0::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3060:509:11::0;;;;;:::o;5488:261:7:-;5585:4;719:10:3;5643:38:7;5659:4;719:10:3;5674:6:7;5643:15;:38::i;:::-;5692:27;5702:4;5708:2;5712:6;5692:9;:27::i;:::-;-1:-1:-1;5737:4:7;;5488:261;-1:-1:-1;;;;5488:261:7:o;3575:201:11:-;739:17;;-1:-1:-1;;;;;739:17:11;725:10;:31;717:40;;;;;;3691:10;3703:5:::1;1471:18;;1461:7;:28;1453:37;;;::::0;::::1;;1526:7;1504:18;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2261:21:0::2;:19;:21::i;:::-;3733:10:11::3;::::0;:36:::3;::::0;-1:-1:-1;;;3733:36:11;;-1:-1:-1;;;;;6609:32:20;;;3733:36:11::3;::::0;::::3;6591:51:20::0;6658:18;;;6651:34;;;3733:10:11;;::::3;::::0;:19:::3;::::0;6564:18:20;;3733:36:11::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2303:20:0::2;1716:1:::0;2809:7;:22;2629:209;2303:20:::2;767:1:11::1;;3575:201:::0;;:::o;6158:238:7:-;6246:4;719:10:3;6302:64:7;719:10:3;6318:7:7;6355:10;6327:25;719:10:3;6318:7:7;6327:9;:25::i;:::-;:38;;;;:::i;:::-;6302:8;:64::i;3989:200:11:-;739:17;;-1:-1:-1;;;;;739:17:11;725:10;:31;717:40;;;;;;4088:9;4099:4:::1;1045:7;1029:12;;:23;;;;;;;:::i;:::-;;;;;;;;1088:7;1066:18;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;1001:260:11::1;::::0;-1:-1:-1;1001:260:11::1;;2261:21:0::2;:19;:21::i;:::-;2303:20;1716:1:::0;2809:7;:22;2629:209;2303:20:::2;767:1:11::1;;3989:200:::0;:::o;3782:201::-;739:17;;-1:-1:-1;;;;;739:17:11;725:10;:31;717:40;;;;;;3883:9;3894:4:::1;1408:7;1386:18;;:29;;;;;;;:::i;2566:104:7:-:0;2622:13;2655:7;2648:14;;;;;:::i;6899:436::-;6992:4;719:10:3;6992:4:7;7075:25;719:10:3;7092:7:7;7075:9;:25::i;:::-;7048:52;;7139:15;7119:16;:35;;7111:85;;;;-1:-1:-1;;;7111:85:7;;7148:2:20;7111:85:7;;;7130:21:20;7187:2;7167:18;;;7160:30;7226:34;7206:18;;;7199:62;-1:-1:-1;;;7277:18:20;;;7270:35;7322:19;;7111:85:7;;;;;;;;;7232:60;7241:5;7248:7;7276:15;7257:16;:34;7232:8;:60::i;3980:193::-;4059:4;719:10:3;4115:28:7;719:10:3;4132:2:7;4136:6;4115:9;:28::i;2520:534:11:-;2619:19;2581:9;2592:4;1045:7;1029:12;;:23;;;;;;;:::i;:::-;;;;;;;;1088:7;1066:18;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;1001:260:11;;-1:-1:-1;1001:260:11;;2261:21:0::1;:19;:21::i;:::-;2649:10:11::2;::::0;:61:::2;::::0;-1:-1:-1;;;2649:61:11;;2673:10:::2;2649:61;::::0;::::2;7592:34:20::0;2693:4:11::2;7642:18:20::0;;;7635:43;7694:18;;;7687:34;;;-1:-1:-1;;;;;2649:10:11;;::::2;::::0;:23:::2;::::0;7527:18:20;;2649:61:11::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2739:1;2723:13;3564:12:7::0;;;3476:108;2723:13:11::2;:17;2720:237;;;2840:54;2866:13;3564:12:7::0;;;3476:108;2840:54:11::2;2826:68;;2720:237;;;2937:9;2923:23;;2720:237;2966:30;2972:10;2984:11;2966:5;:30::i;:::-;3011:36;::::0;;3023:10:::2;6591:51:20::0;;6673:2;6658:18;;6651:34;;;3011:36:11::2;::::0;6564:18:20;3011:36:11::2;;;;;;;2303:20:0::1;1716:1:::0;2809:7;:22;2629:209;4195:202:11;739:17;;-1:-1:-1;;;;;739:17:11;725:10;:31;717:40;;;;;;2261:21:0::1;:19;:21::i;:::-;4317:10:11::2;4314:76;;;4345:7;4329:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4314:76:11::2;::::0;-1:-1:-1;4314:76:11::2;;4383:7;4367:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4314:76:11::2;2303:20:0::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;4195:202:11::0;;:::o;2099:350::-;835:7;;-1:-1:-1;;;;;835:7:11;821:10;:21;813:30;;;;;;2279:31:::1;2295:5;2302:7;2279:15;:31::i;:::-;2320:10;:24:::0;;2354:40:::1;::::0;;::::1;-1:-1:-1::0;;;2354:40:11::1;-1:-1:-1::0;;;;;;2354:40:11;;;-1:-1:-1;;;;;2320:24:11;;::::1;2354:40:::0;;;;::::1;::::0;;;2404:17:::1;:38:::0;;;;;::::1;-1:-1:-1::0;;;;;;2404:38:11;;;::::1;;::::0;;-1:-1:-1;;2099:350:11:o;4236:151:7:-;-1:-1:-1;;;;;4352:18:7;;;4325:7;4352:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4236:151::o;10892:346::-;-1:-1:-1;;;;;10994:19:7;;10986:68;;;;-1:-1:-1;;;10986:68:7;;7934:2:20;10986:68:7;;;7916:21:20;7973:2;7953:18;;;7946:30;8012:34;7992:18;;;7985:62;-1:-1:-1;;;8063:18:20;;;8056:34;8107:19;;10986:68:7;7732:400:20;10986:68:7;-1:-1:-1;;;;;11073:21:7;;11065:68;;;;-1:-1:-1;;;11065:68:7;;8339:2:20;11065:68:7;;;8321:21:20;8378:2;8358:18;;;8351:30;8417:34;8397:18;;;8390:62;-1:-1:-1;;;8468:18:20;;;8461:32;8510:19;;11065:68:7;8137:398:20;11065:68:7;-1:-1:-1;;;;;11146:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11198:32;;1792:25:20;;;11198:32:7;;1765:18:20;11198:32:7;;;;;;;10892:346;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;8742:2:20;2460:63:0;;;8724:21:20;8781:2;8761:18;;;8754:30;8820:33;8800:18;;;8793:61;8871:18;;2460:63:0;8540:355:20;2460:63:0;1759:1;2598:7;:18;2336:287::o;915:277:19:-;1036:14;1063:13;1078;1095:18;1108:1;1111;1095:12;:18::i;:::-;1062:51;;;;1131:54;1153:1;1156;1159:11;1172:5;1179;1131:21;:54::i;:::-;1124:61;915:277;-1:-1:-1;;;;;;915:277:19:o;9779:675:7:-;-1:-1:-1;;;;;9863:21:7;;9855:67;;;;-1:-1:-1;;;9855:67:7;;9102:2:20;9855:67:7;;;9084:21:20;9141:2;9121:18;;;9114:30;9180:34;9160:18;;;9153:62;-1:-1:-1;;;9231:18:20;;;9224:31;9272:19;;9855:67:7;8900:397:20;9855:67:7;-1:-1:-1;;;;;10022:18:7;;9997:22;10022:18;;;;;;;;;;;10059:24;;;;10051:71;;;;-1:-1:-1;;;10051:71:7;;9504:2:20;10051:71:7;;;9486:21:20;9543:2;9523:18;;;9516:30;9582:34;9562:18;;;9555:62;-1:-1:-1;;;9633:18:20;;;9626:32;9675:19;;10051:71:7;9302:398:20;10051:71:7;-1:-1:-1;;;;;10158:18:7;;:9;:18;;;;;;;;;;;10179:23;;;10158:44;;10297:12;:22;;;;;;;10348:37;1792:25:20;;;10158:9:7;;:18;10348:37;;1765:18:20;10348:37:7;;;;;;;767:1:11::1;;3989:200:::0;:::o;11529:419:7:-;11630:24;11657:25;11667:5;11674:7;11657:9;:25::i;:::-;11630:52;;-1:-1:-1;;11697:16:7;:37;11693:248;;11779:6;11759:16;:26;;11751:68;;;;-1:-1:-1;;;11751:68:7;;9907:2:20;11751:68:7;;;9889:21:20;9946:2;9926:18;;;9919:30;9985:31;9965:18;;;9958:59;10034:18;;11751:68:7;9705:353:20;11751:68:7;11863:51;11872:5;11879:7;11907:6;11888:16;:25;11863:8;:51::i;7805:806::-;-1:-1:-1;;;;;7902:18:7;;7894:68;;;;-1:-1:-1;;;7894:68:7;;10265:2:20;7894:68:7;;;10247:21:20;10304:2;10284:18;;;10277:30;10343:34;10323:18;;;10316:62;-1:-1:-1;;;10394:18:20;;;10387:35;10439:19;;7894:68:7;10063:401:20;7894:68:7;-1:-1:-1;;;;;7981:16:7;;7973:64;;;;-1:-1:-1;;;7973:64:7;;10671:2:20;7973:64:7;;;10653:21:20;10710:2;10690:18;;;10683:30;10749:34;10729:18;;;10722:62;-1:-1:-1;;;10800:18:20;;;10793:33;10843:19;;7973:64:7;10469:399:20;7973:64:7;-1:-1:-1;;;;;8123:15:7;;8101:19;8123:15;;;;;;;;;;;8157:21;;;;8149:72;;;;-1:-1:-1;;;8149:72:7;;11075:2:20;8149:72:7;;;11057:21:20;11114:2;11094:18;;;11087:30;11153:34;11133:18;;;11126:62;-1:-1:-1;;;11204:18:20;;;11197:36;11250:19;;8149:72:7;10873:402:20;8149:72:7;-1:-1:-1;;;;;8257:15:7;;;:9;:15;;;;;;;;;;;8275:20;;;8257:38;;8475:13;;;;;;;;;;:23;;;;;;8527:26;;1792:25:20;;;8475:13:7;;8527:26;;1765:18:20;8527:26:7;;;;;;;8566:37;3989:200:11;8898:548:7;-1:-1:-1;;;;;8982:21:7;;8974:65;;;;-1:-1:-1;;;8974:65:7;;11482:2:20;8974:65:7;;;11464:21:20;11521:2;11501:18;;;11494:30;11560:33;11540:18;;;11533:61;11611:18;;8974:65:7;11280:355:20;8974:65:7;9130:6;9114:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9285:18:7;;:9;:18;;;;;;;;;;;:28;;;;;;9340:37;1792:25:20;;;9340:37:7;;1765:18:20;9340:37:7;;;;;;;4195:202:11;;:::o;2139:138:7:-;2228:5;:13;2236:5;2228;:13;:::i;:::-;-1:-1:-1;2252:7:7;:17;2262:7;2252;:17;:::i;5820:547:19:-;5886:13;;-1:-1:-1;;6254:1:19;6251;6244:20;6293:1;6290;6286:9;6277:18;;6344:5;6340:2;6337:13;6329:5;6325:2;6321:14;6317:34;6308:43;;;5820:547;;;;;:::o;6799:3427::-;6971:14;7059:5;7068:1;7059:10;7055:3165;;7130:11;7122:5;:19;;;;;:::i;:::-;;7113:28;;7055:3165;;;7286:11;7277:5;:20;7273:80;;7306:47;;-1:-1:-1;;;7306:47:19;;;;;14150:25:20;;;14191:18;;;14184:34;;;14123:18;;7306:47:19;13976:248:20;7273:80:19;7452:17;7587:11;7584:1;7581;7574:25;8166:1;8151:12;;:16;;8136:32;;8286:25;;;;;8118:15;8567;;;8563:29;;;8559:37;;;7701:20;;;7690:32;;;8696:15;;;7748:21;;;;8398:19;;;;8687:24;;;;;-1:-1:-1;;9082:1:19;9063;:15;;9062:21;;9326;;;9322:25;;9311:36;9399:21;;;9395:25;;9384:36;9473:21;;;9469:25;;9458:36;9547:21;;;9543:25;;9532:36;9621:21;;;9617:25;;9606:36;9696:21;;;9692:25;;;9681:36;10180:15;;7055:3165;6799:3427;;;;;;;:::o;14:597:20:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:20;574:15;-1:-1:-1;;570:29:20;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:20:o;813:131::-;-1:-1:-1;;;;;888:31:20;;878:42;;868:70;;934:1;931;924:12;868:70;813:131;:::o;949:315::-;1017:6;1025;1078:2;1066:9;1057:7;1053:23;1049:32;1046:52;;;1094:1;1091;1084:12;1046:52;1133:9;1120:23;1152:31;1177:5;1152:31;:::i;:::-;1202:5;1254:2;1239:18;;;;1226:32;;-1:-1:-1;;;949:315:20:o;1461:180::-;1520:6;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;-1:-1:-1;1612:23:20;;1461:180;-1:-1:-1;1461:180:20:o;1828:456::-;1905:6;1913;1921;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2029:9;2016:23;2048:31;2073:5;2048:31;:::i;:::-;2098:5;-1:-1:-1;2155:2:20;2140:18;;2127:32;2168:33;2127:32;2168:33;:::i;:::-;1828:456;;2220:7;;-1:-1:-1;;;2274:2:20;2259:18;;;;2246:32;;1828:456::o;2478:247::-;2537:6;2590:2;2578:9;2569:7;2565:23;2561:32;2558:52;;;2606:1;2603;2596:12;2558:52;2645:9;2632:23;2664:31;2689:5;2664:31;:::i;:::-;2714:5;2478:247;-1:-1:-1;;;2478:247:20:o;2938:118::-;3024:5;3017:13;3010:21;3003:5;3000:32;2990:60;;3046:1;3043;3036:12;3061:309;3126:6;3134;3187:2;3175:9;3166:7;3162:23;3158:32;3155:52;;;3203:1;3200;3193:12;3155:52;3239:9;3226:23;3216:33;;3299:2;3288:9;3284:18;3271:32;3312:28;3334:5;3312:28;:::i;:::-;3359:5;3349:15;;;3061:309;;;;;:::o;3375:127::-;3436:10;3431:3;3427:20;3424:1;3417:31;3467:4;3464:1;3457:15;3491:4;3488:1;3481:15;3507:719;3550:5;3603:3;3596:4;3588:6;3584:17;3580:27;3570:55;;3621:1;3618;3611:12;3570:55;3657:6;3644:20;3683:18;3720:2;3716;3713:10;3710:36;;;3726:18;;:::i;:::-;3801:2;3795:9;3769:2;3855:13;;-1:-1:-1;;3851:22:20;;;3875:2;3847:31;3843:40;3831:53;;;3899:18;;;3919:22;;;3896:46;3893:72;;;3945:18;;:::i;:::-;3985:10;3981:2;3974:22;4020:2;4012:6;4005:18;4066:3;4059:4;4054:2;4046:6;4042:15;4038:26;4035:35;4032:55;;;4083:1;4080;4073:12;4032:55;4147:2;4140:4;4132:6;4128:17;4121:4;4113:6;4109:17;4096:54;4194:1;4187:4;4182:2;4174:6;4170:15;4166:26;4159:37;4214:6;4205:15;;;;;;3507:719;;;;:::o;4231:1008::-;4360:6;4368;4376;4384;4392;4445:3;4433:9;4424:7;4420:23;4416:33;4413:53;;;4462:1;4459;4452:12;4413:53;4502:9;4489:23;4531:18;4572:2;4564:6;4561:14;4558:34;;;4588:1;4585;4578:12;4558:34;4611:50;4653:7;4644:6;4633:9;4629:22;4611:50;:::i;:::-;4601:60;;4714:2;4703:9;4699:18;4686:32;4670:48;;4743:2;4733:8;4730:16;4727:36;;;4759:1;4756;4749:12;4727:36;;4782:52;4826:7;4815:8;4804:9;4800:24;4782:52;:::i;:::-;4772:62;;;4884:2;4873:9;4869:18;4856:32;4897:31;4922:5;4897:31;:::i;:::-;4947:5;-1:-1:-1;5004:2:20;4989:18;;4976:32;5052:10;5039:24;;5027:37;;5017:65;;5078:1;5075;5068:12;5017:65;5101:7;-1:-1:-1;5160:3:20;5145:19;;5132:33;5174;5132;5174;:::i;:::-;5226:7;5216:17;;;4231:1008;;;;;;;;:::o;5244:388::-;5312:6;5320;5373:2;5361:9;5352:7;5348:23;5344:32;5341:52;;;5389:1;5386;5379:12;5341:52;5428:9;5415:23;5447:31;5472:5;5447:31;:::i;:::-;5497:5;-1:-1:-1;5554:2:20;5539:18;;5526:32;5567:33;5526:32;5567:33;:::i;5637:380::-;5716:1;5712:12;;;;5759;;;5780:61;;5834:4;5826:6;5822:17;5812:27;;5780:61;5887:2;5879:6;5876:14;5856:18;5853:38;5850:161;;5933:10;5928:3;5924:20;5921:1;5914:31;5968:4;5965:1;5958:15;5996:4;5993:1;5986:15;5850:161;;5637:380;;;:::o;6022:127::-;6083:10;6078:3;6074:20;6071:1;6064:31;6114:4;6111:1;6104:15;6138:4;6135:1;6128:15;6154:128;6194:3;6225:1;6221:6;6218:1;6215:13;6212:39;;;6231:18;;:::i;:::-;-1:-1:-1;6267:9:20;;6154:128::o;6287:125::-;6327:4;6355:1;6352;6349:8;6346:34;;;6360:18;;:::i;:::-;-1:-1:-1;6397:9:20;;6287:125::o;6696:245::-;6763:6;6816:2;6804:9;6795:7;6791:23;6787:32;6784:52;;;6832:1;6829;6822:12;6784:52;6864:9;6858:16;6883:28;6905:5;6883:28;:::i;11766:545::-;11868:2;11863:3;11860:11;11857:448;;;11904:1;11929:5;11925:2;11918:17;11974:4;11970:2;11960:19;12044:2;12032:10;12028:19;12025:1;12021:27;12015:4;12011:38;12080:4;12068:10;12065:20;12062:47;;;-1:-1:-1;12103:4:20;12062:47;12158:2;12153:3;12149:12;12146:1;12142:20;12136:4;12132:31;12122:41;;12213:82;12231:2;12224:5;12221:13;12213:82;;;12276:17;;;12257:1;12246:13;12213:82;;;12217:3;;;11766:545;;;:::o;12487:1352::-;12613:3;12607:10;12640:18;12632:6;12629:30;12626:56;;;12662:18;;:::i;:::-;12691:97;12781:6;12741:38;12773:4;12767:11;12741:38;:::i;:::-;12735:4;12691:97;:::i;:::-;12843:4;;12907:2;12896:14;;12924:1;12919:663;;;;13626:1;13643:6;13640:89;;;-1:-1:-1;13695:19:20;;;13689:26;13640:89;-1:-1:-1;;12444:1:20;12440:11;;;12436:24;12432:29;12422:40;12468:1;12464:11;;;12419:57;13742:81;;12889:944;;12919:663;11713:1;11706:14;;;11750:4;11737:18;;-1:-1:-1;;12955:20:20;;;13073:236;13087:7;13084:1;13081:14;13073:236;;;13176:19;;;13170:26;13155:42;;13268:27;;;;13236:1;13224:14;;;;13103:19;;13073:236;;;13077:3;13337:6;13328:7;13325:19;13322:201;;;13398:19;;;13392:26;-1:-1:-1;;13481:1:20;13477:14;;;13493:3;13473:24;13469:37;13465:42;13450:58;13435:74;;13322:201;-1:-1:-1;;;;;13569:1:20;13553:14;;;13549:22;13536:36;;-1:-1:-1;12487:1352:20:o;13844:127::-;13905:10;13900:3;13896:20;13893:1;13886:31;13936:4;13933:1;13926:15;13960:4;13957:1;13950:15",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "Math512Bits__MulDivOverflow(uint256,uint256)": [
        {
          "notice": "Math512Bits errors "
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initializeStakePool(string,string,address,uint32,address)": {
        "details": "using create2 to instantiate contract LiquidXStakePool and then call this function to initialize the contract. params - name_: the name of pool share token corresponding to the token as assets staked in the pool. - symbol_: abbreviation of 'name_' - stakeToken_: address of token as assets staked in the pool. - leverageAllowedMax_: max allowed leverage to use for Aggregator to borrow money on behalf of managers;"
      },
      "mintShare(uint256)": {
        "details": "stake assets and get corresponding pool share token"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    266,
    4929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B0441E2 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB6395D66 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB6395D66 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xBD77C09F EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xCEB24687 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xD90A13B2 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xEC022918 EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B0441E2 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8F602842 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xB58B6E29 EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x38ABDD95 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x6086D12F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x8D838E3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xEBC2D23 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x216 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1090 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST PUSH2 0x216 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x274 JUMP JUMPDEST PUSH2 0x216 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x121B JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x12C2 JUMP JUMPDEST PUSH2 0x956 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x397 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x981 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 PUSH1 0xA SLOAD DUP3 LT PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x42E PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x439 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x4DD JUMPI PUSH2 0x456 PUSH2 0x44B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP7 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST SWAP3 POP PUSH2 0x462 CALLER DUP5 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x136F JUMP JUMPDEST POP PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43D313D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x500 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x515 DUP6 DUP3 DUP6 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x520 DUP6 DUP6 DUP6 PUSH2 0xCCE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xA SLOAD DUP3 LT PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH2 0x572 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x136F JUMP JUMPDEST POP PUSH2 0x5F4 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x60D DUP4 DUP4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x66C SWAP1 POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x67E PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x6CC DUP3 DUP7 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x520 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x787 SWAP1 POP JUMP JUMPDEST PUSH2 0x78F PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80A SWAP2 SWAP1 PUSH2 0x136F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x816 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x82F JUMPI PUSH2 0x828 PUSH2 0x44B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x833 JUMP JUMPDEST DUP4 SWAP3 POP JUMPDEST PUSH2 0x83D CALLER DUP5 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x9E3AFF002C0BFDB18B77ADB1051B53EDA74F919EE90E162C2626995E4DB8F055 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x500 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89F PUSH2 0xAA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C2 JUMPI DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8DA SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x8E4 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x909 DUP6 DUP6 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB0D DUP7 DUP7 PUSH2 0xF4A JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xB1E DUP7 DUP7 DUP7 DUP6 DUP6 PUSH2 0xF69 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP5 DUP5 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5F4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x728 JUMP JUMPDEST PUSH2 0x5F4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x981 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x728 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1340 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH2 0xF3D DUP4 DUP3 PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x67E DUP3 DUP3 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 NOT DUP4 DUP6 MULMOD DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0xF8A JUMPI DUP4 DUP4 DUP2 PUSH2 0xF82 JUMPI PUSH2 0xF82 PUSH2 0x149A JUMP JUMPDEST DIV SWAP1 POP PUSH2 0x101A JUMP JUMPDEST DUP4 DUP3 LT PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x656B542B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x728 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x1 DUP7 NOT DUP2 ADD DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x0 DUP2 SWAP1 SUB DUP2 SWAP1 DIV SWAP1 SWAP2 ADD DUP7 DUP4 GT SWAP1 SWAP6 SUB SWAP5 DUP6 MUL SWAP2 SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 DIV SWAP4 SWAP1 SWAP4 OR SWAP3 POP POP PUSH1 0x2 PUSH1 0x3 DUP5 MUL DUP2 XOR DUP1 DUP6 MUL DUP3 SUB MUL DUP1 DUP6 MUL DUP3 SUB MUL DUP1 DUP6 MUL DUP3 SUB MUL DUP1 DUP6 MUL DUP3 SUB MUL DUP1 DUP6 MUL DUP3 SUB MUL DUP1 DUP6 MUL SWAP1 SWAP2 SUB MUL DUP3 MUL JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1050 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1034 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1062 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10AE DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x10F5 DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1105 DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1133 DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x116D DUP2 PUSH2 0x113A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11BA JUMPI PUSH2 0x11BA PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E2 PUSH2 0x1178 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1257 DUP10 DUP4 DUP11 ADD PUSH2 0x118E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x126D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127A DUP9 DUP3 DUP10 ADD PUSH2 0x118E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x128B DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x12B4 DUP2 PUSH2 0x1078 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12E0 DUP2 PUSH2 0x1078 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x116D DUP2 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1304 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1324 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x132A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x136A JUMPI PUSH2 0x136A PUSH2 0x132A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1133 DUP2 PUSH2 0x113A JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x13B3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13BF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F4 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x1408 DUP2 PUSH2 0x1402 DUP5 SLOAD PUSH2 0x12F0 JUMP JUMPDEST DUP5 PUSH2 0x138C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x143D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1425 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x146C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x144D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x148A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SWAP7 0xB6 NOT EXTCODEHASH 0xC6 PUSH5 0x65F88D9053 0xBD LT PUSH6 0x525B9FDA1DE0 0xC3 PUSH2 0xBB07 SWAP9 0xEF LOG4 0xE8 ISZERO PUSH31 0x7364736F6C634300080F003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8B0441E2"
    },
    "38": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB6395D66"
    },
    "49": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB6395D66"
    },
    "60": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E0"
    },
    "64": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBD77C09F"
    },
    "71": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F3"
    },
    "75": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCEB24687"
    },
    "82": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x304"
    },
    "86": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD90A13B2"
    },
    "93": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x317"
    },
    "97": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31F"
    },
    "108": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEC022918"
    },
    "115": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x332"
    },
    "119": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "123": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "REVERT",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8B0441E2"
    },
    "131": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x267"
    },
    "135": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8F602842"
    },
    "142": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28C"
    },
    "146": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95D89B41"
    },
    "153": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29F"
    },
    "157": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA457C2D7"
    },
    "164": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A7"
    },
    "168": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "169": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "175": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "176": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "179": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "180": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB58B6E29"
    },
    "186": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "187": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CD"
    },
    "190": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "191": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "194": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "REVERT",
      "path": "11"
    },
    "195": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "202": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "GT",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "213": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E1"
    },
    "217": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x313CE567"
    },
    "224": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "225": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F4"
    },
    "228": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x38ABDD95"
    },
    "235": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "236": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x203"
    },
    "239": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "240": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x39509351"
    },
    "246": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "247": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x218"
    },
    "250": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "251": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6086D12F"
    },
    "257": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "258": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22B"
    },
    "261": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "262": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "268": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "269": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23E"
    },
    "272": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "273": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "276": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "REVERT",
      "path": "11"
    },
    "277": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FDDE03"
    },
    "284": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "285": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "289": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8D838E3"
    },
    "295": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "296": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x170"
    },
    "299": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "300": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "306": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "307": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "310": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "311": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xEBC2D23"
    },
    "317": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "318": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B8"
    },
    "321": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "322": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "323": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x18160DDD"
    },
    "328": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "EQ",
      "path": "11"
    },
    "329": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D9"
    },
    "332": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "333": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "334": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "DUP1",
      "path": "11"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        266,
        4929
      ],
      "op": "REVERT",
      "path": "11"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33A"
    },
    "345": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x167"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1023"
    },
    "358": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "DUP1",
      "path": "7"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SUB",
      "path": "7"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "RETURN",
      "path": "7"
    },
    "368": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4619,
        4721
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "369": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x8"
    },
    "371": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "378": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "DIV",
      "path": "11"
    },
    "379": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "384": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4696,
        4714
      ],
      "op": "AND",
      "path": "11"
    },
    "385": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4619,
        4721
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "387": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4619,
        4721
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "388": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "393": {
      "op": "SWAP1"
    },
    "394": {
      "op": "SWAP2"
    },
    "395": {
      "op": "AND"
    },
    "396": {
      "op": "DUP2"
    },
    "397": {
      "op": "MSTORE"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "400": {
      "op": "ADD"
    },
    "401": {
      "fn": "LiquidXStakePool.getLeverageAllowedMax",
      "offset": [
        4619,
        4721
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x167"
    },
    "404": {
      "op": "JUMP"
    },
    "405": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "406": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A3"
    },
    "412": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1090"
    },
    "418": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "419": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "420": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CC"
    },
    "423": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "424": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "425": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "427": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "428": {
      "op": "SWAP1"
    },
    "429": {
      "op": "ISZERO"
    },
    "430": {
      "op": "ISZERO"
    },
    "431": {
      "op": "DUP2"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x167"
    },
    "439": {
      "op": "JUMP"
    },
    "440": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "441": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CB"
    },
    "444": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C6"
    },
    "447": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "448": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "450": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10BC"
    },
    "453": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "454": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "455": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E4"
    },
    "458": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "459": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "460": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "462": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "463": {
      "op": "SWAP1"
    },
    "464": {
      "op": "DUP2"
    },
    "465": {
      "op": "MSTORE"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "468": {
      "op": "ADD"
    },
    "469": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x167"
    },
    "472": {
      "op": "JUMP"
    },
    "473": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "474": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x2"
    },
    "476": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "477": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "480": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMP",
      "path": "7"
    },
    "481": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "482": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EF"
    },
    "488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "489": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10D5"
    },
    "494": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "495": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x507"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "500": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "501": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "503": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "504": {
      "fn": "ERC20.decimals",
      "offset": [
        3401,
        3403
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x12"
    },
    "506": {
      "op": "DUP2"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "fn": "ERC20.decimals",
      "offset": [
        3318,
        3411
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x167"
    },
    "514": {
      "op": "JUMP"
    },
    "515": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "516": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "519": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x211"
    },
    "522": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "523": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "525": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1090"
    },
    "528": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "jump": "i",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMP",
      "path": "11"
    },
    "529": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "530": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x52B"
    },
    "533": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "jump": "i",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMP",
      "path": "11"
    },
    "534": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "535": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "STOP",
      "path": "11"
    },
    "536": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "537": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "540": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "544": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1090"
    },
    "549": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMP",
      "path": "7"
    },
    "550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "551": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FA"
    },
    "554": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMP",
      "path": "7"
    },
    "555": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "556": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "559": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x239"
    },
    "562": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "563": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "565": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10BC"
    },
    "568": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "i",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMP",
      "path": "11"
    },
    "569": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "570": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x61C"
    },
    "573": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "i",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMP",
      "path": "11"
    },
    "574": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "575": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "578": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "582": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1116"
    },
    "587": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMP",
      "path": "7"
    },
    "588": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "AND",
      "path": "7",
      "statement": 3
    },
    "598": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3721,
        3728
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "DUP2",
      "path": "7"
    },
    "602": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "603": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "605": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "DUP2",
      "path": "7"
    },
    "606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "608": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "610": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "612": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "613": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3748,
        3766
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "614": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3647,
        3774
      ],
      "op": "JUMP",
      "path": "7"
    },
    "615": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4510,
        4613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "616": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4595,
        4605
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x8"
    },
    "618": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4595,
        4605
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4595,
        4605
      ],
      "op": "AND",
      "path": "11"
    },
    "628": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4510,
        4613
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "629": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4510,
        4613
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "631": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4510,
        4613
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "638": {
      "op": "SHL"
    },
    "639": {
      "op": "SUB"
    },
    "640": {
      "op": "SWAP1"
    },
    "641": {
      "op": "SWAP2"
    },
    "642": {
      "op": "AND"
    },
    "643": {
      "op": "DUP2"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "fn": "LiquidXStakePool.getStakeTokenAddress",
      "offset": [
        4510,
        4613
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x167"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "653": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "656": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29A"
    },
    "659": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "660": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "662": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10BC"
    },
    "665": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "jump": "i",
      "offset": [
        3782,
        3983
      ],
      "op": "JUMP",
      "path": "11"
    },
    "666": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "667": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x683"
    },
    "670": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "jump": "i",
      "offset": [
        3782,
        3983
      ],
      "op": "JUMP",
      "path": "11"
    },
    "671": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "672": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A"
    },
    "675": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6AF"
    },
    "678": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMP",
      "path": "7"
    },
    "679": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B5"
    },
    "686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1090"
    },
    "692": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6BE"
    },
    "697": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMP",
      "path": "7"
    },
    "698": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "699": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "702": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C8"
    },
    "705": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "706": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "708": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1090"
    },
    "711": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMP",
      "path": "7"
    },
    "712": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "713": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x73E"
    },
    "716": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMP",
      "path": "7"
    },
    "717": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "718": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CB"
    },
    "721": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DB"
    },
    "724": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "725": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "727": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10BC"
    },
    "730": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        2520,
        3054
      ],
      "op": "JUMP",
      "path": "11"
    },
    "731": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "732": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x74C"
    },
    "735": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        2520,
        3054
      ],
      "op": "JUMP",
      "path": "11"
    },
    "736": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "737": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "740": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EE"
    },
    "743": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "744": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "746": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1148"
    },
    "749": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "i",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMP",
      "path": "11"
    },
    "750": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "751": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x880"
    },
    "754": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "i",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMP",
      "path": "11"
    },
    "755": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4403,
        4504
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "756": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4480,
        4497
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x6"
    },
    "758": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4480,
        4497
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "765": {
      "op": "SHL"
    },
    "766": {
      "op": "SUB"
    },
    "767": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4480,
        4497
      ],
      "op": "AND",
      "path": "11"
    },
    "768": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4403,
        4504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x274"
    },
    "771": {
      "fn": "LiquidXStakePool.getLiquidXAggregator",
      "offset": [
        4403,
        4504
      ],
      "op": "JUMP",
      "path": "11"
    },
    "772": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "773": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "776": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x312"
    },
    "779": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "780": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "782": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x121B"
    },
    "785": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "jump": "i",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMP",
      "path": "11"
    },
    "786": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "787": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8E8"
    },
    "790": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "jump": "i",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMP",
      "path": "11"
    },
    "791": {
      "fn": "LiquidXStakePool.getExtractableReserve",
      "offset": [
        4824,
        4927
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "792": {
      "fn": "LiquidXStakePool.getExtractableReserve",
      "offset": [
        4902,
        4920
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 6,
      "value": "0xA"
    },
    "794": {
      "fn": "LiquidXStakePool.getExtractableReserve",
      "offset": [
        4902,
        4920
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "795": {
      "fn": "LiquidXStakePool.getExtractableReserve",
      "offset": [
        4824,
        4927
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CB"
    },
    "798": {
      "fn": "LiquidXStakePool.getExtractableReserve",
      "offset": [
        4824,
        4927
      ],
      "op": "JUMP",
      "path": "11"
    },
    "799": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "800": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "806": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12C2"
    },
    "812": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x956"
    },
    "817": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "fn": "LiquidXStakePool.getTotalReserve",
      "offset": [
        4727,
        4818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "819": {
      "fn": "LiquidXStakePool.getTotalReserve",
      "offset": [
        4799,
        4811
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x9"
    },
    "821": {
      "fn": "LiquidXStakePool.getTotalReserve",
      "offset": [
        4799,
        4811
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "822": {
      "fn": "LiquidXStakePool.getTotalReserve",
      "offset": [
        4727,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CB"
    },
    "825": {
      "fn": "LiquidXStakePool.getTotalReserve",
      "offset": [
        4727,
        4818
      ],
      "op": "JUMP",
      "path": "11"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        2401,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        2434,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x3"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "833": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x349"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F0"
    },
    "840": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "846": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "850": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DIV",
      "path": "7"
    },
    "851": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MUL",
      "path": "7"
    },
    "852": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "859": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x375"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F0"
    },
    "884": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C2"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "LT",
      "path": "7"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x397"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DIV",
      "path": "7"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MUL",
      "path": "7"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C2"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMP",
      "path": "7"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP2",
      "path": "7"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP1",
      "path": "7"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP4",
      "path": "7"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "GT",
      "path": "7"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A5"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SUB",
      "path": "7"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "AND",
      "path": "7"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "DUP3",
      "path": "7"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "ADD",
      "path": "7"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2427,
        2439
      ],
      "op": "POP",
      "path": "7"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2347,
        2447
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "971": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2347,
        2447
      ],
      "op": "JUMP",
      "path": "7"
    },
    "972": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "973": {
      "fn": "ERC20.approve",
      "offset": [
        4790,
        4794
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "975": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 9
    },
    "976": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4878
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 10,
      "value": "0x3DA"
    },
    "979": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "980": {
      "fn": "ERC20.approve",
      "offset": [
        4862,
        4869
      ],
      "op": "DUP6",
      "path": "7"
    },
    "981": {
      "fn": "ERC20.approve",
      "offset": [
        4871,
        4877
      ],
      "op": "DUP6",
      "path": "7"
    },
    "982": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4854
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x981"
    },
    "985": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4846,
        4878
      ],
      "op": "JUMP",
      "path": "7"
    },
    "986": {
      "fn": "ERC20.approve",
      "offset": [
        4846,
        4878
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "fn": "ERC20.approve",
      "offset": [
        4896,
        4900
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x1"
    },
    "990": {
      "fn": "ERC20.approve",
      "offset": [
        4896,
        4900
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "991": {
      "fn": "ERC20.approve",
      "offset": [
        4707,
        4908
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "op": "POP"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4707,
        4908
      ],
      "op": "JUMP",
      "path": "7"
    },
    "996": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "997": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3162,
        3181
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "999": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3122,
        3132
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1000": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3162,
        3181
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1001": {
      "offset": [
        1151,
        1169
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1003": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1151,
        1169
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1004": {
      "offset": [
        1141,
        1148
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1005": {
      "offset": [
        1141,
        1169
      ],
      "op": "LT",
      "path": "11"
    },
    "1006": {
      "offset": [
        1133,
        1170
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F6"
    },
    "1009": {
      "offset": [
        1133,
        1170
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1010": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1133,
        1170
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1012": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1133,
        1170
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1013": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1133,
        1170
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1014": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1133,
        1170
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1015": {
      "offset": [
        1200,
        1207
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1016": {
      "offset": [
        1184,
        1196
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1018": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1196
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1020": {
      "offset": [
        1184,
        1207
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1021": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1022": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1023": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x408"
    },
    "1026": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1027": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1028": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1358"
    },
    "1031": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        1184,
        1207
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1032": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1033": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1034": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "POP",
      "path": "11"
    },
    "1035": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "POP",
      "path": "11"
    },
    "1036": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1037": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1038": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1039": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1184,
        1207
      ],
      "op": "POP",
      "path": "11"
    },
    "1040": {
      "offset": [
        1243,
        1250
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1041": {
      "offset": [
        1221,
        1239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1043": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1239
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1045": {
      "offset": [
        1221,
        1250
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1046": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1047": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1048": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x421"
    },
    "1051": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1052": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1053": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1358"
    },
    "1056": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        1221,
        1250
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1057": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1058": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1059": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1060": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        1221,
        1250
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E"
    },
    "1066": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "1069": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1070": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3211,
        3212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1073": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3195,
        3208
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x439"
    },
    "1076": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1078": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1079": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1080": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1081": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3195,
        3208
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1082": {
      "branch": 74,
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3195,
        3212
      ],
      "op": "GT",
      "path": "11"
    },
    "1083": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1084": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DD"
    },
    "1087": {
      "branch": 74,
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1088": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3368
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 12,
      "value": "0x456"
    },
    "1091": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3340,
        3353
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44B"
    },
    "1094": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1096": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1097": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1098": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1099": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3340,
        3353
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1100": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3355,
        3367
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1102": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3355,
        3367
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1103": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3323
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1104": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3323
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1105": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1106": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAFE"
    },
    "1109": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        3313,
        3368
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1110": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3313,
        3368
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1111": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3299,
        3368
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1112": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3299,
        3368
      ],
      "op": "POP",
      "path": "11"
    },
    "1113": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3382,
        3412
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 13,
      "value": "0x462"
    },
    "1116": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3388,
        3398
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1117": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3400,
        3411
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1118": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3382,
        3387
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB28"
    },
    "1121": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        3382,
        3412
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1122": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3382,
        3412
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1123": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x8"
    },
    "1125": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1126": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1128": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1129": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1138": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1139": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3446,
        3456
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1140": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1142": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1143": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ADD",
      "path": "11"
    },
    "1144": {
      "op": "MSTORE"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1147": {
      "op": "DUP2"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "DUP7"
    },
    "1150": {
      "op": "SWAP1"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1161": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1162": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "AND",
      "path": "11"
    },
    "1163": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3436
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1164": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3445
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "1169": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3445
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1175": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1177": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1178": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1179": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1180": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "SUB",
      "path": "11"
    },
    "1181": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1182": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1184": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1185": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "GAS",
      "path": "11"
    },
    "1186": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "CALL",
      "path": "11"
    },
    "1187": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1188": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1189": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1190": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4B3"
    },
    "1193": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1194": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1195": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1197": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1198": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1199": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1200": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1202": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1203": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1204": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1205": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1206": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1207": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1208": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1210": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1211": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1212": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1214": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "NOT",
      "path": "11"
    },
    "1215": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1217": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1218": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ADD",
      "path": "11"
    },
    "1219": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "AND",
      "path": "11"
    },
    "1220": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1221": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ADD",
      "path": "11"
    },
    "1222": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1223": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1225": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1226": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1227": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1228": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "ADD",
      "path": "11"
    },
    "1229": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1230": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4D7"
    },
    "1233": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1234": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1235": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136F"
    },
    "1238": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "i",
      "offset": [
        3426,
        3469
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1239": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1240": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3426,
        3469
      ],
      "op": "POP",
      "path": "11"
    },
    "1241": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4F6"
    },
    "1244": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1245": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1246": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1248": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1249": {
      "op": "PUSH4",
      "value": "0x43D313D"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1258": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1259": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1261": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "ADD",
      "path": "11"
    },
    "1262": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1264": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1265": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1266": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1267": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "SUB",
      "path": "11"
    },
    "1268": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1269": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3514,
        3552
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1270": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3192,
        3563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1271": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "1274": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1276": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x5"
    },
    "1278": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1279": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1280": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1281": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "POP",
      "path": "11"
    },
    "1282": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "POP",
      "path": "11"
    },
    "1283": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1284": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1285": {
      "fn": "LiquidXStakePool.burnShare",
      "offset": [
        3060,
        3569
      ],
      "op": "POP",
      "path": "11"
    },
    "1286": {
      "fn": "LiquidXStakePool.burnShare",
      "jump": "o",
      "offset": [
        3060,
        3569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5585,
        5589
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1290": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5681
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 16,
      "value": "0x515"
    },
    "1294": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5659,
        5663
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1295": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5674,
        5680
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1297": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5A"
    },
    "1300": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5643,
        5681
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1301": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5643,
        5681
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5719
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 17,
      "value": "0x520"
    },
    "1305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5702,
        5706
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5708,
        5710
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1307": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5712,
        5718
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5701
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCCE"
    },
    "1311": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5692,
        5719
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1312": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5692,
        5719
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1313": {
      "op": "POP"
    },
    "1314": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5737,
        5741
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 18,
      "value": "0x1"
    },
    "1316": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5737,
        5741
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "1317": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5488,
        5749
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "op": "POP"
    },
    "1321": {
      "op": "POP"
    },
    "1322": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5488,
        5749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1323": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1324": {
      "offset": [
        739,
        756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1326": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        739,
        756
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1333": {
      "op": "SHL"
    },
    "1334": {
      "op": "SUB"
    },
    "1335": {
      "offset": [
        739,
        756
      ],
      "op": "AND",
      "path": "11"
    },
    "1336": {
      "offset": [
        725,
        735
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1337": {
      "offset": [
        725,
        756
      ],
      "op": "EQ",
      "path": "11"
    },
    "1338": {
      "offset": [
        717,
        757
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x542"
    },
    "1341": {
      "offset": [
        717,
        757
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1342": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1344": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1345": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1346": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1347": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3691,
        3701
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1348": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3703,
        3708
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1350": {
      "offset": [
        1471,
        1489
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1352": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1471,
        1489
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1353": {
      "offset": [
        1461,
        1468
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1354": {
      "offset": [
        1461,
        1489
      ],
      "op": "LT",
      "path": "11"
    },
    "1355": {
      "offset": [
        1453,
        1490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x553"
    },
    "1358": {
      "offset": [
        1453,
        1490
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1359": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1453,
        1490
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1361": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1453,
        1490
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1362": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1453,
        1490
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1363": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1453,
        1490
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1364": {
      "offset": [
        1526,
        1533
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1365": {
      "offset": [
        1504,
        1522
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1367": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1522
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1369": {
      "offset": [
        1504,
        1533
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1370": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1371": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1372": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x565"
    },
    "1375": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1376": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1377": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1358"
    },
    "1380": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "jump": "i",
      "offset": [
        1504,
        1533
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1381": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1382": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1383": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1384": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        1504,
        1533
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "1390": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "1393": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1394": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1395": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0x8"
    },
    "1397": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1398": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1400": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1401": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1410": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "SUB"
    },
    "1419": {
      "op": "DUP7"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "AND"
    },
    "1422": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1424": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1425": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ADD",
      "path": "11"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1429": {
      "op": "DUP3"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "DUP7"
    },
    "1432": {
      "op": "SWAP1"
    },
    "1433": {
      "op": "MSTORE"
    },
    "1434": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1435": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1436": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "AND",
      "path": "11"
    },
    "1437": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3743
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1438": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3752
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA9059CBB"
    },
    "1443": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3752
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "ADD"
    },
    "1447": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1449": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1451": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1452": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1453": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1454": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "SUB",
      "path": "11"
    },
    "1455": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1456": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1458": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1459": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "GAS",
      "path": "11"
    },
    "1460": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "CALL",
      "path": "11"
    },
    "1461": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1462": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1463": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1464": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5C5"
    },
    "1467": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1468": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1469": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1471": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1472": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1473": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1474": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1476": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1477": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1478": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1479": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1480": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1481": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1482": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1484": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1485": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1486": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1488": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "NOT",
      "path": "11"
    },
    "1489": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1491": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1492": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ADD",
      "path": "11"
    },
    "1493": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "AND",
      "path": "11"
    },
    "1494": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1495": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ADD",
      "path": "11"
    },
    "1496": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1497": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1499": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1500": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1501": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1502": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "ADD",
      "path": "11"
    },
    "1503": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1504": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E9"
    },
    "1507": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1508": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1509": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136F"
    },
    "1512": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "jump": "i",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1513": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1514": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3733,
        3769
      ],
      "op": "POP",
      "path": "11"
    },
    "1515": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F4"
    },
    "1518": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1520": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1522": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1523": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1524": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1525": {
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "1526": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "1527": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "POP",
      "path": "11"
    },
    "1528": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "offset": [
        3575,
        3776
      ],
      "op": "POP",
      "path": "11"
    },
    "1529": {
      "fn": "LiquidXStakePool.borrowFromAggregator",
      "jump": "o",
      "offset": [
        3575,
        3776
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1530": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6158,
        6396
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1531": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6246,
        6250
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1533": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1534": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6302,
        6366
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 20,
      "value": "0x3DA"
    },
    "1537": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1538": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6318,
        6325
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1539": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6355,
        6365
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1540": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x60D"
    },
    "1543": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1544": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6318,
        6325
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1545": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6336
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x956"
    },
    "1548": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6327,
        6352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1549": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x617"
    },
    "1553": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1554": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1340"
    },
    "1558": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6327,
        6365
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1559": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6327,
        6365
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1560": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6302,
        6310
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x981"
    },
    "1563": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6302,
        6366
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1564": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1565": {
      "offset": [
        739,
        756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1567": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        739,
        756
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "offset": [
        739,
        756
      ],
      "op": "AND",
      "path": "11"
    },
    "1577": {
      "offset": [
        725,
        735
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1578": {
      "offset": [
        725,
        756
      ],
      "op": "EQ",
      "path": "11"
    },
    "1579": {
      "offset": [
        717,
        757
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x633"
    },
    "1582": {
      "offset": [
        717,
        757
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1583": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1585": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1586": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1587": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1588": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        4088,
        4097
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1589": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        4099,
        4103
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1591": {
      "offset": [
        1045,
        1052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1592": {
      "offset": [
        1029,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1594": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1596": {
      "offset": [
        1029,
        1052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1597": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1598": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1599": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x648"
    },
    "1602": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1603": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1604": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "1607": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "i",
      "offset": [
        1029,
        1052
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1608": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1609": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1610": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1611": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1612": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1613": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1614": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1615": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1616": {
      "offset": [
        1088,
        1095
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1617": {
      "offset": [
        1066,
        1084
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1619": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1084
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1621": {
      "offset": [
        1066,
        1095
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1622": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1623": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1624": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x661"
    },
    "1627": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1628": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1629": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "1632": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "i",
      "offset": [
        1066,
        1095
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1633": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1634": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1635": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1636": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1066,
        1095
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "offset": [
        1001,
        1261
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66C"
    },
    "1641": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1001,
        1261
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "offset": [
        1001,
        1261
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1644": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        1001,
        1261
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1645": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1648": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "1651": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1652": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "1656": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1658": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1660": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1661": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1662": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "1664": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "1665": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "POP",
      "path": "11"
    },
    "1666": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "o",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1667": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3782,
        3983
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1668": {
      "offset": [
        739,
        756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1670": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        739,
        756
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "offset": [
        739,
        756
      ],
      "op": "AND",
      "path": "11"
    },
    "1680": {
      "offset": [
        725,
        735
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1681": {
      "offset": [
        725,
        756
      ],
      "op": "EQ",
      "path": "11"
    },
    "1682": {
      "offset": [
        717,
        757
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x69A"
    },
    "1685": {
      "offset": [
        717,
        757
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1686": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1688": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1689": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1690": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        717,
        757
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1691": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3883,
        3892
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1692": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        3894,
        3898
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1694": {
      "offset": [
        1408,
        1415
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1695": {
      "offset": [
        1386,
        1404
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1697": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1404
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1699": {
      "offset": [
        1386,
        1415
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1700": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1701": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1702": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x661"
    },
    "1705": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1706": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1707": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "offset": [
        1386,
        1415
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "1710": {
      "fn": "LiquidXStakePool.repayFromAggregator",
      "jump": "i",
      "offset": [
        1386,
        1415
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        2566,
        2670
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1712": {
      "fn": "ERC20.symbol",
      "offset": [
        2622,
        2635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1714": {
      "fn": "ERC20.symbol",
      "offset": [
        2655,
        2662
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x4"
    },
    "1716": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1717": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1718": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x349"
    },
    "1721": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1722": {
      "fn": "ERC20.symbol",
      "offset": [
        2648,
        2662
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12F0"
    },
    "1725": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2648,
        2662
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6899,
        7335
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1727": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6992,
        6996
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1729": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1730": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6992,
        6996
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1731": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7100
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CC"
    },
    "1734": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1735": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7092,
        7099
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1736": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x956"
    },
    "1739": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        7075,
        7100
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1740": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7075,
        7100
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1741": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7048,
        7100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1742": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7048,
        7100
      ],
      "op": "POP",
      "path": "7"
    },
    "1743": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7139,
        7154
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 22
    },
    "1744": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7135
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1745": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7154
      ],
      "op": "LT",
      "path": "7"
    },
    "1746": {
      "branch": 77,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7119,
        7154
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x731"
    },
    "1750": {
      "branch": 77,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1753": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1762": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1765": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "ADD",
      "path": "7"
    },
    "1769": {
      "op": "MSTORE"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "MSTORE"
    },
    "1777": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1812": {
      "op": "DUP3"
    },
    "1813": {
      "op": "ADD"
    },
    "1814": {
      "op": "MSTORE"
    },
    "1815": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "ADD"
    },
    "1828": {
      "op": "MSTORE"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1833": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1835": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1836": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1837": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1838": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SUB",
      "path": "7"
    },
    "1839": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1840": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "1841": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7111,
        7196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1842": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7232,
        7292
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 23,
      "value": "0x520"
    },
    "1845": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7241,
        7246
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1846": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7248,
        7255
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1847": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7276,
        7291
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1848": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7257,
        7273
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1849": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7257,
        7291
      ],
      "op": "SUB",
      "path": "7"
    },
    "1850": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7232,
        7240
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x981"
    },
    "1853": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        7232,
        7292
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1854": {
      "fn": "ERC20.transfer",
      "offset": [
        3980,
        4173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1855": {
      "fn": "ERC20.transfer",
      "offset": [
        4059,
        4063
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1857": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1858": {
      "fn": "ERC20.transfer",
      "offset": [
        4115,
        4143
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 24,
      "value": "0x3DA"
    },
    "1861": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1862": {
      "fn": "ERC20.transfer",
      "offset": [
        4132,
        4134
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1863": {
      "fn": "ERC20.transfer",
      "offset": [
        4136,
        4142
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1864": {
      "fn": "ERC20.transfer",
      "offset": [
        4115,
        4124
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCCE"
    },
    "1867": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4115,
        4143
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1868": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2520,
        3054
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1869": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2619,
        2638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1871": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2581,
        2590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1872": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2592,
        2596
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1874": {
      "offset": [
        1045,
        1052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1875": {
      "offset": [
        1029,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1877": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1041
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1879": {
      "offset": [
        1029,
        1052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1880": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1881": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1882": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x763"
    },
    "1885": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1886": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1887": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "1890": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        1029,
        1052
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1891": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1892": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1893": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1894": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1895": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1896": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1897": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1898": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1029,
        1052
      ],
      "op": "POP",
      "path": "11"
    },
    "1899": {
      "offset": [
        1088,
        1095
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1900": {
      "offset": [
        1066,
        1084
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1902": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1084
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1904": {
      "offset": [
        1066,
        1095
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1905": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1906": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1907": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x77C"
    },
    "1910": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1911": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1912": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "1915": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        1066,
        1095
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1916": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1917": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1918": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1919": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1066,
        1095
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "offset": [
        1001,
        1261
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x787"
    },
    "1924": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1001,
        1261
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "offset": [
        1001,
        1261
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1927": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        1001,
        1261
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1928": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78F"
    },
    "1931": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "1934": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1935": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1936": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0x8"
    },
    "1938": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1939": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1941": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1942": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1951": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1952": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2673,
        2683
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1953": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1955": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1956": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ADD",
      "path": "11"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2693,
        2697
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1966": {
      "op": "DUP2"
    },
    "1967": {
      "op": "ADD"
    },
    "1968": {
      "op": "DUP7"
    },
    "1969": {
      "op": "SWAP1"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1980": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1981": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "AND",
      "path": "11"
    },
    "1982": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2659
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1983": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2672
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "1988": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2672
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1991": {
      "op": "ADD"
    },
    "1992": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1994": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1996": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1997": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1998": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1999": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "SUB",
      "path": "11"
    },
    "2000": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2001": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2003": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2004": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "GAS",
      "path": "11"
    },
    "2005": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "CALL",
      "path": "11"
    },
    "2006": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2007": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2008": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2009": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E6"
    },
    "2012": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2013": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2014": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2016": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2017": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2018": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2019": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2021": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2022": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2023": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2024": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2025": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2026": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2027": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2029": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2030": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2031": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2033": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "NOT",
      "path": "11"
    },
    "2034": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2036": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2037": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ADD",
      "path": "11"
    },
    "2038": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "AND",
      "path": "11"
    },
    "2039": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2040": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ADD",
      "path": "11"
    },
    "2041": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2042": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2044": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2045": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2046": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2047": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "ADD",
      "path": "11"
    },
    "2048": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2049": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80A"
    },
    "2052": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2053": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2054": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136F"
    },
    "2057": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        2649,
        2710
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2058": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2059": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2649,
        2710
      ],
      "op": "POP",
      "path": "11"
    },
    "2060": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2739,
        2740
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2062": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2723,
        2736
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x816"
    },
    "2065": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2067": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2068": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2069": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2070": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2723,
        2736
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2071": {
      "branch": 75,
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2723,
        2740
      ],
      "op": "GT",
      "path": "11"
    },
    "2072": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2073": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x82F"
    },
    "2076": {
      "branch": 75,
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2077": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2840,
        2894
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 26,
      "value": "0x828"
    },
    "2080": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2866,
        2879
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44B"
    },
    "2083": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2085": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2086": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3564,
        3576
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2087": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3476,
        3584
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2088": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2840,
        2894
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2089": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2826,
        2894
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2090": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2826,
        2894
      ],
      "op": "POP",
      "path": "11"
    },
    "2091": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x833"
    },
    "2094": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2095": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2096": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2937,
        2946
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 27
    },
    "2097": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2923,
        2946
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2098": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2923,
        2946
      ],
      "op": "POP",
      "path": "11"
    },
    "2099": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2720,
        2957
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2100": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2966,
        2996
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 28,
      "value": "0x83D"
    },
    "2103": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2972,
        2982
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2104": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2984,
        2995
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2105": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2966,
        2971
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE72"
    },
    "2108": {
      "fn": "LiquidXStakePool.mintShare",
      "jump": "i",
      "offset": [
        2966,
        2996
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2109": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        2966,
        2996
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2110": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x40"
    },
    "2112": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2113": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2114": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3023,
        3033
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2119": {
      "op": "DUP2"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "DUP6"
    },
    "2122": {
      "op": "SWAP1"
    },
    "2123": {
      "op": "MSTORE"
    },
    "2124": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x9E3AFF002C0BFDB18B77ADB1051B53EDA74F919EE90E162C2626995E4DB8F055"
    },
    "2157": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2158": {
      "op": "ADD"
    },
    "2159": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2161": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2162": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2163": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2164": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "SUB",
      "path": "11"
    },
    "2165": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2166": {
      "fn": "LiquidXStakePool.mintShare",
      "offset": [
        3011,
        3047
      ],
      "op": "LOG1",
      "path": "11"
    },
    "2167": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "2170": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2172": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2174": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2175": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2176": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2177": {
      "offset": [
        739,
        756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "2179": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        739,
        756
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "offset": [
        739,
        756
      ],
      "op": "AND",
      "path": "11"
    },
    "2189": {
      "offset": [
        725,
        735
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2190": {
      "offset": [
        725,
        756
      ],
      "op": "EQ",
      "path": "11"
    },
    "2191": {
      "offset": [
        717,
        757
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x897"
    },
    "2194": {
      "offset": [
        717,
        757
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2195": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        717,
        757
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2197": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        717,
        757
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2198": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        717,
        757
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2199": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        717,
        757
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2200": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89F"
    },
    "2203": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA5"
    },
    "2206": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2207": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2208": {
      "branch": 76,
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4317,
        4327
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2209": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2210": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C2"
    },
    "2213": {
      "branch": 76,
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2214": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4345,
        4352
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 30
    },
    "2215": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "2217": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2219": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2220": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2221": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2222": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8B7"
    },
    "2225": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2226": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2227": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1340"
    },
    "2230": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "i",
      "offset": [
        4329,
        4352
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2231": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2232": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2233": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2234": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4329,
        4352
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2235": {
      "op": "POP"
    },
    "2236": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8DA"
    },
    "2239": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2242": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2243": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4383,
        4390
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 31
    },
    "2244": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4379
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "2246": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4379
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2248": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2249": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2250": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2251": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8D4"
    },
    "2254": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2255": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2256": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1358"
    },
    "2259": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "i",
      "offset": [
        4367,
        4390
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2260": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2261": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2262": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2263": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4367,
        4390
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4314,
        4390
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2267": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E4"
    },
    "2270": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2272": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2274": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2275": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2276": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2277": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "POP",
      "path": "11"
    },
    "2278": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "POP",
      "path": "11"
    },
    "2279": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "o",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2280": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2281": {
      "offset": [
        835,
        842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2283": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        835,
        842
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "SUB"
    },
    "2292": {
      "offset": [
        835,
        842
      ],
      "op": "AND",
      "path": "11"
    },
    "2293": {
      "offset": [
        821,
        831
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2294": {
      "offset": [
        821,
        842
      ],
      "op": "EQ",
      "path": "11"
    },
    "2295": {
      "offset": [
        813,
        843
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FF"
    },
    "2298": {
      "offset": [
        813,
        843
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2299": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        813,
        843
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2301": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        813,
        843
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2302": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        813,
        843
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2303": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        813,
        843
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2304": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2279,
        2310
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 32,
      "value": "0x909"
    },
    "2307": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2295,
        2300
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2308": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2302,
        2309
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2309": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF31"
    },
    "2312": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "jump": "i",
      "offset": [
        2279,
        2310
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2313": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2279,
        2310
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2314": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2330
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 33,
      "value": "0x8"
    },
    "2316": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2344
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2317": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2344
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2318": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "PUSH4",
      "path": "11",
      "statement": 34,
      "value": "0xFFFFFFFF"
    },
    "2323": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2324": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2325": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "AND",
      "path": "11"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "MUL",
      "path": "11"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2338": {
      "op": "SHL"
    },
    "2339": {
      "op": "SUB"
    },
    "2340": {
      "op": "NOT"
    },
    "2341": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2342": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2343": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "AND",
      "path": "11"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2350": {
      "op": "SHL"
    },
    "2351": {
      "op": "SUB"
    },
    "2352": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2344
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2353": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2344
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2354": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2320,
        2344
      ],
      "op": "AND",
      "path": "11"
    },
    "2355": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "OR",
      "path": "11"
    },
    "2356": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2357": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2358": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2359": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "OR",
      "path": "11"
    },
    "2360": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2361": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2362": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2354,
        2394
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2363": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 35,
      "value": "0x6"
    },
    "2365": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2366": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2367": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2368": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2369": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2370": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "AND",
      "path": "11"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "op": "NOT"
    },
    "2380": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2381": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2382": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2383": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "AND",
      "path": "11"
    },
    "2384": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "OR",
      "path": "11"
    },
    "2385": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2386": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "offset": [
        2404,
        2442
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "fn": "LiquidXStakePool.initializeStakePool",
      "jump": "o",
      "offset": [
        2099,
        2449
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2390": {
      "fn": "ERC20.allowance",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "op": "SUB"
    },
    "2399": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 36
    },
    "2400": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2401": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "AND",
      "path": "7"
    },
    "2402": {
      "fn": "ERC20.allowance",
      "offset": [
        4325,
        4332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2404": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2405": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2406": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2407": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4363
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2409": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2411": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2412": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2413": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2414": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2416": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2417": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2418": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4370
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2419": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2420": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2421": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2422": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "AND",
      "path": "7"
    },
    "2423": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2424": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2425": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2426": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2427": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2428": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2429": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2430": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2431": {
      "fn": "ERC20.allowance",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2432": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4236,
        4387
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2433": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2440": {
      "op": "SHL"
    },
    "2441": {
      "op": "SUB"
    },
    "2442": {
      "fn": "ERC20._approve",
      "offset": [
        10994,
        11013
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 37
    },
    "2443": {
      "branch": 78,
      "fn": "ERC20._approve",
      "offset": [
        10994,
        11013
      ],
      "op": "AND",
      "path": "7"
    },
    "2444": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9E3"
    },
    "2447": {
      "branch": 78,
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2448": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2450": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2459": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2462": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2464": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2465": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "ADD",
      "path": "7"
    },
    "2466": {
      "op": "MSTORE"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2469": {
      "op": "DUP1"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2508": {
      "op": "DUP3"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "op": "MSTORE"
    },
    "2511": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2521": {
      "op": "DUP3"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "MSTORE"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2526": {
      "op": "ADD"
    },
    "2527": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "2530": {
      "op": "JUMP"
    },
    "2531": {
      "fn": "ERC20._approve",
      "offset": [
        10986,
        11054
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "fn": "ERC20._approve",
      "offset": [
        11073,
        11094
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 38
    },
    "2541": {
      "branch": 79,
      "fn": "ERC20._approve",
      "offset": [
        11073,
        11094
      ],
      "op": "AND",
      "path": "7"
    },
    "2542": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA44"
    },
    "2545": {
      "branch": 79,
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2546": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2548": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2557": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2560": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2562": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2563": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "ADD",
      "path": "7"
    },
    "2564": {
      "op": "MSTORE"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "MSTORE"
    },
    "2572": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2607": {
      "op": "DUP3"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2618": {
      "op": "DUP3"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "2627": {
      "op": "JUMP"
    },
    "2628": {
      "fn": "ERC20._approve",
      "offset": [
        11065,
        11133
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2635": {
      "op": "SHL"
    },
    "2636": {
      "op": "SUB"
    },
    "2637": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 39
    },
    "2638": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2639": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "AND",
      "path": "7"
    },
    "2640": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2642": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2643": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2644": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2645": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11157
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2647": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2649": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2650": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2651": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2652": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2654": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2655": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2656": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11164
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2657": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2658": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2659": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "AND",
      "path": "7"
    },
    "2660": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2661": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2662": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2663": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "2664": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2665": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2666": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2667": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2668": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2669": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11173
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2670": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2671": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2672": {
      "fn": "ERC20._approve",
      "offset": [
        11146,
        11182
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2673": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 40
    },
    "2674": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2675": {
      "op": "DUP5"
    },
    "2676": {
      "op": "DUP2"
    },
    "2677": {
      "op": "MSTORE"
    },
    "2678": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2711": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2715": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2716": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2717": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2718": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SUB",
      "path": "7"
    },
    "2719": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2720": {
      "fn": "ERC20._approve",
      "offset": [
        11198,
        11230
      ],
      "op": "LOG3",
      "path": "7"
    },
    "2721": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "2722": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "2723": {
      "fn": "ERC20._approve",
      "offset": [
        10892,
        11238
      ],
      "op": "POP",
      "path": "7"
    },
    "2724": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10892,
        11238
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2725": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2726": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2728": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x5"
    },
    "2730": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2731": {
      "branch": 90,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "0"
    },
    "2732": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF7"
    },
    "2735": {
      "branch": 90,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2736": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2738": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2747": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2750": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2752": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2753": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "0"
    },
    "2754": {
      "op": "MSTORE"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2759": {
      "op": "DUP3"
    },
    "2760": {
      "op": "ADD"
    },
    "2761": {
      "op": "MSTORE"
    },
    "2762": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2797": {
      "op": "DUP3"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "MSTORE"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2802": {
      "op": "ADD"
    },
    "2803": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x728"
    },
    "2806": {
      "op": "JUMP"
    },
    "2807": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2808": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2810": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x5"
    },
    "2812": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2813": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2814": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        915,
        1192
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2815": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1036,
        1050
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2817": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1063,
        1076
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2818": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1078,
        1091
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2820": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1095,
        1113
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB0D"
    },
    "2823": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1108,
        1109
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2824": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1111,
        1112
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2825": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1095,
        1107
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF4A"
    },
    "2828": {
      "fn": "Math512Bits.mulDivRoundDown",
      "jump": "i",
      "offset": [
        1095,
        1113
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2829": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1095,
        1113
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2830": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1062,
        1113
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2831": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1062,
        1113
      ],
      "op": "POP",
      "path": "19"
    },
    "2832": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1062,
        1113
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2833": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1062,
        1113
      ],
      "op": "POP",
      "path": "19"
    },
    "2834": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1131,
        1185
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 43,
      "value": "0xB1E"
    },
    "2837": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1153,
        1154
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2838": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1156,
        1157
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2839": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1159,
        1170
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2840": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1172,
        1177
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2841": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1179,
        1184
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2842": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1131,
        1152
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF69"
    },
    "2845": {
      "fn": "Math512Bits.mulDivRoundDown",
      "jump": "i",
      "offset": [
        1131,
        1185
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2846": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1131,
        1185
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2847": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        1124,
        1185
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "2848": {
      "fn": "Math512Bits.mulDivRoundDown",
      "offset": [
        915,
        1192
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "op": "POP"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "fn": "Math512Bits.mulDivRoundDown",
      "jump": "o",
      "offset": [
        915,
        1192
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2856": {
      "fn": "ERC20._burn",
      "offset": [
        9779,
        10454
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2863": {
      "op": "SHL"
    },
    "2864": {
      "op": "SUB"
    },
    "2865": {
      "fn": "ERC20._burn",
      "offset": [
        9863,
        9884
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 44
    },
    "2866": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9863,
        9884
      ],
      "op": "AND",
      "path": "7"
    },
    "2867": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB88"
    },
    "2870": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2871": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2873": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2882": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2885": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2887": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2888": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "ADD",
      "path": "7"
    },
    "2889": {
      "op": "MSTORE"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2894": {
      "op": "DUP3"
    },
    "2895": {
      "op": "ADD"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2932": {
      "op": "DUP3"
    },
    "2933": {
      "op": "ADD"
    },
    "2934": {
      "op": "MSTORE"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2942": {
      "op": "DUP3"
    },
    "2943": {
      "op": "ADD"
    },
    "2944": {
      "op": "MSTORE"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "2951": {
      "op": "JUMP"
    },
    "2952": {
      "fn": "ERC20._burn",
      "offset": [
        9855,
        9922
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2959": {
      "op": "SHL"
    },
    "2960": {
      "op": "SUB"
    },
    "2961": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2962": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "AND",
      "path": "7"
    },
    "2963": {
      "fn": "ERC20._burn",
      "offset": [
        9997,
        10019
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2965": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2966": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2967": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2968": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2970": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2971": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2972": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2973": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2975": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2976": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2977": {
      "fn": "ERC20._burn",
      "offset": [
        10022,
        10040
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2978": {
      "fn": "ERC20._burn",
      "offset": [
        10059,
        10083
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 45
    },
    "2979": {
      "fn": "ERC20._burn",
      "offset": [
        10059,
        10083
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2980": {
      "fn": "ERC20._burn",
      "offset": [
        10059,
        10083
      ],
      "op": "LT",
      "path": "7"
    },
    "2981": {
      "branch": 81,
      "fn": "ERC20._burn",
      "offset": [
        10059,
        10083
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2982": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBFC"
    },
    "2985": {
      "branch": 81,
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2986": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2988": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2997": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3000": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3002": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3003": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "ADD",
      "path": "7"
    },
    "3004": {
      "op": "MSTORE"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3009": {
      "op": "DUP3"
    },
    "3010": {
      "op": "ADD"
    },
    "3011": {
      "op": "MSTORE"
    },
    "3012": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3047": {
      "op": "DUP3"
    },
    "3048": {
      "op": "ADD"
    },
    "3049": {
      "op": "MSTORE"
    },
    "3050": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "ADD"
    },
    "3060": {
      "op": "MSTORE"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3063": {
      "op": "ADD"
    },
    "3064": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3067": {
      "op": "JUMP"
    },
    "3068": {
      "fn": "ERC20._burn",
      "offset": [
        10051,
        10122
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "SUB"
    },
    "3077": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 46
    },
    "3078": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "AND",
      "path": "7"
    },
    "3079": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10167
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3081": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3082": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3083": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3084": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3086": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3087": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3088": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3089": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3091": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3092": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3093": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3094": {
      "fn": "ERC20._burn",
      "offset": [
        10179,
        10202
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3095": {
      "fn": "ERC20._burn",
      "offset": [
        10179,
        10202
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3096": {
      "fn": "ERC20._burn",
      "offset": [
        10179,
        10202
      ],
      "op": "SUB",
      "path": "7"
    },
    "3097": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10202
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3098": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10202
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3099": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10309
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 47,
      "value": "0x2"
    },
    "3101": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3102": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3103": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3104": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3105": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "SUB",
      "path": "7"
    },
    "3106": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3107": {
      "fn": "ERC20._burn",
      "offset": [
        10297,
        10319
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3108": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 48
    },
    "3109": {
      "op": "DUP6"
    },
    "3110": {
      "op": "DUP2"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10167
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3113": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10167
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3114": {
      "fn": "ERC20._burn",
      "offset": [
        10158,
        10176
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3115": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3148": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3149": {
      "op": "ADD"
    },
    "3150": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3152": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3153": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3154": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3155": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "SUB",
      "path": "7"
    },
    "3156": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3157": {
      "fn": "ERC20._burn",
      "offset": [
        10348,
        10385
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3158": {
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "3159": {
      "fn": "ERC20._burn",
      "offset": [
        767,
        768
      ],
      "op": "POP",
      "path": "11"
    },
    "3160": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "POP",
      "path": "11"
    },
    "3161": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "jump": "o",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3162": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11529,
        11948
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3163": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3165": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC66"
    },
    "3168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11667,
        11672
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3169": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11674,
        11681
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3170": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11666
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x956"
    },
    "3173": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11657,
        11682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11657,
        11682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3175": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11682
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3176": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11630,
        11682
      ],
      "op": "POP",
      "path": "7"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3179": {
      "op": "NOT"
    },
    "3180": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11697,
        11713
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3181": {
      "branch": 82,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11697,
        11734
      ],
      "op": "EQ",
      "path": "7"
    },
    "3182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11693,
        11941
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F4"
    },
    "3185": {
      "branch": 82,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11693,
        11941
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3186": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11779,
        11785
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 49
    },
    "3187": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11775
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3188": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11785
      ],
      "op": "LT",
      "path": "7"
    },
    "3189": {
      "branch": 83,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11759,
        11785
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3190": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC1"
    },
    "3193": {
      "branch": 83,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3194": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3196": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3203": {
      "op": "SHL"
    },
    "3204": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3205": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3208": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3210": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3211": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "ADD",
      "path": "7"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3217": {
      "op": "DUP3"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3255": {
      "op": "DUP3"
    },
    "3256": {
      "op": "ADD"
    },
    "3257": {
      "op": "MSTORE"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3260": {
      "op": "ADD"
    },
    "3261": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3264": {
      "op": "JUMP"
    },
    "3265": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11751,
        11819
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3266": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11863,
        11914
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 50,
      "value": "0x5F4"
    },
    "3269": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11872,
        11877
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3270": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11879,
        11886
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3271": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11907,
        11913
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3272": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11888,
        11904
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3273": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11888,
        11913
      ],
      "op": "SUB",
      "path": "7"
    },
    "3274": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11863,
        11871
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x981"
    },
    "3277": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11863,
        11914
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3278": {
      "fn": "ERC20._transfer",
      "offset": [
        7805,
        8611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "ERC20._transfer",
      "offset": [
        7902,
        7920
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 51
    },
    "3288": {
      "branch": 84,
      "fn": "ERC20._transfer",
      "offset": [
        7902,
        7920
      ],
      "op": "AND",
      "path": "7"
    },
    "3289": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD32"
    },
    "3292": {
      "branch": 84,
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3293": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3295": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3302": {
      "op": "SHL"
    },
    "3303": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3304": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3307": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3309": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3310": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "ADD",
      "path": "7"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3316": {
      "op": "DUP3"
    },
    "3317": {
      "op": "ADD"
    },
    "3318": {
      "op": "MSTORE"
    },
    "3319": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3354": {
      "op": "DUP3"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3368": {
      "op": "DUP3"
    },
    "3369": {
      "op": "ADD"
    },
    "3370": {
      "op": "MSTORE"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3377": {
      "op": "JUMP"
    },
    "3378": {
      "fn": "ERC20._transfer",
      "offset": [
        7894,
        7962
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3385": {
      "op": "SHL"
    },
    "3386": {
      "op": "SUB"
    },
    "3387": {
      "fn": "ERC20._transfer",
      "offset": [
        7981,
        7997
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 52
    },
    "3388": {
      "branch": 85,
      "fn": "ERC20._transfer",
      "offset": [
        7981,
        7997
      ],
      "op": "AND",
      "path": "7"
    },
    "3389": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD94"
    },
    "3392": {
      "branch": 85,
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3393": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3395": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3404": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3407": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3409": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3410": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "ADD",
      "path": "7"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "MSTORE"
    },
    "3419": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3454": {
      "op": "DUP3"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "MSTORE"
    },
    "3457": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3463": {
      "op": "SHL"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "ADD"
    },
    "3468": {
      "op": "MSTORE"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3475": {
      "op": "JUMP"
    },
    "3476": {
      "fn": "ERC20._transfer",
      "offset": [
        7973,
        8037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3483": {
      "op": "SHL"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3486": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "AND",
      "path": "7"
    },
    "3487": {
      "fn": "ERC20._transfer",
      "offset": [
        8101,
        8120
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3489": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3490": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3491": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3492": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3494": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3495": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3496": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3497": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3499": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3500": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3501": {
      "fn": "ERC20._transfer",
      "offset": [
        8123,
        8138
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3502": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 53
    },
    "3503": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3504": {
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "LT",
      "path": "7"
    },
    "3505": {
      "branch": 86,
      "fn": "ERC20._transfer",
      "offset": [
        8157,
        8178
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3506": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE0C"
    },
    "3509": {
      "branch": 86,
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3510": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3512": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3519": {
      "op": "SHL"
    },
    "3520": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3521": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3524": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3526": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3527": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "ADD",
      "path": "7"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3533": {
      "op": "DUP3"
    },
    "3534": {
      "op": "ADD"
    },
    "3535": {
      "op": "MSTORE"
    },
    "3536": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "MSTORE"
    },
    "3574": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3583": {
      "op": "SHL"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3586": {
      "op": "DUP3"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "op": "MSTORE"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3591": {
      "op": "ADD"
    },
    "3592": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3595": {
      "op": "JUMP"
    },
    "3596": {
      "fn": "ERC20._transfer",
      "offset": [
        8149,
        8221
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "op": "SUB"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 54
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "AND",
      "path": "7"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8266
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3610": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3611": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3612": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3613": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3615": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3616": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3617": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3618": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3620": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3621": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3622": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8272
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3623": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3624": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3625": {
      "fn": "ERC20._transfer",
      "offset": [
        8275,
        8295
      ],
      "op": "SUB",
      "path": "7"
    },
    "3626": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8295
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3627": {
      "fn": "ERC20._transfer",
      "offset": [
        8257,
        8295
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3628": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 55
    },
    "3629": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3630": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "AND",
      "path": "7"
    },
    "3631": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3632": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3633": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3634": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3635": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3636": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3637": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3638": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3639": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3640": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3641": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "ADD",
      "path": "7"
    },
    "3642": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3643": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8498
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3644": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP3",
      "path": "7",
      "statement": 56
    },
    "3645": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3646": {
      "op": "DUP6"
    },
    "3647": {
      "op": "DUP2"
    },
    "3648": {
      "op": "MSTORE"
    },
    "3649": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3650": {
      "fn": "ERC20._transfer",
      "offset": [
        8475,
        8488
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3651": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3684": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3685": {
      "op": "ADD"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3688": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3689": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3690": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3691": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SUB",
      "path": "7"
    },
    "3692": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3693": {
      "fn": "ERC20._transfer",
      "offset": [
        8527,
        8553
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3694": {
      "fn": "ERC20._transfer",
      "offset": [
        8566,
        8603
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 57,
      "value": "0x5F4"
    },
    "3697": {
      "fn": "LiquidXStakePool.collectFeesFromAggregator",
      "offset": [
        3989,
        4189
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3698": {
      "fn": "ERC20._mint",
      "offset": [
        8898,
        9446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "op": "SUB"
    },
    "3707": {
      "fn": "ERC20._mint",
      "offset": [
        8982,
        9003
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 58
    },
    "3708": {
      "branch": 87,
      "fn": "ERC20._mint",
      "offset": [
        8982,
        9003
      ],
      "op": "AND",
      "path": "7"
    },
    "3709": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEC8"
    },
    "3712": {
      "branch": 87,
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3713": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3715": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3722": {
      "op": "SHL"
    },
    "3723": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3724": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3727": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3729": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3730": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "ADD",
      "path": "7"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "MSTORE"
    },
    "3739": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3774": {
      "op": "DUP3"
    },
    "3775": {
      "op": "ADD"
    },
    "3776": {
      "op": "MSTORE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3779": {
      "op": "ADD"
    },
    "3780": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x728"
    },
    "3783": {
      "op": "JUMP"
    },
    "3784": {
      "fn": "ERC20._mint",
      "offset": [
        8974,
        9039
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3785": {
      "fn": "ERC20._mint",
      "offset": [
        9130,
        9136
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 59
    },
    "3786": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9126
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3788": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9126
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3790": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3791": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3792": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3793": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEDA"
    },
    "3796": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3797": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3798": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1340"
    },
    "3801": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        9114,
        9136
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3802": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3803": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3804": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3805": {
      "fn": "ERC20._mint",
      "offset": [
        9114,
        9136
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "SUB"
    },
    "3816": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 60
    },
    "3817": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "AND",
      "path": "7"
    },
    "3818": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9294
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3820": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3821": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3822": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3823": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3825": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3826": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3827": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3828": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3830": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3831": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3832": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9303
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3833": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3834": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3835": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3836": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "ADD",
      "path": "7"
    },
    "3837": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3838": {
      "fn": "ERC20._mint",
      "offset": [
        9285,
        9313
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3839": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 61
    },
    "3840": {
      "op": "DUP5"
    },
    "3841": {
      "op": "DUP2"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3876": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3880": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3881": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3882": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3883": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "SUB",
      "path": "7"
    },
    "3884": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3885": {
      "fn": "ERC20._mint",
      "offset": [
        9340,
        9377
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3886": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "POP",
      "path": "11"
    },
    "3887": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "offset": [
        4195,
        4397
      ],
      "op": "POP",
      "path": "11"
    },
    "3888": {
      "fn": "LiquidXStakePool.liquidationValueChange",
      "jump": "o",
      "offset": [
        4195,
        4397
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3889": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2139,
        2277
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3890": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2228,
        2233
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 62,
      "value": "0x3"
    },
    "3892": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2228,
        2241
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3D"
    },
    "3895": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2236,
        2241
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3896": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2228,
        2233
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3897": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2228,
        2241
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13DA"
    },
    "3900": {
      "fn": "ERC20.initializeERC20",
      "jump": "i",
      "offset": [
        2228,
        2241
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3901": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2228,
        2241
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2252,
        2259
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 63,
      "value": "0x4"
    },
    "3905": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2252,
        2269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67E"
    },
    "3908": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2262,
        2269
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3909": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2252,
        2259
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3910": {
      "fn": "ERC20.initializeERC20",
      "offset": [
        2252,
        2269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13DA"
    },
    "3913": {
      "fn": "ERC20.initializeERC20",
      "jump": "i",
      "offset": [
        2252,
        2269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3914": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3915": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5886,
        5899
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3917": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5886,
        5899
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3920": {
      "op": "NOT"
    },
    "3921": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6254,
        6255
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3922": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6251,
        6252
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3923": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6244,
        6264
      ],
      "op": "MULMOD",
      "path": "19"
    },
    "3924": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6293,
        6294
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3925": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6290,
        6291
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3926": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6286,
        6295
      ],
      "op": "MUL",
      "path": "19"
    },
    "3927": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6277,
        6295
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3928": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6277,
        6295
      ],
      "op": "POP",
      "path": "19"
    },
    "3929": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6344,
        6349
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3930": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6340,
        6342
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3931": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6337,
        6350
      ],
      "op": "LT",
      "path": "19"
    },
    "3932": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6329,
        6334
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3933": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6325,
        6327
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3934": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6321,
        6335
      ],
      "op": "SUB",
      "path": "19"
    },
    "3935": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6317,
        6351
      ],
      "op": "SUB",
      "path": "19"
    },
    "3936": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6308,
        6351
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3937": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6308,
        6351
      ],
      "op": "POP",
      "path": "19"
    },
    "3938": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        6308,
        6351
      ],
      "op": "POP",
      "path": "19"
    },
    "3939": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3940": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "POP",
      "path": "19"
    },
    "3941": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3942": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3943": {
      "fn": "Math512Bits._getMulProds",
      "offset": [
        5820,
        6367
      ],
      "op": "POP",
      "path": "19"
    },
    "3944": {
      "fn": "Math512Bits._getMulProds",
      "jump": "o",
      "offset": [
        5820,
        6367
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3945": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3946": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6971,
        6985
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3948": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7059,
        7064
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3949": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7068,
        7069
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3951": {
      "branch": 88,
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7059,
        7069
      ],
      "op": "SUB",
      "path": "19"
    },
    "3952": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF8A"
    },
    "3955": {
      "branch": 88,
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3956": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7130,
        7141
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 64
    },
    "3957": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7127
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3958": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3959": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF82"
    },
    "3962": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3963": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF82"
    },
    "3966": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x149A"
    },
    "3969": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "jump": "i",
      "offset": [
        7122,
        7141
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3970": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3971": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7122,
        7141
      ],
      "op": "DIV",
      "path": "19"
    },
    "3972": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7113,
        7141
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3973": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7113,
        7141
      ],
      "op": "POP",
      "path": "19"
    },
    "3974": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x101A"
    },
    "3977": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3978": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3979": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7286,
        7297
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 65
    },
    "3980": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7277,
        7282
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3981": {
      "branch": 89,
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7277,
        7297
      ],
      "op": "LT",
      "path": "19"
    },
    "3982": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7273,
        7353
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFB4"
    },
    "3985": {
      "branch": 89,
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7273,
        7353
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3986": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3988": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3989": {
      "op": "PUSH4",
      "value": "0x656B542B"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3998": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3999": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4001": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4002": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "ADD",
      "path": "19"
    },
    "4003": {
      "op": "DUP4"
    },
    "4004": {
      "op": "SWAP1"
    },
    "4005": {
      "op": "MSTORE"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4008": {
      "op": "DUP2"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "op": "DUP6"
    },
    "4011": {
      "op": "SWAP1"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7306,
        7353
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x728"
    },
    "4019": {
      "op": "JUMP"
    },
    "4020": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7273,
        7353
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4021": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7452,
        7469
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4023": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7587,
        7598
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4024": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7584,
        7585
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4025": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7581,
        7582
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4026": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7574,
        7599
      ],
      "op": "MULMOD",
      "path": "19"
    },
    "4027": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8166,
        8167
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4029": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8151,
        8163
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4030": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8151,
        8163
      ],
      "op": "NOT",
      "path": "19"
    },
    "4031": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8151,
        8167
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4032": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8151,
        8167
      ],
      "op": "ADD",
      "path": "19"
    },
    "4033": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8136,
        8168
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4034": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8136,
        8168
      ],
      "op": "AND",
      "path": "19"
    },
    "4035": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8286,
        8311
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "4036": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8286,
        8311
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4037": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8286,
        8311
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4038": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8286,
        8311
      ],
      "op": "DIV",
      "path": "19"
    },
    "4039": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8286,
        8311
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "4040": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8118,
        8133
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4042": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8567,
        8582
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4043": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8567,
        8582
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4044": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8567,
        8582
      ],
      "op": "SUB",
      "path": "19"
    },
    "4045": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8563,
        8592
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4046": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8563,
        8592
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4047": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8563,
        8592
      ],
      "op": "DIV",
      "path": "19"
    },
    "4048": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8559,
        8596
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4049": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8559,
        8596
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4050": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8559,
        8596
      ],
      "op": "ADD",
      "path": "19"
    },
    "4051": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7701,
        7721
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4052": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7701,
        7721
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4053": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7701,
        7721
      ],
      "op": "GT",
      "path": "19"
    },
    "4054": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7690,
        7722
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4055": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7690,
        7722
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4056": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7690,
        7722
      ],
      "op": "SUB",
      "path": "19"
    },
    "4057": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8696,
        8711
      ],
      "op": "SWAP5",
      "path": "19",
      "statement": 66
    },
    "4058": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8696,
        8711
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4059": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8696,
        8711
      ],
      "op": "MUL",
      "path": "19"
    },
    "4060": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7748,
        7769
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4061": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7748,
        7769
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4062": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7748,
        7769
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4063": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7748,
        7769
      ],
      "op": "SUB",
      "path": "19"
    },
    "4064": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8398,
        8417
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4065": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8398,
        8417
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4066": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8398,
        8417
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4067": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8398,
        8417
      ],
      "op": "DIV",
      "path": "19"
    },
    "4068": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8687,
        8711
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4069": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8687,
        8711
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4070": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8687,
        8711
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4071": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8687,
        8711
      ],
      "op": "OR",
      "path": "19"
    },
    "4072": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        8687,
        8711
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4073": {
      "op": "POP"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9082,
        9083
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "4077": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9063,
        9064
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x3"
    },
    "4079": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9063,
        9078
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4080": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9063,
        9078
      ],
      "op": "MUL",
      "path": "19"
    },
    "4081": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9062,
        9083
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4082": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9062,
        9083
      ],
      "op": "XOR",
      "path": "19"
    },
    "4083": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9326,
        9347
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 67
    },
    "4084": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9326,
        9347
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4085": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9326,
        9347
      ],
      "op": "MUL",
      "path": "19"
    },
    "4086": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9322,
        9347
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4087": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9322,
        9347
      ],
      "op": "SUB",
      "path": "19"
    },
    "4088": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9311,
        9347
      ],
      "op": "MUL",
      "path": "19"
    },
    "4089": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9399,
        9420
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 68
    },
    "4090": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9399,
        9420
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4091": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9399,
        9420
      ],
      "op": "MUL",
      "path": "19"
    },
    "4092": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9395,
        9420
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4093": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9395,
        9420
      ],
      "op": "SUB",
      "path": "19"
    },
    "4094": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9384,
        9420
      ],
      "op": "MUL",
      "path": "19"
    },
    "4095": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9473,
        9494
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 69
    },
    "4096": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9473,
        9494
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4097": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9473,
        9494
      ],
      "op": "MUL",
      "path": "19"
    },
    "4098": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9469,
        9494
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4099": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9469,
        9494
      ],
      "op": "SUB",
      "path": "19"
    },
    "4100": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9458,
        9494
      ],
      "op": "MUL",
      "path": "19"
    },
    "4101": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9547,
        9568
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 70
    },
    "4102": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9547,
        9568
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4103": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9547,
        9568
      ],
      "op": "MUL",
      "path": "19"
    },
    "4104": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9543,
        9568
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4105": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9543,
        9568
      ],
      "op": "SUB",
      "path": "19"
    },
    "4106": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9532,
        9568
      ],
      "op": "MUL",
      "path": "19"
    },
    "4107": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9621,
        9642
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 71
    },
    "4108": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9621,
        9642
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4109": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9621,
        9642
      ],
      "op": "MUL",
      "path": "19"
    },
    "4110": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9617,
        9642
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4111": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9617,
        9642
      ],
      "op": "SUB",
      "path": "19"
    },
    "4112": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9606,
        9642
      ],
      "op": "MUL",
      "path": "19"
    },
    "4113": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9696,
        9717
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 72
    },
    "4114": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9696,
        9717
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4115": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9696,
        9717
      ],
      "op": "MUL",
      "path": "19"
    },
    "4116": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9692,
        9717
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4117": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9692,
        9717
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4118": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9692,
        9717
      ],
      "op": "SUB",
      "path": "19"
    },
    "4119": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        9681,
        9717
      ],
      "op": "MUL",
      "path": "19"
    },
    "4120": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        10180,
        10195
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 73
    },
    "4121": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        10180,
        10195
      ],
      "op": "MUL",
      "path": "19"
    },
    "4122": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        7055,
        10220
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4123": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4124": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4125": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "POP",
      "path": "19"
    },
    "4126": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "POP",
      "path": "19"
    },
    "4127": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "POP",
      "path": "19"
    },
    "4128": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "POP",
      "path": "19"
    },
    "4129": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "offset": [
        6799,
        10226
      ],
      "op": "POP",
      "path": "19"
    },
    "4130": {
      "fn": "Math512Bits._getEndOfDivRoundDown",
      "jump": "o",
      "offset": [
        6799,
        10226
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4136": {
      "op": "DUP1"
    },
    "4137": {
      "op": "DUP4"
    },
    "4138": {
      "op": "MSTORE"
    },
    "4139": {
      "op": "DUP4"
    },
    "4140": {
      "op": "MLOAD"
    },
    "4141": {
      "op": "DUP1"
    },
    "4142": {
      "op": "DUP3"
    },
    "4143": {
      "op": "DUP6"
    },
    "4144": {
      "op": "ADD"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4148": {
      "op": "JUMPDEST"
    },
    "4149": {
      "op": "DUP2"
    },
    "4150": {
      "op": "DUP2"
    },
    "4151": {
      "op": "LT"
    },
    "4152": {
      "op": "ISZERO"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4156": {
      "op": "JUMPI"
    },
    "4157": {
      "op": "DUP6"
    },
    "4158": {
      "op": "DUP2"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "DUP4"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "MLOAD"
    },
    "4163": {
      "op": "DUP6"
    },
    "4164": {
      "op": "DUP3"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4168": {
      "op": "ADD"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "DUP3"
    },
    "4171": {
      "op": "ADD"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0x1034"
    },
    "4175": {
      "op": "JUMP"
    },
    "4176": {
      "op": "JUMPDEST"
    },
    "4177": {
      "op": "DUP2"
    },
    "4178": {
      "op": "DUP2"
    },
    "4179": {
      "op": "GT"
    },
    "4180": {
      "op": "ISZERO"
    },
    "4181": {
      "op": "PUSH2",
      "value": "0x1062"
    },
    "4184": {
      "op": "JUMPI"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4189": {
      "op": "DUP4"
    },
    "4190": {
      "op": "DUP8"
    },
    "4191": {
      "op": "ADD"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "JUMPDEST"
    },
    "4195": {
      "op": "POP"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4201": {
      "op": "NOT"
    },
    "4202": {
      "op": "AND"
    },
    "4203": {
      "op": "SWAP3"
    },
    "4204": {
      "op": "SWAP1"
    },
    "4205": {
      "op": "SWAP3"
    },
    "4206": {
      "op": "ADD"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "SWAP4"
    },
    "4211": {
      "op": "SWAP3"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "op": "POP"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "jump": "o",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "SUB"
    },
    "4225": {
      "op": "DUP2"
    },
    "4226": {
      "op": "AND"
    },
    "4227": {
      "op": "DUP2"
    },
    "4228": {
      "op": "EQ"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x108D"
    },
    "4232": {
      "op": "JUMPI"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4235": {
      "op": "DUP1"
    },
    "4236": {
      "op": "REVERT"
    },
    "4237": {
      "op": "JUMPDEST"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "jump": "o",
      "op": "JUMP"
    },
    "4240": {
      "op": "JUMPDEST"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4243": {
      "op": "DUP1"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4246": {
      "op": "DUP4"
    },
    "4247": {
      "op": "DUP6"
    },
    "4248": {
      "op": "SUB"
    },
    "4249": {
      "op": "SLT"
    },
    "4250": {
      "op": "ISZERO"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "DUP1"
    },
    "4258": {
      "op": "REVERT"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "DUP3"
    },
    "4261": {
      "op": "CALLDATALOAD"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0x10AE"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4269": {
      "jump": "i",
      "op": "JUMP"
    },
    "4270": {
      "op": "JUMPDEST"
    },
    "4271": {
      "op": "SWAP5"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4274": {
      "op": "SWAP4"
    },
    "4275": {
      "op": "SWAP1"
    },
    "4276": {
      "op": "SWAP4"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "CALLDATALOAD"
    },
    "4279": {
      "op": "SWAP4"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "op": "POP"
    },
    "4283": {
      "jump": "o",
      "op": "JUMP"
    },
    "4284": {
      "op": "JUMPDEST"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4289": {
      "op": "DUP3"
    },
    "4290": {
      "op": "DUP5"
    },
    "4291": {
      "op": "SUB"
    },
    "4292": {
      "op": "SLT"
    },
    "4293": {
      "op": "ISZERO"
    },
    "4294": {
      "op": "PUSH2",
      "value": "0x10CE"
    },
    "4297": {
      "op": "JUMPI"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4300": {
      "op": "DUP1"
    },
    "4301": {
      "op": "REVERT"
    },
    "4302": {
      "op": "JUMPDEST"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "op": "CALLDATALOAD"
    },
    "4305": {
      "op": "SWAP2"
    },
    "4306": {
      "op": "SWAP1"
    },
    "4307": {
      "op": "POP"
    },
    "4308": {
      "jump": "o",
      "op": "JUMP"
    },
    "4309": {
      "op": "JUMPDEST"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4312": {
      "op": "DUP1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4317": {
      "op": "DUP5"
    },
    "4318": {
      "op": "DUP7"
    },
    "4319": {
      "op": "SUB"
    },
    "4320": {
      "op": "SLT"
    },
    "4321": {
      "op": "ISZERO"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4325": {
      "op": "JUMPI"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4328": {
      "op": "DUP1"
    },
    "4329": {
      "op": "REVERT"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "DUP4"
    },
    "4332": {
      "op": "CALLDATALOAD"
    },
    "4333": {
      "op": "PUSH2",
      "value": "0x10F5"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4340": {
      "jump": "i",
      "op": "JUMP"
    },
    "4341": {
      "op": "JUMPDEST"
    },
    "4342": {
      "op": "SWAP3"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4346": {
      "op": "DUP5"
    },
    "4347": {
      "op": "ADD"
    },
    "4348": {
      "op": "CALLDATALOAD"
    },
    "4349": {
      "op": "PUSH2",
      "value": "0x1105"
    },
    "4352": {
      "op": "DUP2"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4356": {
      "jump": "i",
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "SWAP3"
    },
    "4359": {
      "op": "SWAP6"
    },
    "4360": {
      "op": "SWAP3"
    },
    "4361": {
      "op": "SWAP5"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "op": "POP"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4367": {
      "op": "SWAP2"
    },
    "4368": {
      "op": "SWAP1"
    },
    "4369": {
      "op": "SWAP2"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "CALLDATALOAD"
    },
    "4372": {
      "op": "SWAP1"
    },
    "4373": {
      "jump": "o",
      "op": "JUMP"
    },
    "4374": {
      "op": "JUMPDEST"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4379": {
      "op": "DUP3"
    },
    "4380": {
      "op": "DUP5"
    },
    "4381": {
      "op": "SUB"
    },
    "4382": {
      "op": "SLT"
    },
    "4383": {
      "op": "ISZERO"
    },
    "4384": {
      "op": "PUSH2",
      "value": "0x1128"
    },
    "4387": {
      "op": "JUMPI"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4390": {
      "op": "DUP1"
    },
    "4391": {
      "op": "REVERT"
    },
    "4392": {
      "op": "JUMPDEST"
    },
    "4393": {
      "op": "DUP2"
    },
    "4394": {
      "op": "CALLDATALOAD"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x1133"
    },
    "4398": {
      "op": "DUP2"
    },
    "4399": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4402": {
      "jump": "i",
      "op": "JUMP"
    },
    "4403": {
      "op": "JUMPDEST"
    },
    "4404": {
      "op": "SWAP4"
    },
    "4405": {
      "op": "SWAP3"
    },
    "4406": {
      "op": "POP"
    },
    "4407": {
      "op": "POP"
    },
    "4408": {
      "op": "POP"
    },
    "4409": {
      "jump": "o",
      "op": "JUMP"
    },
    "4410": {
      "op": "JUMPDEST"
    },
    "4411": {
      "op": "DUP1"
    },
    "4412": {
      "op": "ISZERO"
    },
    "4413": {
      "op": "ISZERO"
    },
    "4414": {
      "op": "DUP2"
    },
    "4415": {
      "op": "EQ"
    },
    "4416": {
      "op": "PUSH2",
      "value": "0x108D"
    },
    "4419": {
      "op": "JUMPI"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4422": {
      "op": "DUP1"
    },
    "4423": {
      "op": "REVERT"
    },
    "4424": {
      "op": "JUMPDEST"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4427": {
      "op": "DUP1"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4430": {
      "op": "DUP4"
    },
    "4431": {
      "op": "DUP6"
    },
    "4432": {
      "op": "SUB"
    },
    "4433": {
      "op": "SLT"
    },
    "4434": {
      "op": "ISZERO"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4438": {
      "op": "JUMPI"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4441": {
      "op": "DUP1"
    },
    "4442": {
      "op": "REVERT"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "DUP3"
    },
    "4445": {
      "op": "CALLDATALOAD"
    },
    "4446": {
      "op": "SWAP2"
    },
    "4447": {
      "op": "POP"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4450": {
      "op": "DUP4"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "CALLDATALOAD"
    },
    "4453": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4456": {
      "op": "DUP2"
    },
    "4457": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "4460": {
      "jump": "i",
      "op": "JUMP"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "DUP1"
    },
    "4463": {
      "op": "SWAP2"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "op": "SWAP3"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "op": "SWAP3"
    },
    "4469": {
      "op": "SWAP1"
    },
    "4470": {
      "op": "POP"
    },
    "4471": {
      "jump": "o",
      "op": "JUMP"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4480": {
      "op": "SHL"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "MSTORE"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4488": {
      "op": "MSTORE"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4493": {
      "op": "REVERT"
    },
    "4494": {
      "op": "JUMPDEST"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4497": {
      "op": "DUP3"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4500": {
      "op": "DUP4"
    },
    "4501": {
      "op": "ADD"
    },
    "4502": {
      "op": "SLT"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4506": {
      "op": "JUMPI"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "REVERT"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "CALLDATALOAD"
    },
    "4514": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4523": {
      "op": "DUP1"
    },
    "4524": {
      "op": "DUP3"
    },
    "4525": {
      "op": "GT"
    },
    "4526": {
      "op": "ISZERO"
    },
    "4527": {
      "op": "PUSH2",
      "value": "0x11BA"
    },
    "4530": {
      "op": "JUMPI"
    },
    "4531": {
      "op": "PUSH2",
      "value": "0x11BA"
    },
    "4534": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4537": {
      "jump": "i",
      "op": "JUMP"
    },
    "4538": {
      "op": "JUMPDEST"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4541": {
      "op": "MLOAD"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4544": {
      "op": "DUP4"
    },
    "4545": {
      "op": "ADD"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4548": {
      "op": "NOT"
    },
    "4549": {
      "op": "SWAP1"
    },
    "4550": {
      "op": "DUP2"
    },
    "4551": {
      "op": "AND"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4554": {
      "op": "ADD"
    },
    "4555": {
      "op": "AND"
    },
    "4556": {
      "op": "DUP2"
    },
    "4557": {
      "op": "ADD"
    },
    "4558": {
      "op": "SWAP1"
    },
    "4559": {
      "op": "DUP3"
    },
    "4560": {
      "op": "DUP3"
    },
    "4561": {
      "op": "GT"
    },
    "4562": {
      "op": "DUP2"
    },
    "4563": {
      "op": "DUP4"
    },
    "4564": {
      "op": "LT"
    },
    "4565": {
      "op": "OR"
    },
    "4566": {
      "op": "ISZERO"
    },
    "4567": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "4570": {
      "op": "JUMPI"
    },
    "4571": {
      "op": "PUSH2",
      "value": "0x11E2"
    },
    "4574": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4577": {
      "jump": "i",
      "op": "JUMP"
    },
    "4578": {
      "op": "JUMPDEST"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4582": {
      "op": "MSTORE"
    },
    "4583": {
      "op": "DUP4"
    },
    "4584": {
      "op": "DUP2"
    },
    "4585": {
      "op": "MSTORE"
    },
    "4586": {
      "op": "DUP7"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4589": {
      "op": "DUP6"
    },
    "4590": {
      "op": "DUP9"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "GT"
    },
    "4594": {
      "op": "ISZERO"
    },
    "4595": {
      "op": "PUSH2",
      "value": "0x11FB"
    },
    "4598": {
      "op": "JUMPI"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4601": {
      "op": "DUP1"
    },
    "4602": {
      "op": "REVERT"
    },
    "4603": {
      "op": "JUMPDEST"
    },
    "4604": {
      "op": "DUP4"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4607": {
      "op": "DUP8"
    },
    "4608": {
      "op": "ADD"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "op": "DUP4"
    },
    "4612": {
      "op": "ADD"
    },
    "4613": {
      "op": "CALLDATACOPY"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4618": {
      "op": "DUP6"
    },
    "4619": {
      "op": "DUP4"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "ADD"
    },
    "4622": {
      "op": "MSTORE"
    },
    "4623": {
      "op": "DUP1"
    },
    "4624": {
      "op": "SWAP5"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "POP"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "op": "POP"
    },
    "4629": {
      "op": "POP"
    },
    "4630": {
      "op": "SWAP3"
    },
    "4631": {
      "op": "SWAP2"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "op": "POP"
    },
    "4634": {
      "jump": "o",
      "op": "JUMP"
    },
    "4635": {
      "op": "JUMPDEST"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4638": {
      "op": "DUP1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "DUP7"
    },
    "4647": {
      "op": "DUP9"
    },
    "4648": {
      "op": "SUB"
    },
    "4649": {
      "op": "SLT"
    },
    "4650": {
      "op": "ISZERO"
    },
    "4651": {
      "op": "PUSH2",
      "value": "0x1233"
    },
    "4654": {
      "op": "JUMPI"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4657": {
      "op": "DUP1"
    },
    "4658": {
      "op": "REVERT"
    },
    "4659": {
      "op": "JUMPDEST"
    },
    "4660": {
      "op": "DUP6"
    },
    "4661": {
      "op": "CALLDATALOAD"
    },
    "4662": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4671": {
      "op": "DUP1"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "GT"
    },
    "4674": {
      "op": "ISZERO"
    },
    "4675": {
      "op": "PUSH2",
      "value": "0x124B"
    },
    "4678": {
      "op": "JUMPI"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4681": {
      "op": "DUP1"
    },
    "4682": {
      "op": "REVERT"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "PUSH2",
      "value": "0x1257"
    },
    "4687": {
      "op": "DUP10"
    },
    "4688": {
      "op": "DUP4"
    },
    "4689": {
      "op": "DUP11"
    },
    "4690": {
      "op": "ADD"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4694": {
      "jump": "i",
      "op": "JUMP"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "SWAP7"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4700": {
      "op": "DUP9"
    },
    "4701": {
      "op": "ADD"
    },
    "4702": {
      "op": "CALLDATALOAD"
    },
    "4703": {
      "op": "SWAP2"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "DUP1"
    },
    "4706": {
      "op": "DUP3"
    },
    "4707": {
      "op": "GT"
    },
    "4708": {
      "op": "ISZERO"
    },
    "4709": {
      "op": "PUSH2",
      "value": "0x126D"
    },
    "4712": {
      "op": "JUMPI"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "DUP1"
    },
    "4716": {
      "op": "REVERT"
    },
    "4717": {
      "op": "JUMPDEST"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "PUSH2",
      "value": "0x127A"
    },
    "4722": {
      "op": "DUP9"
    },
    "4723": {
      "op": "DUP3"
    },
    "4724": {
      "op": "DUP10"
    },
    "4725": {
      "op": "ADD"
    },
    "4726": {
      "op": "PUSH2",
      "value": "0x118E"
    },
    "4729": {
      "jump": "i",
      "op": "JUMP"
    },
    "4730": {
      "op": "JUMPDEST"
    },
    "4731": {
      "op": "SWAP5"
    },
    "4732": {
      "op": "POP"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4736": {
      "op": "DUP7"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "CALLDATALOAD"
    },
    "4739": {
      "op": "PUSH2",
      "value": "0x128B"
    },
    "4742": {
      "op": "DUP2"
    },
    "4743": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4746": {
      "jump": "i",
      "op": "JUMP"
    },
    "4747": {
      "op": "JUMPDEST"
    },
    "4748": {
      "op": "SWAP3"
    },
    "4749": {
      "op": "POP"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4752": {
      "op": "DUP7"
    },
    "4753": {
      "op": "ADD"
    },
    "4754": {
      "op": "CALLDATALOAD"
    },
    "4755": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4760": {
      "op": "DUP2"
    },
    "4761": {
      "op": "AND"
    },
    "4762": {
      "op": "DUP2"
    },
    "4763": {
      "op": "EQ"
    },
    "4764": {
      "op": "PUSH2",
      "value": "0x12A4"
    },
    "4767": {
      "op": "JUMPI"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4770": {
      "op": "DUP1"
    },
    "4771": {
      "op": "REVERT"
    },
    "4772": {
      "op": "JUMPDEST"
    },
    "4773": {
      "op": "SWAP2"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4777": {
      "op": "DUP7"
    },
    "4778": {
      "op": "ADD"
    },
    "4779": {
      "op": "CALLDATALOAD"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x12B4"
    },
    "4783": {
      "op": "DUP2"
    },
    "4784": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4787": {
      "jump": "i",
      "op": "JUMP"
    },
    "4788": {
      "op": "JUMPDEST"
    },
    "4789": {
      "op": "DUP1"
    },
    "4790": {
      "op": "SWAP2"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "op": "SWAP3"
    },
    "4794": {
      "op": "SWAP6"
    },
    "4795": {
      "op": "POP"
    },
    "4796": {
      "op": "SWAP3"
    },
    "4797": {
      "op": "SWAP6"
    },
    "4798": {
      "op": "SWAP1"
    },
    "4799": {
      "op": "SWAP4"
    },
    "4800": {
      "op": "POP"
    },
    "4801": {
      "jump": "o",
      "op": "JUMP"
    },
    "4802": {
      "op": "JUMPDEST"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4805": {
      "op": "DUP1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4808": {
      "op": "DUP4"
    },
    "4809": {
      "op": "DUP6"
    },
    "4810": {
      "op": "SUB"
    },
    "4811": {
      "op": "SLT"
    },
    "4812": {
      "op": "ISZERO"
    },
    "4813": {
      "op": "PUSH2",
      "value": "0x12D5"
    },
    "4816": {
      "op": "JUMPI"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4819": {
      "op": "DUP1"
    },
    "4820": {
      "op": "REVERT"
    },
    "4821": {
      "op": "JUMPDEST"
    },
    "4822": {
      "op": "DUP3"
    },
    "4823": {
      "op": "CALLDATALOAD"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0x12E0"
    },
    "4827": {
      "op": "DUP2"
    },
    "4828": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4831": {
      "jump": "i",
      "op": "JUMP"
    },
    "4832": {
      "op": "JUMPDEST"
    },
    "4833": {
      "op": "SWAP2"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4837": {
      "op": "DUP4"
    },
    "4838": {
      "op": "ADD"
    },
    "4839": {
      "op": "CALLDATALOAD"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4843": {
      "op": "DUP2"
    },
    "4844": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4847": {
      "jump": "i",
      "op": "JUMP"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4851": {
      "op": "DUP2"
    },
    "4852": {
      "op": "DUP2"
    },
    "4853": {
      "op": "SHR"
    },
    "4854": {
      "op": "SWAP1"
    },
    "4855": {
      "op": "DUP3"
    },
    "4856": {
      "op": "AND"
    },
    "4857": {
      "op": "DUP1"
    },
    "4858": {
      "op": "PUSH2",
      "value": "0x1304"
    },
    "4861": {
      "op": "JUMPI"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "op": "AND"
    },
    "4866": {
      "op": "SWAP2"
    },
    "4867": {
      "op": "POP"
    },
    "4868": {
      "op": "JUMPDEST"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4871": {
      "op": "DUP3"
    },
    "4872": {
      "op": "LT"
    },
    "4873": {
      "op": "DUP2"
    },
    "4874": {
      "op": "SUB"
    },
    "4875": {
      "op": "PUSH2",
      "value": "0x1324"
    },
    "4878": {
      "op": "JUMPI"
    },
    "4879": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4886": {
      "op": "SHL"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4889": {
      "op": "MSTORE"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4899": {
      "op": "REVERT"
    },
    "4900": {
      "op": "JUMPDEST"
    },
    "4901": {
      "op": "POP"
    },
    "4902": {
      "op": "SWAP2"
    },
    "4903": {
      "op": "SWAP1"
    },
    "4904": {
      "op": "POP"
    },
    "4905": {
      "jump": "o",
      "op": "JUMP"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4914": {
      "op": "SHL"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4917": {
      "op": "MSTORE"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4922": {
      "op": "MSTORE"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4927": {
      "op": "REVERT"
    },
    "4928": {
      "op": "JUMPDEST"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4931": {
      "op": "DUP3"
    },
    "4932": {
      "op": "NOT"
    },
    "4933": {
      "op": "DUP3"
    },
    "4934": {
      "op": "GT"
    },
    "4935": {
      "op": "ISZERO"
    },
    "4936": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4939": {
      "op": "JUMPI"
    },
    "4940": {
      "op": "PUSH2",
      "value": "0x1353"
    },
    "4943": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4946": {
      "jump": "i",
      "op": "JUMP"
    },
    "4947": {
      "op": "JUMPDEST"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "op": "ADD"
    },
    "4950": {
      "op": "SWAP1"
    },
    "4951": {
      "jump": "o",
      "op": "JUMP"
    },
    "4952": {
      "op": "JUMPDEST"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4955": {
      "op": "DUP3"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "LT"
    },
    "4958": {
      "op": "ISZERO"
    },
    "4959": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "4962": {
      "op": "JUMPI"
    },
    "4963": {
      "op": "PUSH2",
      "value": "0x136A"
    },
    "4966": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4969": {
      "jump": "i",
      "op": "JUMP"
    },
    "4970": {
      "op": "JUMPDEST"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "op": "SUB"
    },
    "4973": {
      "op": "SWAP1"
    },
    "4974": {
      "jump": "o",
      "op": "JUMP"
    },
    "4975": {
      "op": "JUMPDEST"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4980": {
      "op": "DUP3"
    },
    "4981": {
      "op": "DUP5"
    },
    "4982": {
      "op": "SUB"
    },
    "4983": {
      "op": "SLT"
    },
    "4984": {
      "op": "ISZERO"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "4988": {
      "op": "JUMPI"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4991": {
      "op": "DUP1"
    },
    "4992": {
      "op": "REVERT"
    },
    "4993": {
      "op": "JUMPDEST"
    },
    "4994": {
      "op": "DUP2"
    },
    "4995": {
      "op": "MLOAD"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x1133"
    },
    "4999": {
      "op": "DUP2"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0x113A"
    },
    "5003": {
      "jump": "i",
      "op": "JUMP"
    },
    "5004": {
      "op": "JUMPDEST"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5007": {
      "op": "DUP3"
    },
    "5008": {
      "op": "GT"
    },
    "5009": {
      "op": "ISZERO"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x67E"
    },
    "5013": {
      "op": "JUMPI"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5016": {
      "op": "DUP2"
    },
    "5017": {
      "op": "DUP2"
    },
    "5018": {
      "op": "MSTORE"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5021": {
      "op": "DUP2"
    },
    "5022": {
      "op": "KECCAK256"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5025": {
      "op": "DUP6"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5029": {
      "op": "SHR"
    },
    "5030": {
      "op": "DUP2"
    },
    "5031": {
      "op": "ADD"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5034": {
      "op": "DUP7"
    },
    "5035": {
      "op": "LT"
    },
    "5036": {
      "op": "ISZERO"
    },
    "5037": {
      "op": "PUSH2",
      "value": "0x13B3"
    },
    "5040": {
      "op": "JUMPI"
    },
    "5041": {
      "op": "POP"
    },
    "5042": {
      "op": "DUP1"
    },
    "5043": {
      "op": "JUMPDEST"
    },
    "5044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5046": {
      "op": "DUP6"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5050": {
      "op": "SHR"
    },
    "5051": {
      "op": "DUP3"
    },
    "5052": {
      "op": "ADD"
    },
    "5053": {
      "op": "SWAP2"
    },
    "5054": {
      "op": "POP"
    },
    "5055": {
      "op": "JUMPDEST"
    },
    "5056": {
      "op": "DUP2"
    },
    "5057": {
      "op": "DUP2"
    },
    "5058": {
      "op": "LT"
    },
    "5059": {
      "op": "ISZERO"
    },
    "5060": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5063": {
      "op": "JUMPI"
    },
    "5064": {
      "op": "DUP3"
    },
    "5065": {
      "op": "DUP2"
    },
    "5066": {
      "op": "SSTORE"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5069": {
      "op": "ADD"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x13BF"
    },
    "5073": {
      "op": "JUMP"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "op": "POP"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "jump": "o",
      "op": "JUMP"
    },
    "5082": {
      "op": "JUMPDEST"
    },
    "5083": {
      "op": "DUP2"
    },
    "5084": {
      "op": "MLOAD"
    },
    "5085": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5094": {
      "op": "DUP2"
    },
    "5095": {
      "op": "GT"
    },
    "5096": {
      "op": "ISZERO"
    },
    "5097": {
      "op": "PUSH2",
      "value": "0x13F4"
    },
    "5100": {
      "op": "JUMPI"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x13F4"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "5107": {
      "jump": "i",
      "op": "JUMP"
    },
    "5108": {
      "op": "JUMPDEST"
    },
    "5109": {
      "op": "PUSH2",
      "value": "0x1408"
    },
    "5112": {
      "op": "DUP2"
    },
    "5113": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5116": {
      "op": "DUP5"
    },
    "5117": {
      "op": "SLOAD"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "5121": {
      "jump": "i",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "DUP5"
    },
    "5124": {
      "op": "PUSH2",
      "value": "0x138C"
    },
    "5127": {
      "jump": "i",
      "op": "JUMP"
    },
    "5128": {
      "op": "JUMPDEST"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "op": "DUP1"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5134": {
      "op": "DUP4"
    },
    "5135": {
      "op": "GT"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "DUP2"
    },
    "5139": {
      "op": "EQ"
    },
    "5140": {
      "op": "PUSH2",
      "value": "0x143D"
    },
    "5143": {
      "op": "JUMPI"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5146": {
      "op": "DUP5"
    },
    "5147": {
      "op": "ISZERO"
    },
    "5148": {
      "op": "PUSH2",
      "value": "0x1425"
    },
    "5151": {
      "op": "JUMPI"
    },
    "5152": {
      "op": "POP"
    },
    "5153": {
      "op": "DUP6"
    },
    "5154": {
      "op": "DUP4"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "MLOAD"
    },
    "5157": {
      "op": "JUMPDEST"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5160": {
      "op": "NOT"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5163": {
      "op": "DUP7"
    },
    "5164": {
      "op": "SWAP1"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "op": "SHR"
    },
    "5167": {
      "op": "NOT"
    },
    "5168": {
      "op": "AND"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5171": {
      "op": "DUP6"
    },
    "5172": {
      "op": "SWAP1"
    },
    "5173": {
      "op": "SHL"
    },
    "5174": {
      "op": "OR"
    },
    "5175": {
      "op": "DUP6"
    },
    "5176": {
      "op": "SSTORE"
    },
    "5177": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5180": {
      "op": "JUMP"
    },
    "5181": {
      "op": "JUMPDEST"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5184": {
      "op": "DUP6"
    },
    "5185": {
      "op": "DUP2"
    },
    "5186": {
      "op": "MSTORE"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5189": {
      "op": "DUP2"
    },
    "5190": {
      "op": "KECCAK256"
    },
    "5191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5193": {
      "op": "NOT"
    },
    "5194": {
      "op": "DUP7"
    },
    "5195": {
      "op": "AND"
    },
    "5196": {
      "op": "SWAP2"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "DUP3"
    },
    "5199": {
      "op": "DUP2"
    },
    "5200": {
      "op": "LT"
    },
    "5201": {
      "op": "ISZERO"
    },
    "5202": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5205": {
      "op": "JUMPI"
    },
    "5206": {
      "op": "DUP9"
    },
    "5207": {
      "op": "DUP7"
    },
    "5208": {
      "op": "ADD"
    },
    "5209": {
      "op": "MLOAD"
    },
    "5210": {
      "op": "DUP3"
    },
    "5211": {
      "op": "SSTORE"
    },
    "5212": {
      "op": "SWAP5"
    },
    "5213": {
      "op": "DUP5"
    },
    "5214": {
      "op": "ADD"
    },
    "5215": {
      "op": "SWAP5"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "SWAP1"
    },
    "5219": {
      "op": "SWAP2"
    },
    "5220": {
      "op": "ADD"
    },
    "5221": {
      "op": "SWAP1"
    },
    "5222": {
      "op": "DUP5"
    },
    "5223": {
      "op": "ADD"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5227": {
      "op": "JUMP"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "POP"
    },
    "5230": {
      "op": "DUP6"
    },
    "5231": {
      "op": "DUP3"
    },
    "5232": {
      "op": "LT"
    },
    "5233": {
      "op": "ISZERO"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x148A"
    },
    "5237": {
      "op": "JUMPI"
    },
    "5238": {
      "op": "DUP8"
    },
    "5239": {
      "op": "DUP6"
    },
    "5240": {
      "op": "ADD"
    },
    "5241": {
      "op": "MLOAD"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5244": {
      "op": "NOT"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5247": {
      "op": "DUP9"
    },
    "5248": {
      "op": "SWAP1"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5252": {
      "op": "AND"
    },
    "5253": {
      "op": "SHR"
    },
    "5254": {
      "op": "NOT"
    },
    "5255": {
      "op": "AND"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "SSTORE"
    },
    "5258": {
      "op": "JUMPDEST"
    },
    "5259": {
      "op": "POP"
    },
    "5260": {
      "op": "POP"
    },
    "5261": {
      "op": "POP"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "op": "POP"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "SWAP1"
    },
    "5267": {
      "op": "DUP2"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "SWAP1"
    },
    "5271": {
      "op": "SSTORE"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "jump": "o",
      "op": "JUMP"
    },
    "5274": {
      "op": "JUMPDEST"
    },
    "5275": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5282": {
      "op": "SHL"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5285": {
      "op": "MSTORE"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5290": {
      "op": "MSTORE"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5295": {
      "op": "REVERT"
    }
  },
  "sha1": "967c01585f878e930d9032ec11686660fa673219",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\nimport './ERC20.sol';\nimport './LiquidXErrors.sol';\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport './library/Math512Bits.sol';\n\ncontract LiquidXStakePool is ERC20, ReentrancyGuard{\n    using Math512Bits for uint256;\n    address private liquidxAggregator; // this is the same as liquidxAggregator\n    address private factory;\n    IERC20 private stakeToken;\n    uint32 private leverageAllowedMax; // 16X16\n    uint256 private totalReserve;\n    uint256 private extractableReserve;\n\n    event ShareMinted(address to_, uint256 amount_);\n\n    modifier onlyLiquidXAggregator(){\n        require(msg.sender == liquidxAggregator);\n        _;\n    }\n\n    modifier onlyFactory(){\n        require(msg.sender == factory);\n        _;\n    }\n\n    /// @dev update reserve state before withdraw or stake happened\n    modifier updateReserve(uint256 amount_, bool increment_){\n        if(increment_){\n            totalReserve += amount_;\n            extractableReserve += amount_;\n        }\n        else{\n            require(amount_ < extractableReserve);\n            totalReserve -= amount_;\n            extractableReserve -= amount_;\n        }\n        _;\n    }\n\n    modifier updateOnlyExtractable(uint256 amount_, bool increment_){\n        if(increment_){\n            extractableReserve += amount_;\n        }\n        else{\n            require(amount_ < extractableReserve);\n            extractableReserve -= amount_;\n        }\n        _;\n    }\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    /// @dev using create2 to instantiate contract LiquidXStakePool and then call this function to initialize the contract.\n    /// params\n    /// - name_: the name of pool share token corresponding to the token as assets staked in the pool.\n    /// - symbol_: abbreviation of 'name_'\n    /// - stakeToken_: address of token as assets staked in the pool.\n    /// - leverageAllowedMax_: max allowed leverage to use for Aggregator to borrow money on behalf of managers;\n    function initializeStakePool(string memory name_, string memory symbol_, IERC20 stakeToken_, uint32 leverageAllowedMax_, address liquidxAggregator_) external onlyFactory {\n        initializeERC20(name_, symbol_);\n        stakeToken = stakeToken_;\n        leverageAllowedMax = leverageAllowedMax_;\n        liquidxAggregator = liquidxAggregator_;\n    }\n\n    /// @dev stake assets and get corresponding pool share token\n    function mintShare(uint256 amountIn_) external updateReserve(amountIn_, true) nonReentrant returns(uint256 shareMinted){\n        stakeToken.transferFrom(msg.sender, address(this), amountIn_);\n        if(totalSupply() > 0){\n            ///shareMinted = amountIn_ * totalSupply() / totalReserve;\n            shareMinted = amountIn_.mulDivRoundDown(totalSupply(), totalReserve);\n        }else{\n            shareMinted = amountIn_;\n        }\n        _mint(msg.sender, shareMinted);\n        emit ShareMinted(msg.sender, shareMinted);\n    }\n\n    function burnShare(uint256 amountOut_) external updateReserve(amountOut_, false) nonReentrant returns(uint256 shareBurned){\n        if(totalSupply() > 0){\n            ///shareBurned = amountOut_ * totalSupply() / totalReserve;\n            shareBurned = amountOut_.mulDivRoundDown(totalSupply(), totalReserve);\n            _burn(msg.sender, shareBurned);\n            stakeToken.transfer(msg.sender, amountOut_);\n        }\n        else{\n            revert LiquidXStakePool__PoolNotEstablished();\n        }\n    }\n\n    function borrowFromAggregator(address to_, uint256 amountOut_) external onlyLiquidXAggregator updateOnlyExtractable(amountOut_, false) nonReentrant {\n        stakeToken.transfer(to_, amountOut_);\n    }\n\n    function repayFromAggregator(uint256 amountIn_) external onlyLiquidXAggregator updateOnlyExtractable(amountIn_, true) nonReentrant{\n        /// Aggregator need transfer first, then update reserve\n    }\n\n    function collectFeesFromAggregator(uint256 amountIn_) external onlyLiquidXAggregator updateReserve(amountIn_, true) nonReentrant {\n        /// Aggregator need transfer first, then update reserve\n    }\n\n    function liquidationValueChange(uint256 amount_, bool increment_) external onlyLiquidXAggregator nonReentrant{\n        if(increment_) totalReserve += amount_;\n        else totalReserve -= amount_;\n    }\n\n    function getLiquidXAggregator() public view returns(address){\n        return liquidxAggregator;\n    }\n\n    function getStakeTokenAddress() public view returns(address){\n        return address(stakeToken);\n    }\n\n    function getLeverageAllowedMax() public view returns(uint32){\n        return leverageAllowedMax;\n    }\n\n    function getTotalReserve() public view returns(uint256){\n        return totalReserve;\n    }\n\n    function getExtractableReserve() public view returns(uint256){\n        return extractableReserve;\n    }\n}\n",
  "sourceMap": "266:4663:11:-:0;;;1567:58;;;;;;;;;-1:-1:-1;1716:1:0;1821:7;:22;1598:7:11;:20;;-1:-1:-1;;;;;;1598:20:11;1608:10;1598:20;;;266:4663;;;;;;",
  "sourcePath": "contracts/LiquidXStakePool.sol",
  "type": "contract"
}